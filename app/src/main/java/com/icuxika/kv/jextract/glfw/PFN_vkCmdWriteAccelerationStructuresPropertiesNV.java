// Generated by jextract

package com.icuxika.kv.jextract.glfw;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * void (*PFN_vkCmdWriteAccelerationStructuresPropertiesNV)(struct VkCommandBuffer_T* commandBuffer,unsigned int accelerationStructureCount,struct VkAccelerationStructureNV_T** pAccelerationStructures,enum VkQueryType queryType,struct VkQueryPool_T* queryPool,unsigned int firstQuery);
 * }
 */
public interface PFN_vkCmdWriteAccelerationStructuresPropertiesNV {

    void apply(java.lang.foreign.MemorySegment commandBuffer, int accelerationStructureCount, java.lang.foreign.MemorySegment pAccelerationStructures, int queryType, java.lang.foreign.MemorySegment queryPool, int firstQuery);
    static MemorySegment allocate(PFN_vkCmdWriteAccelerationStructuresPropertiesNV fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$737.const$4, fi, constants$737.const$3, scope);
    }
    static PFN_vkCmdWriteAccelerationStructuresPropertiesNV ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (java.lang.foreign.MemorySegment _commandBuffer, int _accelerationStructureCount, java.lang.foreign.MemorySegment _pAccelerationStructures, int _queryType, java.lang.foreign.MemorySegment _queryPool, int _firstQuery) -> {
            try {
                constants$737.const$5.invokeExact(symbol, _commandBuffer, _accelerationStructureCount, _pAccelerationStructures, _queryType, _queryPool, _firstQuery);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


