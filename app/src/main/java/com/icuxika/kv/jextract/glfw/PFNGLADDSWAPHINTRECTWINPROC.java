// Generated by jextract

package com.icuxika.kv.jextract.glfw;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * void (*PFNGLADDSWAPHINTRECTWINPROC)(int x,int y,int width,int height);
 * }
 */
public interface PFNGLADDSWAPHINTRECTWINPROC {

    void apply(int x, int y, int width, int height);
    static MemorySegment allocate(PFNGLADDSWAPHINTRECTWINPROC fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$1148.const$1, fi, constants$1091.const$0, scope);
    }
    static PFNGLADDSWAPHINTRECTWINPROC ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (int _x, int _y, int _width, int _height) -> {
            try {
                constants$1148.const$2.invokeExact(symbol, _x, _y, _width, _height);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


