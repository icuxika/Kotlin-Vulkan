// Generated by jextract

package com.icuxika.kv.jextract.glfw;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct VkPhysicalDeviceMeshShaderPropertiesEXT {
 *     VkStructureType sType;
 *     void* pNext;
 *     uint32_t maxTaskWorkGroupTotalCount;
 *     uint32_t maxTaskWorkGroupCount[3];
 *     uint32_t maxTaskWorkGroupInvocations;
 *     uint32_t maxTaskWorkGroupSize[3];
 *     uint32_t maxTaskPayloadSize;
 *     uint32_t maxTaskSharedMemorySize;
 *     uint32_t maxTaskPayloadAndSharedMemorySize;
 *     uint32_t maxMeshWorkGroupTotalCount;
 *     uint32_t maxMeshWorkGroupCount[3];
 *     uint32_t maxMeshWorkGroupInvocations;
 *     uint32_t maxMeshWorkGroupSize[3];
 *     uint32_t maxMeshSharedMemorySize;
 *     uint32_t maxMeshPayloadAndSharedMemorySize;
 *     uint32_t maxMeshOutputMemorySize;
 *     uint32_t maxMeshPayloadAndOutputMemorySize;
 *     uint32_t maxMeshOutputComponents;
 *     uint32_t maxMeshOutputVertices;
 *     uint32_t maxMeshOutputPrimitives;
 *     uint32_t maxMeshOutputLayers;
 *     uint32_t maxMeshMultiviewViewCount;
 *     uint32_t meshOutputPerVertexGranularity;
 *     uint32_t meshOutputPerPrimitiveGranularity;
 *     uint32_t maxPreferredTaskWorkGroupInvocations;
 *     uint32_t maxPreferredMeshWorkGroupInvocations;
 *     VkBool32 prefersLocalInvocationVertexOutput;
 *     VkBool32 prefersLocalInvocationPrimitiveOutput;
 *     VkBool32 prefersCompactVertexOutput;
 *     VkBool32 prefersCompactPrimitiveOutput;
 * };
 * }
 */
public class VkPhysicalDeviceMeshShaderPropertiesEXT {

    public static MemoryLayout $LAYOUT() {
        return constants$1075.const$5;
    }
    public static VarHandle sType$VH() {
        return constants$1076.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * VkStructureType sType;
     * }
     */
    public static int sType$get(MemorySegment seg) {
        return (int)constants$1076.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * VkStructureType sType;
     * }
     */
    public static void sType$set(MemorySegment seg, int x) {
        constants$1076.const$0.set(seg, x);
    }
    public static int sType$get(MemorySegment seg, long index) {
        return (int)constants$1076.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void sType$set(MemorySegment seg, long index, int x) {
        constants$1076.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pNext$VH() {
        return constants$1076.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * void* pNext;
     * }
     */
    public static MemorySegment pNext$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1076.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * void* pNext;
     * }
     */
    public static void pNext$set(MemorySegment seg, MemorySegment x) {
        constants$1076.const$1.set(seg, x);
    }
    public static MemorySegment pNext$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1076.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void pNext$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1076.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle maxTaskWorkGroupTotalCount$VH() {
        return constants$1076.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint32_t maxTaskWorkGroupTotalCount;
     * }
     */
    public static int maxTaskWorkGroupTotalCount$get(MemorySegment seg) {
        return (int)constants$1076.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint32_t maxTaskWorkGroupTotalCount;
     * }
     */
    public static void maxTaskWorkGroupTotalCount$set(MemorySegment seg, int x) {
        constants$1076.const$2.set(seg, x);
    }
    public static int maxTaskWorkGroupTotalCount$get(MemorySegment seg, long index) {
        return (int)constants$1076.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void maxTaskWorkGroupTotalCount$set(MemorySegment seg, long index, int x) {
        constants$1076.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment maxTaskWorkGroupCount$slice(MemorySegment seg) {
        return seg.asSlice(20, 12);
    }
    public static VarHandle maxTaskWorkGroupInvocations$VH() {
        return constants$1076.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint32_t maxTaskWorkGroupInvocations;
     * }
     */
    public static int maxTaskWorkGroupInvocations$get(MemorySegment seg) {
        return (int)constants$1076.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint32_t maxTaskWorkGroupInvocations;
     * }
     */
    public static void maxTaskWorkGroupInvocations$set(MemorySegment seg, int x) {
        constants$1076.const$3.set(seg, x);
    }
    public static int maxTaskWorkGroupInvocations$get(MemorySegment seg, long index) {
        return (int)constants$1076.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void maxTaskWorkGroupInvocations$set(MemorySegment seg, long index, int x) {
        constants$1076.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment maxTaskWorkGroupSize$slice(MemorySegment seg) {
        return seg.asSlice(36, 12);
    }
    public static VarHandle maxTaskPayloadSize$VH() {
        return constants$1076.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint32_t maxTaskPayloadSize;
     * }
     */
    public static int maxTaskPayloadSize$get(MemorySegment seg) {
        return (int)constants$1076.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint32_t maxTaskPayloadSize;
     * }
     */
    public static void maxTaskPayloadSize$set(MemorySegment seg, int x) {
        constants$1076.const$4.set(seg, x);
    }
    public static int maxTaskPayloadSize$get(MemorySegment seg, long index) {
        return (int)constants$1076.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void maxTaskPayloadSize$set(MemorySegment seg, long index, int x) {
        constants$1076.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle maxTaskSharedMemorySize$VH() {
        return constants$1076.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint32_t maxTaskSharedMemorySize;
     * }
     */
    public static int maxTaskSharedMemorySize$get(MemorySegment seg) {
        return (int)constants$1076.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint32_t maxTaskSharedMemorySize;
     * }
     */
    public static void maxTaskSharedMemorySize$set(MemorySegment seg, int x) {
        constants$1076.const$5.set(seg, x);
    }
    public static int maxTaskSharedMemorySize$get(MemorySegment seg, long index) {
        return (int)constants$1076.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void maxTaskSharedMemorySize$set(MemorySegment seg, long index, int x) {
        constants$1076.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle maxTaskPayloadAndSharedMemorySize$VH() {
        return constants$1077.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint32_t maxTaskPayloadAndSharedMemorySize;
     * }
     */
    public static int maxTaskPayloadAndSharedMemorySize$get(MemorySegment seg) {
        return (int)constants$1077.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint32_t maxTaskPayloadAndSharedMemorySize;
     * }
     */
    public static void maxTaskPayloadAndSharedMemorySize$set(MemorySegment seg, int x) {
        constants$1077.const$0.set(seg, x);
    }
    public static int maxTaskPayloadAndSharedMemorySize$get(MemorySegment seg, long index) {
        return (int)constants$1077.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void maxTaskPayloadAndSharedMemorySize$set(MemorySegment seg, long index, int x) {
        constants$1077.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle maxMeshWorkGroupTotalCount$VH() {
        return constants$1077.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint32_t maxMeshWorkGroupTotalCount;
     * }
     */
    public static int maxMeshWorkGroupTotalCount$get(MemorySegment seg) {
        return (int)constants$1077.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint32_t maxMeshWorkGroupTotalCount;
     * }
     */
    public static void maxMeshWorkGroupTotalCount$set(MemorySegment seg, int x) {
        constants$1077.const$1.set(seg, x);
    }
    public static int maxMeshWorkGroupTotalCount$get(MemorySegment seg, long index) {
        return (int)constants$1077.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void maxMeshWorkGroupTotalCount$set(MemorySegment seg, long index, int x) {
        constants$1077.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment maxMeshWorkGroupCount$slice(MemorySegment seg) {
        return seg.asSlice(64, 12);
    }
    public static VarHandle maxMeshWorkGroupInvocations$VH() {
        return constants$1077.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint32_t maxMeshWorkGroupInvocations;
     * }
     */
    public static int maxMeshWorkGroupInvocations$get(MemorySegment seg) {
        return (int)constants$1077.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint32_t maxMeshWorkGroupInvocations;
     * }
     */
    public static void maxMeshWorkGroupInvocations$set(MemorySegment seg, int x) {
        constants$1077.const$2.set(seg, x);
    }
    public static int maxMeshWorkGroupInvocations$get(MemorySegment seg, long index) {
        return (int)constants$1077.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void maxMeshWorkGroupInvocations$set(MemorySegment seg, long index, int x) {
        constants$1077.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment maxMeshWorkGroupSize$slice(MemorySegment seg) {
        return seg.asSlice(80, 12);
    }
    public static VarHandle maxMeshSharedMemorySize$VH() {
        return constants$1077.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint32_t maxMeshSharedMemorySize;
     * }
     */
    public static int maxMeshSharedMemorySize$get(MemorySegment seg) {
        return (int)constants$1077.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint32_t maxMeshSharedMemorySize;
     * }
     */
    public static void maxMeshSharedMemorySize$set(MemorySegment seg, int x) {
        constants$1077.const$3.set(seg, x);
    }
    public static int maxMeshSharedMemorySize$get(MemorySegment seg, long index) {
        return (int)constants$1077.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void maxMeshSharedMemorySize$set(MemorySegment seg, long index, int x) {
        constants$1077.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle maxMeshPayloadAndSharedMemorySize$VH() {
        return constants$1077.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint32_t maxMeshPayloadAndSharedMemorySize;
     * }
     */
    public static int maxMeshPayloadAndSharedMemorySize$get(MemorySegment seg) {
        return (int)constants$1077.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint32_t maxMeshPayloadAndSharedMemorySize;
     * }
     */
    public static void maxMeshPayloadAndSharedMemorySize$set(MemorySegment seg, int x) {
        constants$1077.const$4.set(seg, x);
    }
    public static int maxMeshPayloadAndSharedMemorySize$get(MemorySegment seg, long index) {
        return (int)constants$1077.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void maxMeshPayloadAndSharedMemorySize$set(MemorySegment seg, long index, int x) {
        constants$1077.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle maxMeshOutputMemorySize$VH() {
        return constants$1077.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint32_t maxMeshOutputMemorySize;
     * }
     */
    public static int maxMeshOutputMemorySize$get(MemorySegment seg) {
        return (int)constants$1077.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint32_t maxMeshOutputMemorySize;
     * }
     */
    public static void maxMeshOutputMemorySize$set(MemorySegment seg, int x) {
        constants$1077.const$5.set(seg, x);
    }
    public static int maxMeshOutputMemorySize$get(MemorySegment seg, long index) {
        return (int)constants$1077.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void maxMeshOutputMemorySize$set(MemorySegment seg, long index, int x) {
        constants$1077.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle maxMeshPayloadAndOutputMemorySize$VH() {
        return constants$1078.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint32_t maxMeshPayloadAndOutputMemorySize;
     * }
     */
    public static int maxMeshPayloadAndOutputMemorySize$get(MemorySegment seg) {
        return (int)constants$1078.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint32_t maxMeshPayloadAndOutputMemorySize;
     * }
     */
    public static void maxMeshPayloadAndOutputMemorySize$set(MemorySegment seg, int x) {
        constants$1078.const$0.set(seg, x);
    }
    public static int maxMeshPayloadAndOutputMemorySize$get(MemorySegment seg, long index) {
        return (int)constants$1078.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void maxMeshPayloadAndOutputMemorySize$set(MemorySegment seg, long index, int x) {
        constants$1078.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle maxMeshOutputComponents$VH() {
        return constants$1078.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint32_t maxMeshOutputComponents;
     * }
     */
    public static int maxMeshOutputComponents$get(MemorySegment seg) {
        return (int)constants$1078.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint32_t maxMeshOutputComponents;
     * }
     */
    public static void maxMeshOutputComponents$set(MemorySegment seg, int x) {
        constants$1078.const$1.set(seg, x);
    }
    public static int maxMeshOutputComponents$get(MemorySegment seg, long index) {
        return (int)constants$1078.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void maxMeshOutputComponents$set(MemorySegment seg, long index, int x) {
        constants$1078.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle maxMeshOutputVertices$VH() {
        return constants$1078.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint32_t maxMeshOutputVertices;
     * }
     */
    public static int maxMeshOutputVertices$get(MemorySegment seg) {
        return (int)constants$1078.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint32_t maxMeshOutputVertices;
     * }
     */
    public static void maxMeshOutputVertices$set(MemorySegment seg, int x) {
        constants$1078.const$2.set(seg, x);
    }
    public static int maxMeshOutputVertices$get(MemorySegment seg, long index) {
        return (int)constants$1078.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void maxMeshOutputVertices$set(MemorySegment seg, long index, int x) {
        constants$1078.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle maxMeshOutputPrimitives$VH() {
        return constants$1078.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint32_t maxMeshOutputPrimitives;
     * }
     */
    public static int maxMeshOutputPrimitives$get(MemorySegment seg) {
        return (int)constants$1078.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint32_t maxMeshOutputPrimitives;
     * }
     */
    public static void maxMeshOutputPrimitives$set(MemorySegment seg, int x) {
        constants$1078.const$3.set(seg, x);
    }
    public static int maxMeshOutputPrimitives$get(MemorySegment seg, long index) {
        return (int)constants$1078.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void maxMeshOutputPrimitives$set(MemorySegment seg, long index, int x) {
        constants$1078.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle maxMeshOutputLayers$VH() {
        return constants$1078.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint32_t maxMeshOutputLayers;
     * }
     */
    public static int maxMeshOutputLayers$get(MemorySegment seg) {
        return (int)constants$1078.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint32_t maxMeshOutputLayers;
     * }
     */
    public static void maxMeshOutputLayers$set(MemorySegment seg, int x) {
        constants$1078.const$4.set(seg, x);
    }
    public static int maxMeshOutputLayers$get(MemorySegment seg, long index) {
        return (int)constants$1078.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void maxMeshOutputLayers$set(MemorySegment seg, long index, int x) {
        constants$1078.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle maxMeshMultiviewViewCount$VH() {
        return constants$1078.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint32_t maxMeshMultiviewViewCount;
     * }
     */
    public static int maxMeshMultiviewViewCount$get(MemorySegment seg) {
        return (int)constants$1078.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint32_t maxMeshMultiviewViewCount;
     * }
     */
    public static void maxMeshMultiviewViewCount$set(MemorySegment seg, int x) {
        constants$1078.const$5.set(seg, x);
    }
    public static int maxMeshMultiviewViewCount$get(MemorySegment seg, long index) {
        return (int)constants$1078.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void maxMeshMultiviewViewCount$set(MemorySegment seg, long index, int x) {
        constants$1078.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle meshOutputPerVertexGranularity$VH() {
        return constants$1079.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint32_t meshOutputPerVertexGranularity;
     * }
     */
    public static int meshOutputPerVertexGranularity$get(MemorySegment seg) {
        return (int)constants$1079.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint32_t meshOutputPerVertexGranularity;
     * }
     */
    public static void meshOutputPerVertexGranularity$set(MemorySegment seg, int x) {
        constants$1079.const$0.set(seg, x);
    }
    public static int meshOutputPerVertexGranularity$get(MemorySegment seg, long index) {
        return (int)constants$1079.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void meshOutputPerVertexGranularity$set(MemorySegment seg, long index, int x) {
        constants$1079.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle meshOutputPerPrimitiveGranularity$VH() {
        return constants$1079.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint32_t meshOutputPerPrimitiveGranularity;
     * }
     */
    public static int meshOutputPerPrimitiveGranularity$get(MemorySegment seg) {
        return (int)constants$1079.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint32_t meshOutputPerPrimitiveGranularity;
     * }
     */
    public static void meshOutputPerPrimitiveGranularity$set(MemorySegment seg, int x) {
        constants$1079.const$1.set(seg, x);
    }
    public static int meshOutputPerPrimitiveGranularity$get(MemorySegment seg, long index) {
        return (int)constants$1079.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void meshOutputPerPrimitiveGranularity$set(MemorySegment seg, long index, int x) {
        constants$1079.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle maxPreferredTaskWorkGroupInvocations$VH() {
        return constants$1079.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint32_t maxPreferredTaskWorkGroupInvocations;
     * }
     */
    public static int maxPreferredTaskWorkGroupInvocations$get(MemorySegment seg) {
        return (int)constants$1079.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint32_t maxPreferredTaskWorkGroupInvocations;
     * }
     */
    public static void maxPreferredTaskWorkGroupInvocations$set(MemorySegment seg, int x) {
        constants$1079.const$2.set(seg, x);
    }
    public static int maxPreferredTaskWorkGroupInvocations$get(MemorySegment seg, long index) {
        return (int)constants$1079.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void maxPreferredTaskWorkGroupInvocations$set(MemorySegment seg, long index, int x) {
        constants$1079.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle maxPreferredMeshWorkGroupInvocations$VH() {
        return constants$1079.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint32_t maxPreferredMeshWorkGroupInvocations;
     * }
     */
    public static int maxPreferredMeshWorkGroupInvocations$get(MemorySegment seg) {
        return (int)constants$1079.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint32_t maxPreferredMeshWorkGroupInvocations;
     * }
     */
    public static void maxPreferredMeshWorkGroupInvocations$set(MemorySegment seg, int x) {
        constants$1079.const$3.set(seg, x);
    }
    public static int maxPreferredMeshWorkGroupInvocations$get(MemorySegment seg, long index) {
        return (int)constants$1079.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void maxPreferredMeshWorkGroupInvocations$set(MemorySegment seg, long index, int x) {
        constants$1079.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle prefersLocalInvocationVertexOutput$VH() {
        return constants$1079.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * VkBool32 prefersLocalInvocationVertexOutput;
     * }
     */
    public static int prefersLocalInvocationVertexOutput$get(MemorySegment seg) {
        return (int)constants$1079.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * VkBool32 prefersLocalInvocationVertexOutput;
     * }
     */
    public static void prefersLocalInvocationVertexOutput$set(MemorySegment seg, int x) {
        constants$1079.const$4.set(seg, x);
    }
    public static int prefersLocalInvocationVertexOutput$get(MemorySegment seg, long index) {
        return (int)constants$1079.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void prefersLocalInvocationVertexOutput$set(MemorySegment seg, long index, int x) {
        constants$1079.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle prefersLocalInvocationPrimitiveOutput$VH() {
        return constants$1079.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * VkBool32 prefersLocalInvocationPrimitiveOutput;
     * }
     */
    public static int prefersLocalInvocationPrimitiveOutput$get(MemorySegment seg) {
        return (int)constants$1079.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * VkBool32 prefersLocalInvocationPrimitiveOutput;
     * }
     */
    public static void prefersLocalInvocationPrimitiveOutput$set(MemorySegment seg, int x) {
        constants$1079.const$5.set(seg, x);
    }
    public static int prefersLocalInvocationPrimitiveOutput$get(MemorySegment seg, long index) {
        return (int)constants$1079.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void prefersLocalInvocationPrimitiveOutput$set(MemorySegment seg, long index, int x) {
        constants$1079.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle prefersCompactVertexOutput$VH() {
        return constants$1080.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * VkBool32 prefersCompactVertexOutput;
     * }
     */
    public static int prefersCompactVertexOutput$get(MemorySegment seg) {
        return (int)constants$1080.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * VkBool32 prefersCompactVertexOutput;
     * }
     */
    public static void prefersCompactVertexOutput$set(MemorySegment seg, int x) {
        constants$1080.const$0.set(seg, x);
    }
    public static int prefersCompactVertexOutput$get(MemorySegment seg, long index) {
        return (int)constants$1080.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void prefersCompactVertexOutput$set(MemorySegment seg, long index, int x) {
        constants$1080.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle prefersCompactPrimitiveOutput$VH() {
        return constants$1080.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * VkBool32 prefersCompactPrimitiveOutput;
     * }
     */
    public static int prefersCompactPrimitiveOutput$get(MemorySegment seg) {
        return (int)constants$1080.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * VkBool32 prefersCompactPrimitiveOutput;
     * }
     */
    public static void prefersCompactPrimitiveOutput$set(MemorySegment seg, int x) {
        constants$1080.const$1.set(seg, x);
    }
    public static int prefersCompactPrimitiveOutput$get(MemorySegment seg, long index) {
        return (int)constants$1080.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void prefersCompactPrimitiveOutput$set(MemorySegment seg, long index, int x) {
        constants$1080.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


