// Generated by jextract

package com.icuxika.kv.jextract.glfw;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * enum VkResult (*PFN_vkGetQueryPoolResults)(struct VkDevice_T* device,struct VkQueryPool_T* queryPool,unsigned int firstQuery,unsigned int queryCount,unsigned long long dataSize,void* pData,unsigned long long stride,unsigned int flags);
 * }
 */
public interface PFN_vkGetQueryPoolResults {

    int apply(java.lang.foreign.MemorySegment device, java.lang.foreign.MemorySegment queryPool, int firstQuery, int queryCount, long dataSize, java.lang.foreign.MemorySegment pData, long stride, int flags);
    static MemorySegment allocate(PFN_vkGetQueryPoolResults fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$153.const$3, fi, constants$153.const$2, scope);
    }
    static PFN_vkGetQueryPoolResults ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (java.lang.foreign.MemorySegment _device, java.lang.foreign.MemorySegment _queryPool, int _firstQuery, int _queryCount, long _dataSize, java.lang.foreign.MemorySegment _pData, long _stride, int _flags) -> {
            try {
                return (int)constants$153.const$4.invokeExact(symbol, _device, _queryPool, _firstQuery, _queryCount, _dataSize, _pData, _stride, _flags);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


