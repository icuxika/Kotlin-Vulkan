// Generated by jextract

package com.icuxika.kv.jextract.glfw;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * void (*PFN_vkDebugReportMessageEXT)(struct VkInstance_T* instance,unsigned int flags,enum VkDebugReportObjectTypeEXT objectType,unsigned long long object,unsigned long long location,int messageCode,char* pLayerPrefix,char* pMessage);
 * }
 */
public interface PFN_vkDebugReportMessageEXT {

    void apply(java.lang.foreign.MemorySegment instance, int flags, int objectType, long object, long location, int messageCode, java.lang.foreign.MemorySegment pLayerPrefix, java.lang.foreign.MemorySegment pMessage);
    static MemorySegment allocate(PFN_vkDebugReportMessageEXT fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$614.const$3, fi, constants$614.const$2, scope);
    }
    static PFN_vkDebugReportMessageEXT ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (java.lang.foreign.MemorySegment _instance, int _flags, int _objectType, long _object, long _location, int _messageCode, java.lang.foreign.MemorySegment _pLayerPrefix, java.lang.foreign.MemorySegment _pMessage) -> {
            try {
                constants$614.const$4.invokeExact(symbol, _instance, _flags, _objectType, _object, _location, _messageCode, _pLayerPrefix, _pMessage);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


