// Generated by jextract

package com.icuxika.kv.jextract.glfw;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct VkDependencyInfo {
 *     VkStructureType sType;
 *     void* pNext;
 *     VkDependencyFlags dependencyFlags;
 *     uint32_t memoryBarrierCount;
 *     const VkMemoryBarrier2* pMemoryBarriers;
 *     uint32_t bufferMemoryBarrierCount;
 *     const VkBufferMemoryBarrier2* pBufferMemoryBarriers;
 *     uint32_t imageMemoryBarrierCount;
 *     const VkImageMemoryBarrier2* pImageMemoryBarriers;
 * };
 * }
 */
public class VkDependencyInfo {

    public static MemoryLayout $LAYOUT() {
        return constants$369.const$4;
    }
    public static VarHandle sType$VH() {
        return constants$369.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * VkStructureType sType;
     * }
     */
    public static int sType$get(MemorySegment seg) {
        return (int)constants$369.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * VkStructureType sType;
     * }
     */
    public static void sType$set(MemorySegment seg, int x) {
        constants$369.const$5.set(seg, x);
    }
    public static int sType$get(MemorySegment seg, long index) {
        return (int)constants$369.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void sType$set(MemorySegment seg, long index, int x) {
        constants$369.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pNext$VH() {
        return constants$370.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * void* pNext;
     * }
     */
    public static MemorySegment pNext$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$370.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * void* pNext;
     * }
     */
    public static void pNext$set(MemorySegment seg, MemorySegment x) {
        constants$370.const$0.set(seg, x);
    }
    public static MemorySegment pNext$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$370.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void pNext$set(MemorySegment seg, long index, MemorySegment x) {
        constants$370.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dependencyFlags$VH() {
        return constants$370.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * VkDependencyFlags dependencyFlags;
     * }
     */
    public static int dependencyFlags$get(MemorySegment seg) {
        return (int)constants$370.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * VkDependencyFlags dependencyFlags;
     * }
     */
    public static void dependencyFlags$set(MemorySegment seg, int x) {
        constants$370.const$1.set(seg, x);
    }
    public static int dependencyFlags$get(MemorySegment seg, long index) {
        return (int)constants$370.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void dependencyFlags$set(MemorySegment seg, long index, int x) {
        constants$370.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle memoryBarrierCount$VH() {
        return constants$370.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint32_t memoryBarrierCount;
     * }
     */
    public static int memoryBarrierCount$get(MemorySegment seg) {
        return (int)constants$370.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint32_t memoryBarrierCount;
     * }
     */
    public static void memoryBarrierCount$set(MemorySegment seg, int x) {
        constants$370.const$2.set(seg, x);
    }
    public static int memoryBarrierCount$get(MemorySegment seg, long index) {
        return (int)constants$370.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void memoryBarrierCount$set(MemorySegment seg, long index, int x) {
        constants$370.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pMemoryBarriers$VH() {
        return constants$370.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * const VkMemoryBarrier2* pMemoryBarriers;
     * }
     */
    public static MemorySegment pMemoryBarriers$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$370.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * const VkMemoryBarrier2* pMemoryBarriers;
     * }
     */
    public static void pMemoryBarriers$set(MemorySegment seg, MemorySegment x) {
        constants$370.const$3.set(seg, x);
    }
    public static MemorySegment pMemoryBarriers$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$370.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void pMemoryBarriers$set(MemorySegment seg, long index, MemorySegment x) {
        constants$370.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle bufferMemoryBarrierCount$VH() {
        return constants$370.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint32_t bufferMemoryBarrierCount;
     * }
     */
    public static int bufferMemoryBarrierCount$get(MemorySegment seg) {
        return (int)constants$370.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint32_t bufferMemoryBarrierCount;
     * }
     */
    public static void bufferMemoryBarrierCount$set(MemorySegment seg, int x) {
        constants$370.const$4.set(seg, x);
    }
    public static int bufferMemoryBarrierCount$get(MemorySegment seg, long index) {
        return (int)constants$370.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void bufferMemoryBarrierCount$set(MemorySegment seg, long index, int x) {
        constants$370.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pBufferMemoryBarriers$VH() {
        return constants$370.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * const VkBufferMemoryBarrier2* pBufferMemoryBarriers;
     * }
     */
    public static MemorySegment pBufferMemoryBarriers$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$370.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * const VkBufferMemoryBarrier2* pBufferMemoryBarriers;
     * }
     */
    public static void pBufferMemoryBarriers$set(MemorySegment seg, MemorySegment x) {
        constants$370.const$5.set(seg, x);
    }
    public static MemorySegment pBufferMemoryBarriers$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$370.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void pBufferMemoryBarriers$set(MemorySegment seg, long index, MemorySegment x) {
        constants$370.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle imageMemoryBarrierCount$VH() {
        return constants$371.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint32_t imageMemoryBarrierCount;
     * }
     */
    public static int imageMemoryBarrierCount$get(MemorySegment seg) {
        return (int)constants$371.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint32_t imageMemoryBarrierCount;
     * }
     */
    public static void imageMemoryBarrierCount$set(MemorySegment seg, int x) {
        constants$371.const$0.set(seg, x);
    }
    public static int imageMemoryBarrierCount$get(MemorySegment seg, long index) {
        return (int)constants$371.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void imageMemoryBarrierCount$set(MemorySegment seg, long index, int x) {
        constants$371.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pImageMemoryBarriers$VH() {
        return constants$371.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * const VkImageMemoryBarrier2* pImageMemoryBarriers;
     * }
     */
    public static MemorySegment pImageMemoryBarriers$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$371.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * const VkImageMemoryBarrier2* pImageMemoryBarriers;
     * }
     */
    public static void pImageMemoryBarriers$set(MemorySegment seg, MemorySegment x) {
        constants$371.const$1.set(seg, x);
    }
    public static MemorySegment pImageMemoryBarriers$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$371.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void pImageMemoryBarriers$set(MemorySegment seg, long index, MemorySegment x) {
        constants$371.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


