// Generated by jextract

package com.icuxika.kv.jextract.glfw;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$811 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$811() {}
    static final MethodHandle const$0 = RuntimeHelper.downcallHandle(
        "vkCmdSetDepthCompareOpEXT",
        constants$178.const$3
    );
    static final MethodHandle const$1 = RuntimeHelper.downcallHandle(
        "vkCmdSetDepthBoundsTestEnableEXT",
        constants$178.const$3
    );
    static final MethodHandle const$2 = RuntimeHelper.downcallHandle(
        "vkCmdSetStencilTestEnableEXT",
        constants$178.const$3
    );
    static final MethodHandle const$3 = RuntimeHelper.downcallHandle(
        "vkCmdSetStencilOpEXT",
        constants$168.const$0
    );
    static final StructLayout const$4 = MemoryLayout.structLayout(
        JAVA_INT.withName("sType"),
        MemoryLayout.paddingLayout(4),
        RuntimeHelper.POINTER.withName("pNext"),
        JAVA_INT.withName("shaderBufferFloat16Atomics"),
        JAVA_INT.withName("shaderBufferFloat16AtomicAdd"),
        JAVA_INT.withName("shaderBufferFloat16AtomicMinMax"),
        JAVA_INT.withName("shaderBufferFloat32AtomicMinMax"),
        JAVA_INT.withName("shaderBufferFloat64AtomicMinMax"),
        JAVA_INT.withName("shaderSharedFloat16Atomics"),
        JAVA_INT.withName("shaderSharedFloat16AtomicAdd"),
        JAVA_INT.withName("shaderSharedFloat16AtomicMinMax"),
        JAVA_INT.withName("shaderSharedFloat32AtomicMinMax"),
        JAVA_INT.withName("shaderSharedFloat64AtomicMinMax"),
        JAVA_INT.withName("shaderImageFloat32AtomicMinMax"),
        JAVA_INT.withName("sparseImageFloat32AtomicMinMax")
    ).withName("VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT");
    static final VarHandle const$5 = constants$811.const$4.varHandle(MemoryLayout.PathElement.groupElement("sType"));
}


