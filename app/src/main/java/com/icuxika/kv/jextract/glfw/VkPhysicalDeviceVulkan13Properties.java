// Generated by jextract

package com.icuxika.kv.jextract.glfw;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct VkPhysicalDeviceVulkan13Properties {
 *     VkStructureType sType;
 *     void* pNext;
 *     uint32_t minSubgroupSize;
 *     uint32_t maxSubgroupSize;
 *     uint32_t maxComputeWorkgroupSubgroups;
 *     VkShaderStageFlags requiredSubgroupSizeStages;
 *     uint32_t maxInlineUniformBlockSize;
 *     uint32_t maxPerStageDescriptorInlineUniformBlocks;
 *     uint32_t maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks;
 *     uint32_t maxDescriptorSetInlineUniformBlocks;
 *     uint32_t maxDescriptorSetUpdateAfterBindInlineUniformBlocks;
 *     uint32_t maxInlineUniformTotalSize;
 *     VkBool32 integerDotProduct8BitUnsignedAccelerated;
 *     VkBool32 integerDotProduct8BitSignedAccelerated;
 *     VkBool32 integerDotProduct8BitMixedSignednessAccelerated;
 *     VkBool32 integerDotProduct4x8BitPackedUnsignedAccelerated;
 *     VkBool32 integerDotProduct4x8BitPackedSignedAccelerated;
 *     VkBool32 integerDotProduct4x8BitPackedMixedSignednessAccelerated;
 *     VkBool32 integerDotProduct16BitUnsignedAccelerated;
 *     VkBool32 integerDotProduct16BitSignedAccelerated;
 *     VkBool32 integerDotProduct16BitMixedSignednessAccelerated;
 *     VkBool32 integerDotProduct32BitUnsignedAccelerated;
 *     VkBool32 integerDotProduct32BitSignedAccelerated;
 *     VkBool32 integerDotProduct32BitMixedSignednessAccelerated;
 *     VkBool32 integerDotProduct64BitUnsignedAccelerated;
 *     VkBool32 integerDotProduct64BitSignedAccelerated;
 *     VkBool32 integerDotProduct64BitMixedSignednessAccelerated;
 *     VkBool32 integerDotProductAccumulatingSaturating8BitUnsignedAccelerated;
 *     VkBool32 integerDotProductAccumulatingSaturating8BitSignedAccelerated;
 *     VkBool32 integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated;
 *     VkBool32 integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated;
 *     VkBool32 integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated;
 *     VkBool32 integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated;
 *     VkBool32 integerDotProductAccumulatingSaturating16BitUnsignedAccelerated;
 *     VkBool32 integerDotProductAccumulatingSaturating16BitSignedAccelerated;
 *     VkBool32 integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated;
 *     VkBool32 integerDotProductAccumulatingSaturating32BitUnsignedAccelerated;
 *     VkBool32 integerDotProductAccumulatingSaturating32BitSignedAccelerated;
 *     VkBool32 integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated;
 *     VkBool32 integerDotProductAccumulatingSaturating64BitUnsignedAccelerated;
 *     VkBool32 integerDotProductAccumulatingSaturating64BitSignedAccelerated;
 *     VkBool32 integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated;
 *     VkDeviceSize storageTexelBufferOffsetAlignmentBytes;
 *     VkBool32 storageTexelBufferOffsetSingleTexelAlignment;
 *     VkDeviceSize uniformTexelBufferOffsetAlignmentBytes;
 *     VkBool32 uniformTexelBufferOffsetSingleTexelAlignment;
 *     VkDeviceSize maxBufferSize;
 * };
 * }
 */
public class VkPhysicalDeviceVulkan13Properties {

    public static MemoryLayout $LAYOUT() {
        return constants$350.const$2;
    }
    public static VarHandle sType$VH() {
        return constants$350.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * VkStructureType sType;
     * }
     */
    public static int sType$get(MemorySegment seg) {
        return (int)constants$350.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * VkStructureType sType;
     * }
     */
    public static void sType$set(MemorySegment seg, int x) {
        constants$350.const$3.set(seg, x);
    }
    public static int sType$get(MemorySegment seg, long index) {
        return (int)constants$350.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void sType$set(MemorySegment seg, long index, int x) {
        constants$350.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pNext$VH() {
        return constants$350.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * void* pNext;
     * }
     */
    public static MemorySegment pNext$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$350.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * void* pNext;
     * }
     */
    public static void pNext$set(MemorySegment seg, MemorySegment x) {
        constants$350.const$4.set(seg, x);
    }
    public static MemorySegment pNext$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$350.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void pNext$set(MemorySegment seg, long index, MemorySegment x) {
        constants$350.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle minSubgroupSize$VH() {
        return constants$350.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint32_t minSubgroupSize;
     * }
     */
    public static int minSubgroupSize$get(MemorySegment seg) {
        return (int)constants$350.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint32_t minSubgroupSize;
     * }
     */
    public static void minSubgroupSize$set(MemorySegment seg, int x) {
        constants$350.const$5.set(seg, x);
    }
    public static int minSubgroupSize$get(MemorySegment seg, long index) {
        return (int)constants$350.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void minSubgroupSize$set(MemorySegment seg, long index, int x) {
        constants$350.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle maxSubgroupSize$VH() {
        return constants$351.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint32_t maxSubgroupSize;
     * }
     */
    public static int maxSubgroupSize$get(MemorySegment seg) {
        return (int)constants$351.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint32_t maxSubgroupSize;
     * }
     */
    public static void maxSubgroupSize$set(MemorySegment seg, int x) {
        constants$351.const$0.set(seg, x);
    }
    public static int maxSubgroupSize$get(MemorySegment seg, long index) {
        return (int)constants$351.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void maxSubgroupSize$set(MemorySegment seg, long index, int x) {
        constants$351.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle maxComputeWorkgroupSubgroups$VH() {
        return constants$351.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint32_t maxComputeWorkgroupSubgroups;
     * }
     */
    public static int maxComputeWorkgroupSubgroups$get(MemorySegment seg) {
        return (int)constants$351.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint32_t maxComputeWorkgroupSubgroups;
     * }
     */
    public static void maxComputeWorkgroupSubgroups$set(MemorySegment seg, int x) {
        constants$351.const$1.set(seg, x);
    }
    public static int maxComputeWorkgroupSubgroups$get(MemorySegment seg, long index) {
        return (int)constants$351.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void maxComputeWorkgroupSubgroups$set(MemorySegment seg, long index, int x) {
        constants$351.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle requiredSubgroupSizeStages$VH() {
        return constants$351.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * VkShaderStageFlags requiredSubgroupSizeStages;
     * }
     */
    public static int requiredSubgroupSizeStages$get(MemorySegment seg) {
        return (int)constants$351.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * VkShaderStageFlags requiredSubgroupSizeStages;
     * }
     */
    public static void requiredSubgroupSizeStages$set(MemorySegment seg, int x) {
        constants$351.const$2.set(seg, x);
    }
    public static int requiredSubgroupSizeStages$get(MemorySegment seg, long index) {
        return (int)constants$351.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void requiredSubgroupSizeStages$set(MemorySegment seg, long index, int x) {
        constants$351.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle maxInlineUniformBlockSize$VH() {
        return constants$351.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint32_t maxInlineUniformBlockSize;
     * }
     */
    public static int maxInlineUniformBlockSize$get(MemorySegment seg) {
        return (int)constants$351.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint32_t maxInlineUniformBlockSize;
     * }
     */
    public static void maxInlineUniformBlockSize$set(MemorySegment seg, int x) {
        constants$351.const$3.set(seg, x);
    }
    public static int maxInlineUniformBlockSize$get(MemorySegment seg, long index) {
        return (int)constants$351.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void maxInlineUniformBlockSize$set(MemorySegment seg, long index, int x) {
        constants$351.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle maxPerStageDescriptorInlineUniformBlocks$VH() {
        return constants$351.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint32_t maxPerStageDescriptorInlineUniformBlocks;
     * }
     */
    public static int maxPerStageDescriptorInlineUniformBlocks$get(MemorySegment seg) {
        return (int)constants$351.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint32_t maxPerStageDescriptorInlineUniformBlocks;
     * }
     */
    public static void maxPerStageDescriptorInlineUniformBlocks$set(MemorySegment seg, int x) {
        constants$351.const$4.set(seg, x);
    }
    public static int maxPerStageDescriptorInlineUniformBlocks$get(MemorySegment seg, long index) {
        return (int)constants$351.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void maxPerStageDescriptorInlineUniformBlocks$set(MemorySegment seg, long index, int x) {
        constants$351.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks$VH() {
        return constants$351.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint32_t maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks;
     * }
     */
    public static int maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks$get(MemorySegment seg) {
        return (int)constants$351.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint32_t maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks;
     * }
     */
    public static void maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks$set(MemorySegment seg, int x) {
        constants$351.const$5.set(seg, x);
    }
    public static int maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks$get(MemorySegment seg, long index) {
        return (int)constants$351.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks$set(MemorySegment seg, long index, int x) {
        constants$351.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle maxDescriptorSetInlineUniformBlocks$VH() {
        return constants$352.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint32_t maxDescriptorSetInlineUniformBlocks;
     * }
     */
    public static int maxDescriptorSetInlineUniformBlocks$get(MemorySegment seg) {
        return (int)constants$352.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint32_t maxDescriptorSetInlineUniformBlocks;
     * }
     */
    public static void maxDescriptorSetInlineUniformBlocks$set(MemorySegment seg, int x) {
        constants$352.const$0.set(seg, x);
    }
    public static int maxDescriptorSetInlineUniformBlocks$get(MemorySegment seg, long index) {
        return (int)constants$352.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void maxDescriptorSetInlineUniformBlocks$set(MemorySegment seg, long index, int x) {
        constants$352.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle maxDescriptorSetUpdateAfterBindInlineUniformBlocks$VH() {
        return constants$352.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint32_t maxDescriptorSetUpdateAfterBindInlineUniformBlocks;
     * }
     */
    public static int maxDescriptorSetUpdateAfterBindInlineUniformBlocks$get(MemorySegment seg) {
        return (int)constants$352.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint32_t maxDescriptorSetUpdateAfterBindInlineUniformBlocks;
     * }
     */
    public static void maxDescriptorSetUpdateAfterBindInlineUniformBlocks$set(MemorySegment seg, int x) {
        constants$352.const$1.set(seg, x);
    }
    public static int maxDescriptorSetUpdateAfterBindInlineUniformBlocks$get(MemorySegment seg, long index) {
        return (int)constants$352.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void maxDescriptorSetUpdateAfterBindInlineUniformBlocks$set(MemorySegment seg, long index, int x) {
        constants$352.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle maxInlineUniformTotalSize$VH() {
        return constants$352.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint32_t maxInlineUniformTotalSize;
     * }
     */
    public static int maxInlineUniformTotalSize$get(MemorySegment seg) {
        return (int)constants$352.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint32_t maxInlineUniformTotalSize;
     * }
     */
    public static void maxInlineUniformTotalSize$set(MemorySegment seg, int x) {
        constants$352.const$2.set(seg, x);
    }
    public static int maxInlineUniformTotalSize$get(MemorySegment seg, long index) {
        return (int)constants$352.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void maxInlineUniformTotalSize$set(MemorySegment seg, long index, int x) {
        constants$352.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle integerDotProduct8BitUnsignedAccelerated$VH() {
        return constants$352.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * VkBool32 integerDotProduct8BitUnsignedAccelerated;
     * }
     */
    public static int integerDotProduct8BitUnsignedAccelerated$get(MemorySegment seg) {
        return (int)constants$352.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * VkBool32 integerDotProduct8BitUnsignedAccelerated;
     * }
     */
    public static void integerDotProduct8BitUnsignedAccelerated$set(MemorySegment seg, int x) {
        constants$352.const$3.set(seg, x);
    }
    public static int integerDotProduct8BitUnsignedAccelerated$get(MemorySegment seg, long index) {
        return (int)constants$352.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void integerDotProduct8BitUnsignedAccelerated$set(MemorySegment seg, long index, int x) {
        constants$352.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle integerDotProduct8BitSignedAccelerated$VH() {
        return constants$352.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * VkBool32 integerDotProduct8BitSignedAccelerated;
     * }
     */
    public static int integerDotProduct8BitSignedAccelerated$get(MemorySegment seg) {
        return (int)constants$352.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * VkBool32 integerDotProduct8BitSignedAccelerated;
     * }
     */
    public static void integerDotProduct8BitSignedAccelerated$set(MemorySegment seg, int x) {
        constants$352.const$4.set(seg, x);
    }
    public static int integerDotProduct8BitSignedAccelerated$get(MemorySegment seg, long index) {
        return (int)constants$352.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void integerDotProduct8BitSignedAccelerated$set(MemorySegment seg, long index, int x) {
        constants$352.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle integerDotProduct8BitMixedSignednessAccelerated$VH() {
        return constants$352.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * VkBool32 integerDotProduct8BitMixedSignednessAccelerated;
     * }
     */
    public static int integerDotProduct8BitMixedSignednessAccelerated$get(MemorySegment seg) {
        return (int)constants$352.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * VkBool32 integerDotProduct8BitMixedSignednessAccelerated;
     * }
     */
    public static void integerDotProduct8BitMixedSignednessAccelerated$set(MemorySegment seg, int x) {
        constants$352.const$5.set(seg, x);
    }
    public static int integerDotProduct8BitMixedSignednessAccelerated$get(MemorySegment seg, long index) {
        return (int)constants$352.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void integerDotProduct8BitMixedSignednessAccelerated$set(MemorySegment seg, long index, int x) {
        constants$352.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle integerDotProduct4x8BitPackedUnsignedAccelerated$VH() {
        return constants$353.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * VkBool32 integerDotProduct4x8BitPackedUnsignedAccelerated;
     * }
     */
    public static int integerDotProduct4x8BitPackedUnsignedAccelerated$get(MemorySegment seg) {
        return (int)constants$353.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * VkBool32 integerDotProduct4x8BitPackedUnsignedAccelerated;
     * }
     */
    public static void integerDotProduct4x8BitPackedUnsignedAccelerated$set(MemorySegment seg, int x) {
        constants$353.const$0.set(seg, x);
    }
    public static int integerDotProduct4x8BitPackedUnsignedAccelerated$get(MemorySegment seg, long index) {
        return (int)constants$353.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void integerDotProduct4x8BitPackedUnsignedAccelerated$set(MemorySegment seg, long index, int x) {
        constants$353.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle integerDotProduct4x8BitPackedSignedAccelerated$VH() {
        return constants$353.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * VkBool32 integerDotProduct4x8BitPackedSignedAccelerated;
     * }
     */
    public static int integerDotProduct4x8BitPackedSignedAccelerated$get(MemorySegment seg) {
        return (int)constants$353.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * VkBool32 integerDotProduct4x8BitPackedSignedAccelerated;
     * }
     */
    public static void integerDotProduct4x8BitPackedSignedAccelerated$set(MemorySegment seg, int x) {
        constants$353.const$1.set(seg, x);
    }
    public static int integerDotProduct4x8BitPackedSignedAccelerated$get(MemorySegment seg, long index) {
        return (int)constants$353.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void integerDotProduct4x8BitPackedSignedAccelerated$set(MemorySegment seg, long index, int x) {
        constants$353.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle integerDotProduct4x8BitPackedMixedSignednessAccelerated$VH() {
        return constants$353.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * VkBool32 integerDotProduct4x8BitPackedMixedSignednessAccelerated;
     * }
     */
    public static int integerDotProduct4x8BitPackedMixedSignednessAccelerated$get(MemorySegment seg) {
        return (int)constants$353.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * VkBool32 integerDotProduct4x8BitPackedMixedSignednessAccelerated;
     * }
     */
    public static void integerDotProduct4x8BitPackedMixedSignednessAccelerated$set(MemorySegment seg, int x) {
        constants$353.const$2.set(seg, x);
    }
    public static int integerDotProduct4x8BitPackedMixedSignednessAccelerated$get(MemorySegment seg, long index) {
        return (int)constants$353.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void integerDotProduct4x8BitPackedMixedSignednessAccelerated$set(MemorySegment seg, long index, int x) {
        constants$353.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle integerDotProduct16BitUnsignedAccelerated$VH() {
        return constants$353.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * VkBool32 integerDotProduct16BitUnsignedAccelerated;
     * }
     */
    public static int integerDotProduct16BitUnsignedAccelerated$get(MemorySegment seg) {
        return (int)constants$353.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * VkBool32 integerDotProduct16BitUnsignedAccelerated;
     * }
     */
    public static void integerDotProduct16BitUnsignedAccelerated$set(MemorySegment seg, int x) {
        constants$353.const$3.set(seg, x);
    }
    public static int integerDotProduct16BitUnsignedAccelerated$get(MemorySegment seg, long index) {
        return (int)constants$353.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void integerDotProduct16BitUnsignedAccelerated$set(MemorySegment seg, long index, int x) {
        constants$353.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle integerDotProduct16BitSignedAccelerated$VH() {
        return constants$353.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * VkBool32 integerDotProduct16BitSignedAccelerated;
     * }
     */
    public static int integerDotProduct16BitSignedAccelerated$get(MemorySegment seg) {
        return (int)constants$353.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * VkBool32 integerDotProduct16BitSignedAccelerated;
     * }
     */
    public static void integerDotProduct16BitSignedAccelerated$set(MemorySegment seg, int x) {
        constants$353.const$4.set(seg, x);
    }
    public static int integerDotProduct16BitSignedAccelerated$get(MemorySegment seg, long index) {
        return (int)constants$353.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void integerDotProduct16BitSignedAccelerated$set(MemorySegment seg, long index, int x) {
        constants$353.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle integerDotProduct16BitMixedSignednessAccelerated$VH() {
        return constants$353.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * VkBool32 integerDotProduct16BitMixedSignednessAccelerated;
     * }
     */
    public static int integerDotProduct16BitMixedSignednessAccelerated$get(MemorySegment seg) {
        return (int)constants$353.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * VkBool32 integerDotProduct16BitMixedSignednessAccelerated;
     * }
     */
    public static void integerDotProduct16BitMixedSignednessAccelerated$set(MemorySegment seg, int x) {
        constants$353.const$5.set(seg, x);
    }
    public static int integerDotProduct16BitMixedSignednessAccelerated$get(MemorySegment seg, long index) {
        return (int)constants$353.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void integerDotProduct16BitMixedSignednessAccelerated$set(MemorySegment seg, long index, int x) {
        constants$353.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle integerDotProduct32BitUnsignedAccelerated$VH() {
        return constants$354.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * VkBool32 integerDotProduct32BitUnsignedAccelerated;
     * }
     */
    public static int integerDotProduct32BitUnsignedAccelerated$get(MemorySegment seg) {
        return (int)constants$354.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * VkBool32 integerDotProduct32BitUnsignedAccelerated;
     * }
     */
    public static void integerDotProduct32BitUnsignedAccelerated$set(MemorySegment seg, int x) {
        constants$354.const$0.set(seg, x);
    }
    public static int integerDotProduct32BitUnsignedAccelerated$get(MemorySegment seg, long index) {
        return (int)constants$354.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void integerDotProduct32BitUnsignedAccelerated$set(MemorySegment seg, long index, int x) {
        constants$354.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle integerDotProduct32BitSignedAccelerated$VH() {
        return constants$354.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * VkBool32 integerDotProduct32BitSignedAccelerated;
     * }
     */
    public static int integerDotProduct32BitSignedAccelerated$get(MemorySegment seg) {
        return (int)constants$354.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * VkBool32 integerDotProduct32BitSignedAccelerated;
     * }
     */
    public static void integerDotProduct32BitSignedAccelerated$set(MemorySegment seg, int x) {
        constants$354.const$1.set(seg, x);
    }
    public static int integerDotProduct32BitSignedAccelerated$get(MemorySegment seg, long index) {
        return (int)constants$354.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void integerDotProduct32BitSignedAccelerated$set(MemorySegment seg, long index, int x) {
        constants$354.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle integerDotProduct32BitMixedSignednessAccelerated$VH() {
        return constants$354.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * VkBool32 integerDotProduct32BitMixedSignednessAccelerated;
     * }
     */
    public static int integerDotProduct32BitMixedSignednessAccelerated$get(MemorySegment seg) {
        return (int)constants$354.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * VkBool32 integerDotProduct32BitMixedSignednessAccelerated;
     * }
     */
    public static void integerDotProduct32BitMixedSignednessAccelerated$set(MemorySegment seg, int x) {
        constants$354.const$2.set(seg, x);
    }
    public static int integerDotProduct32BitMixedSignednessAccelerated$get(MemorySegment seg, long index) {
        return (int)constants$354.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void integerDotProduct32BitMixedSignednessAccelerated$set(MemorySegment seg, long index, int x) {
        constants$354.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle integerDotProduct64BitUnsignedAccelerated$VH() {
        return constants$354.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * VkBool32 integerDotProduct64BitUnsignedAccelerated;
     * }
     */
    public static int integerDotProduct64BitUnsignedAccelerated$get(MemorySegment seg) {
        return (int)constants$354.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * VkBool32 integerDotProduct64BitUnsignedAccelerated;
     * }
     */
    public static void integerDotProduct64BitUnsignedAccelerated$set(MemorySegment seg, int x) {
        constants$354.const$3.set(seg, x);
    }
    public static int integerDotProduct64BitUnsignedAccelerated$get(MemorySegment seg, long index) {
        return (int)constants$354.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void integerDotProduct64BitUnsignedAccelerated$set(MemorySegment seg, long index, int x) {
        constants$354.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle integerDotProduct64BitSignedAccelerated$VH() {
        return constants$354.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * VkBool32 integerDotProduct64BitSignedAccelerated;
     * }
     */
    public static int integerDotProduct64BitSignedAccelerated$get(MemorySegment seg) {
        return (int)constants$354.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * VkBool32 integerDotProduct64BitSignedAccelerated;
     * }
     */
    public static void integerDotProduct64BitSignedAccelerated$set(MemorySegment seg, int x) {
        constants$354.const$4.set(seg, x);
    }
    public static int integerDotProduct64BitSignedAccelerated$get(MemorySegment seg, long index) {
        return (int)constants$354.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void integerDotProduct64BitSignedAccelerated$set(MemorySegment seg, long index, int x) {
        constants$354.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle integerDotProduct64BitMixedSignednessAccelerated$VH() {
        return constants$354.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * VkBool32 integerDotProduct64BitMixedSignednessAccelerated;
     * }
     */
    public static int integerDotProduct64BitMixedSignednessAccelerated$get(MemorySegment seg) {
        return (int)constants$354.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * VkBool32 integerDotProduct64BitMixedSignednessAccelerated;
     * }
     */
    public static void integerDotProduct64BitMixedSignednessAccelerated$set(MemorySegment seg, int x) {
        constants$354.const$5.set(seg, x);
    }
    public static int integerDotProduct64BitMixedSignednessAccelerated$get(MemorySegment seg, long index) {
        return (int)constants$354.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void integerDotProduct64BitMixedSignednessAccelerated$set(MemorySegment seg, long index, int x) {
        constants$354.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle integerDotProductAccumulatingSaturating8BitUnsignedAccelerated$VH() {
        return constants$355.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * VkBool32 integerDotProductAccumulatingSaturating8BitUnsignedAccelerated;
     * }
     */
    public static int integerDotProductAccumulatingSaturating8BitUnsignedAccelerated$get(MemorySegment seg) {
        return (int)constants$355.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * VkBool32 integerDotProductAccumulatingSaturating8BitUnsignedAccelerated;
     * }
     */
    public static void integerDotProductAccumulatingSaturating8BitUnsignedAccelerated$set(MemorySegment seg, int x) {
        constants$355.const$0.set(seg, x);
    }
    public static int integerDotProductAccumulatingSaturating8BitUnsignedAccelerated$get(MemorySegment seg, long index) {
        return (int)constants$355.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void integerDotProductAccumulatingSaturating8BitUnsignedAccelerated$set(MemorySegment seg, long index, int x) {
        constants$355.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle integerDotProductAccumulatingSaturating8BitSignedAccelerated$VH() {
        return constants$355.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * VkBool32 integerDotProductAccumulatingSaturating8BitSignedAccelerated;
     * }
     */
    public static int integerDotProductAccumulatingSaturating8BitSignedAccelerated$get(MemorySegment seg) {
        return (int)constants$355.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * VkBool32 integerDotProductAccumulatingSaturating8BitSignedAccelerated;
     * }
     */
    public static void integerDotProductAccumulatingSaturating8BitSignedAccelerated$set(MemorySegment seg, int x) {
        constants$355.const$1.set(seg, x);
    }
    public static int integerDotProductAccumulatingSaturating8BitSignedAccelerated$get(MemorySegment seg, long index) {
        return (int)constants$355.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void integerDotProductAccumulatingSaturating8BitSignedAccelerated$set(MemorySegment seg, long index, int x) {
        constants$355.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated$VH() {
        return constants$355.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * VkBool32 integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated;
     * }
     */
    public static int integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated$get(MemorySegment seg) {
        return (int)constants$355.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * VkBool32 integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated;
     * }
     */
    public static void integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated$set(MemorySegment seg, int x) {
        constants$355.const$2.set(seg, x);
    }
    public static int integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated$get(MemorySegment seg, long index) {
        return (int)constants$355.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated$set(MemorySegment seg, long index, int x) {
        constants$355.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated$VH() {
        return constants$355.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * VkBool32 integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated;
     * }
     */
    public static int integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated$get(MemorySegment seg) {
        return (int)constants$355.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * VkBool32 integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated;
     * }
     */
    public static void integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated$set(MemorySegment seg, int x) {
        constants$355.const$3.set(seg, x);
    }
    public static int integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated$get(MemorySegment seg, long index) {
        return (int)constants$355.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated$set(MemorySegment seg, long index, int x) {
        constants$355.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated$VH() {
        return constants$355.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * VkBool32 integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated;
     * }
     */
    public static int integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated$get(MemorySegment seg) {
        return (int)constants$355.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * VkBool32 integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated;
     * }
     */
    public static void integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated$set(MemorySegment seg, int x) {
        constants$355.const$4.set(seg, x);
    }
    public static int integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated$get(MemorySegment seg, long index) {
        return (int)constants$355.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated$set(MemorySegment seg, long index, int x) {
        constants$355.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated$VH() {
        return constants$355.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * VkBool32 integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated;
     * }
     */
    public static int integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated$get(MemorySegment seg) {
        return (int)constants$355.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * VkBool32 integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated;
     * }
     */
    public static void integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated$set(MemorySegment seg, int x) {
        constants$355.const$5.set(seg, x);
    }
    public static int integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated$get(MemorySegment seg, long index) {
        return (int)constants$355.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated$set(MemorySegment seg, long index, int x) {
        constants$355.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle integerDotProductAccumulatingSaturating16BitUnsignedAccelerated$VH() {
        return constants$356.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * VkBool32 integerDotProductAccumulatingSaturating16BitUnsignedAccelerated;
     * }
     */
    public static int integerDotProductAccumulatingSaturating16BitUnsignedAccelerated$get(MemorySegment seg) {
        return (int)constants$356.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * VkBool32 integerDotProductAccumulatingSaturating16BitUnsignedAccelerated;
     * }
     */
    public static void integerDotProductAccumulatingSaturating16BitUnsignedAccelerated$set(MemorySegment seg, int x) {
        constants$356.const$0.set(seg, x);
    }
    public static int integerDotProductAccumulatingSaturating16BitUnsignedAccelerated$get(MemorySegment seg, long index) {
        return (int)constants$356.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void integerDotProductAccumulatingSaturating16BitUnsignedAccelerated$set(MemorySegment seg, long index, int x) {
        constants$356.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle integerDotProductAccumulatingSaturating16BitSignedAccelerated$VH() {
        return constants$356.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * VkBool32 integerDotProductAccumulatingSaturating16BitSignedAccelerated;
     * }
     */
    public static int integerDotProductAccumulatingSaturating16BitSignedAccelerated$get(MemorySegment seg) {
        return (int)constants$356.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * VkBool32 integerDotProductAccumulatingSaturating16BitSignedAccelerated;
     * }
     */
    public static void integerDotProductAccumulatingSaturating16BitSignedAccelerated$set(MemorySegment seg, int x) {
        constants$356.const$1.set(seg, x);
    }
    public static int integerDotProductAccumulatingSaturating16BitSignedAccelerated$get(MemorySegment seg, long index) {
        return (int)constants$356.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void integerDotProductAccumulatingSaturating16BitSignedAccelerated$set(MemorySegment seg, long index, int x) {
        constants$356.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated$VH() {
        return constants$356.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * VkBool32 integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated;
     * }
     */
    public static int integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated$get(MemorySegment seg) {
        return (int)constants$356.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * VkBool32 integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated;
     * }
     */
    public static void integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated$set(MemorySegment seg, int x) {
        constants$356.const$2.set(seg, x);
    }
    public static int integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated$get(MemorySegment seg, long index) {
        return (int)constants$356.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated$set(MemorySegment seg, long index, int x) {
        constants$356.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle integerDotProductAccumulatingSaturating32BitUnsignedAccelerated$VH() {
        return constants$356.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * VkBool32 integerDotProductAccumulatingSaturating32BitUnsignedAccelerated;
     * }
     */
    public static int integerDotProductAccumulatingSaturating32BitUnsignedAccelerated$get(MemorySegment seg) {
        return (int)constants$356.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * VkBool32 integerDotProductAccumulatingSaturating32BitUnsignedAccelerated;
     * }
     */
    public static void integerDotProductAccumulatingSaturating32BitUnsignedAccelerated$set(MemorySegment seg, int x) {
        constants$356.const$3.set(seg, x);
    }
    public static int integerDotProductAccumulatingSaturating32BitUnsignedAccelerated$get(MemorySegment seg, long index) {
        return (int)constants$356.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void integerDotProductAccumulatingSaturating32BitUnsignedAccelerated$set(MemorySegment seg, long index, int x) {
        constants$356.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle integerDotProductAccumulatingSaturating32BitSignedAccelerated$VH() {
        return constants$356.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * VkBool32 integerDotProductAccumulatingSaturating32BitSignedAccelerated;
     * }
     */
    public static int integerDotProductAccumulatingSaturating32BitSignedAccelerated$get(MemorySegment seg) {
        return (int)constants$356.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * VkBool32 integerDotProductAccumulatingSaturating32BitSignedAccelerated;
     * }
     */
    public static void integerDotProductAccumulatingSaturating32BitSignedAccelerated$set(MemorySegment seg, int x) {
        constants$356.const$4.set(seg, x);
    }
    public static int integerDotProductAccumulatingSaturating32BitSignedAccelerated$get(MemorySegment seg, long index) {
        return (int)constants$356.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void integerDotProductAccumulatingSaturating32BitSignedAccelerated$set(MemorySegment seg, long index, int x) {
        constants$356.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated$VH() {
        return constants$356.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * VkBool32 integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated;
     * }
     */
    public static int integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated$get(MemorySegment seg) {
        return (int)constants$356.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * VkBool32 integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated;
     * }
     */
    public static void integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated$set(MemorySegment seg, int x) {
        constants$356.const$5.set(seg, x);
    }
    public static int integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated$get(MemorySegment seg, long index) {
        return (int)constants$356.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated$set(MemorySegment seg, long index, int x) {
        constants$356.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle integerDotProductAccumulatingSaturating64BitUnsignedAccelerated$VH() {
        return constants$357.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * VkBool32 integerDotProductAccumulatingSaturating64BitUnsignedAccelerated;
     * }
     */
    public static int integerDotProductAccumulatingSaturating64BitUnsignedAccelerated$get(MemorySegment seg) {
        return (int)constants$357.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * VkBool32 integerDotProductAccumulatingSaturating64BitUnsignedAccelerated;
     * }
     */
    public static void integerDotProductAccumulatingSaturating64BitUnsignedAccelerated$set(MemorySegment seg, int x) {
        constants$357.const$0.set(seg, x);
    }
    public static int integerDotProductAccumulatingSaturating64BitUnsignedAccelerated$get(MemorySegment seg, long index) {
        return (int)constants$357.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void integerDotProductAccumulatingSaturating64BitUnsignedAccelerated$set(MemorySegment seg, long index, int x) {
        constants$357.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle integerDotProductAccumulatingSaturating64BitSignedAccelerated$VH() {
        return constants$357.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * VkBool32 integerDotProductAccumulatingSaturating64BitSignedAccelerated;
     * }
     */
    public static int integerDotProductAccumulatingSaturating64BitSignedAccelerated$get(MemorySegment seg) {
        return (int)constants$357.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * VkBool32 integerDotProductAccumulatingSaturating64BitSignedAccelerated;
     * }
     */
    public static void integerDotProductAccumulatingSaturating64BitSignedAccelerated$set(MemorySegment seg, int x) {
        constants$357.const$1.set(seg, x);
    }
    public static int integerDotProductAccumulatingSaturating64BitSignedAccelerated$get(MemorySegment seg, long index) {
        return (int)constants$357.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void integerDotProductAccumulatingSaturating64BitSignedAccelerated$set(MemorySegment seg, long index, int x) {
        constants$357.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated$VH() {
        return constants$357.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * VkBool32 integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated;
     * }
     */
    public static int integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated$get(MemorySegment seg) {
        return (int)constants$357.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * VkBool32 integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated;
     * }
     */
    public static void integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated$set(MemorySegment seg, int x) {
        constants$357.const$2.set(seg, x);
    }
    public static int integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated$get(MemorySegment seg, long index) {
        return (int)constants$357.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated$set(MemorySegment seg, long index, int x) {
        constants$357.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle storageTexelBufferOffsetAlignmentBytes$VH() {
        return constants$357.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * VkDeviceSize storageTexelBufferOffsetAlignmentBytes;
     * }
     */
    public static long storageTexelBufferOffsetAlignmentBytes$get(MemorySegment seg) {
        return (long)constants$357.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * VkDeviceSize storageTexelBufferOffsetAlignmentBytes;
     * }
     */
    public static void storageTexelBufferOffsetAlignmentBytes$set(MemorySegment seg, long x) {
        constants$357.const$3.set(seg, x);
    }
    public static long storageTexelBufferOffsetAlignmentBytes$get(MemorySegment seg, long index) {
        return (long)constants$357.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void storageTexelBufferOffsetAlignmentBytes$set(MemorySegment seg, long index, long x) {
        constants$357.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle storageTexelBufferOffsetSingleTexelAlignment$VH() {
        return constants$357.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * VkBool32 storageTexelBufferOffsetSingleTexelAlignment;
     * }
     */
    public static int storageTexelBufferOffsetSingleTexelAlignment$get(MemorySegment seg) {
        return (int)constants$357.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * VkBool32 storageTexelBufferOffsetSingleTexelAlignment;
     * }
     */
    public static void storageTexelBufferOffsetSingleTexelAlignment$set(MemorySegment seg, int x) {
        constants$357.const$4.set(seg, x);
    }
    public static int storageTexelBufferOffsetSingleTexelAlignment$get(MemorySegment seg, long index) {
        return (int)constants$357.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void storageTexelBufferOffsetSingleTexelAlignment$set(MemorySegment seg, long index, int x) {
        constants$357.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle uniformTexelBufferOffsetAlignmentBytes$VH() {
        return constants$357.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * VkDeviceSize uniformTexelBufferOffsetAlignmentBytes;
     * }
     */
    public static long uniformTexelBufferOffsetAlignmentBytes$get(MemorySegment seg) {
        return (long)constants$357.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * VkDeviceSize uniformTexelBufferOffsetAlignmentBytes;
     * }
     */
    public static void uniformTexelBufferOffsetAlignmentBytes$set(MemorySegment seg, long x) {
        constants$357.const$5.set(seg, x);
    }
    public static long uniformTexelBufferOffsetAlignmentBytes$get(MemorySegment seg, long index) {
        return (long)constants$357.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void uniformTexelBufferOffsetAlignmentBytes$set(MemorySegment seg, long index, long x) {
        constants$357.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle uniformTexelBufferOffsetSingleTexelAlignment$VH() {
        return constants$358.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * VkBool32 uniformTexelBufferOffsetSingleTexelAlignment;
     * }
     */
    public static int uniformTexelBufferOffsetSingleTexelAlignment$get(MemorySegment seg) {
        return (int)constants$358.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * VkBool32 uniformTexelBufferOffsetSingleTexelAlignment;
     * }
     */
    public static void uniformTexelBufferOffsetSingleTexelAlignment$set(MemorySegment seg, int x) {
        constants$358.const$0.set(seg, x);
    }
    public static int uniformTexelBufferOffsetSingleTexelAlignment$get(MemorySegment seg, long index) {
        return (int)constants$358.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void uniformTexelBufferOffsetSingleTexelAlignment$set(MemorySegment seg, long index, int x) {
        constants$358.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle maxBufferSize$VH() {
        return constants$358.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * VkDeviceSize maxBufferSize;
     * }
     */
    public static long maxBufferSize$get(MemorySegment seg) {
        return (long)constants$358.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * VkDeviceSize maxBufferSize;
     * }
     */
    public static void maxBufferSize$set(MemorySegment seg, long x) {
        constants$358.const$1.set(seg, x);
    }
    public static long maxBufferSize$get(MemorySegment seg, long index) {
        return (long)constants$358.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void maxBufferSize$set(MemorySegment seg, long index, long x) {
        constants$358.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


