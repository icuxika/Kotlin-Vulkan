// Generated by jextract

package com.icuxika.kv.jextract.glfw;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class jextract_h_1 {

    /**
     * {@snippet :
     * #define GL_SPOT_EXPONENT 4613
     * }
     */
    public static int GL_SPOT_EXPONENT() {
        return (int)4613L;
    }
    /**
     * {@snippet :
     * #define GL_SPOT_CUTOFF 4614
     * }
     */
    public static int GL_SPOT_CUTOFF() {
        return (int)4614L;
    }
    /**
     * {@snippet :
     * #define GL_CONSTANT_ATTENUATION 4615
     * }
     */
    public static int GL_CONSTANT_ATTENUATION() {
        return (int)4615L;
    }
    /**
     * {@snippet :
     * #define GL_LINEAR_ATTENUATION 4616
     * }
     */
    public static int GL_LINEAR_ATTENUATION() {
        return (int)4616L;
    }
    /**
     * {@snippet :
     * #define GL_QUADRATIC_ATTENUATION 4617
     * }
     */
    public static int GL_QUADRATIC_ATTENUATION() {
        return (int)4617L;
    }
    /**
     * {@snippet :
     * #define GL_COMPILE 4864
     * }
     */
    public static int GL_COMPILE() {
        return (int)4864L;
    }
    /**
     * {@snippet :
     * #define GL_COMPILE_AND_EXECUTE 4865
     * }
     */
    public static int GL_COMPILE_AND_EXECUTE() {
        return (int)4865L;
    }
    /**
     * {@snippet :
     * #define GL_CLEAR 5376
     * }
     */
    public static int GL_CLEAR() {
        return (int)5376L;
    }
    /**
     * {@snippet :
     * #define GL_AND 5377
     * }
     */
    public static int GL_AND() {
        return (int)5377L;
    }
    /**
     * {@snippet :
     * #define GL_AND_REVERSE 5378
     * }
     */
    public static int GL_AND_REVERSE() {
        return (int)5378L;
    }
    /**
     * {@snippet :
     * #define GL_COPY 5379
     * }
     */
    public static int GL_COPY() {
        return (int)5379L;
    }
    /**
     * {@snippet :
     * #define GL_AND_INVERTED 5380
     * }
     */
    public static int GL_AND_INVERTED() {
        return (int)5380L;
    }
    /**
     * {@snippet :
     * #define GL_NOOP 5381
     * }
     */
    public static int GL_NOOP() {
        return (int)5381L;
    }
    /**
     * {@snippet :
     * #define GL_XOR 5382
     * }
     */
    public static int GL_XOR() {
        return (int)5382L;
    }
    /**
     * {@snippet :
     * #define GL_OR 5383
     * }
     */
    public static int GL_OR() {
        return (int)5383L;
    }
    /**
     * {@snippet :
     * #define GL_NOR 5384
     * }
     */
    public static int GL_NOR() {
        return (int)5384L;
    }
    /**
     * {@snippet :
     * #define GL_EQUIV 5385
     * }
     */
    public static int GL_EQUIV() {
        return (int)5385L;
    }
    /**
     * {@snippet :
     * #define GL_INVERT 5386
     * }
     */
    public static int GL_INVERT() {
        return (int)5386L;
    }
    /**
     * {@snippet :
     * #define GL_OR_REVERSE 5387
     * }
     */
    public static int GL_OR_REVERSE() {
        return (int)5387L;
    }
    /**
     * {@snippet :
     * #define GL_COPY_INVERTED 5388
     * }
     */
    public static int GL_COPY_INVERTED() {
        return (int)5388L;
    }
    /**
     * {@snippet :
     * #define GL_OR_INVERTED 5389
     * }
     */
    public static int GL_OR_INVERTED() {
        return (int)5389L;
    }
    /**
     * {@snippet :
     * #define GL_NAND 5390
     * }
     */
    public static int GL_NAND() {
        return (int)5390L;
    }
    /**
     * {@snippet :
     * #define GL_SET 5391
     * }
     */
    public static int GL_SET() {
        return (int)5391L;
    }
    /**
     * {@snippet :
     * #define GL_EMISSION 5632
     * }
     */
    public static int GL_EMISSION() {
        return (int)5632L;
    }
    /**
     * {@snippet :
     * #define GL_SHININESS 5633
     * }
     */
    public static int GL_SHININESS() {
        return (int)5633L;
    }
    /**
     * {@snippet :
     * #define GL_AMBIENT_AND_DIFFUSE 5634
     * }
     */
    public static int GL_AMBIENT_AND_DIFFUSE() {
        return (int)5634L;
    }
    /**
     * {@snippet :
     * #define GL_COLOR_INDEXES 5635
     * }
     */
    public static int GL_COLOR_INDEXES() {
        return (int)5635L;
    }
    /**
     * {@snippet :
     * #define GL_MODELVIEW 5888
     * }
     */
    public static int GL_MODELVIEW() {
        return (int)5888L;
    }
    /**
     * {@snippet :
     * #define GL_PROJECTION 5889
     * }
     */
    public static int GL_PROJECTION() {
        return (int)5889L;
    }
    /**
     * {@snippet :
     * #define GL_TEXTURE 5890
     * }
     */
    public static int GL_TEXTURE() {
        return (int)5890L;
    }
    /**
     * {@snippet :
     * #define GL_COLOR 6144
     * }
     */
    public static int GL_COLOR() {
        return (int)6144L;
    }
    /**
     * {@snippet :
     * #define GL_DEPTH 6145
     * }
     */
    public static int GL_DEPTH() {
        return (int)6145L;
    }
    /**
     * {@snippet :
     * #define GL_STENCIL 6146
     * }
     */
    public static int GL_STENCIL() {
        return (int)6146L;
    }
    /**
     * {@snippet :
     * #define GL_COLOR_INDEX 6400
     * }
     */
    public static int GL_COLOR_INDEX() {
        return (int)6400L;
    }
    /**
     * {@snippet :
     * #define GL_STENCIL_INDEX 6401
     * }
     */
    public static int GL_STENCIL_INDEX() {
        return (int)6401L;
    }
    /**
     * {@snippet :
     * #define GL_DEPTH_COMPONENT 6402
     * }
     */
    public static int GL_DEPTH_COMPONENT() {
        return (int)6402L;
    }
    /**
     * {@snippet :
     * #define GL_RED 6403
     * }
     */
    public static int GL_RED() {
        return (int)6403L;
    }
    /**
     * {@snippet :
     * #define GL_GREEN 6404
     * }
     */
    public static int GL_GREEN() {
        return (int)6404L;
    }
    /**
     * {@snippet :
     * #define GL_BLUE 6405
     * }
     */
    public static int GL_BLUE() {
        return (int)6405L;
    }
    /**
     * {@snippet :
     * #define GL_ALPHA 6406
     * }
     */
    public static int GL_ALPHA() {
        return (int)6406L;
    }
    /**
     * {@snippet :
     * #define GL_RGB 6407
     * }
     */
    public static int GL_RGB() {
        return (int)6407L;
    }
    /**
     * {@snippet :
     * #define GL_RGBA 6408
     * }
     */
    public static int GL_RGBA() {
        return (int)6408L;
    }
    /**
     * {@snippet :
     * #define GL_LUMINANCE 6409
     * }
     */
    public static int GL_LUMINANCE() {
        return (int)6409L;
    }
    /**
     * {@snippet :
     * #define GL_LUMINANCE_ALPHA 6410
     * }
     */
    public static int GL_LUMINANCE_ALPHA() {
        return (int)6410L;
    }
    /**
     * {@snippet :
     * #define GL_BITMAP 6656
     * }
     */
    public static int GL_BITMAP() {
        return (int)6656L;
    }
    /**
     * {@snippet :
     * #define GL_POINT 6912
     * }
     */
    public static int GL_POINT() {
        return (int)6912L;
    }
    /**
     * {@snippet :
     * #define GL_LINE 6913
     * }
     */
    public static int GL_LINE() {
        return (int)6913L;
    }
    /**
     * {@snippet :
     * #define GL_FILL 6914
     * }
     */
    public static int GL_FILL() {
        return (int)6914L;
    }
    /**
     * {@snippet :
     * #define GL_RENDER 7168
     * }
     */
    public static int GL_RENDER() {
        return (int)7168L;
    }
    /**
     * {@snippet :
     * #define GL_FEEDBACK 7169
     * }
     */
    public static int GL_FEEDBACK() {
        return (int)7169L;
    }
    /**
     * {@snippet :
     * #define GL_SELECT 7170
     * }
     */
    public static int GL_SELECT() {
        return (int)7170L;
    }
    /**
     * {@snippet :
     * #define GL_FLAT 7424
     * }
     */
    public static int GL_FLAT() {
        return (int)7424L;
    }
    /**
     * {@snippet :
     * #define GL_SMOOTH 7425
     * }
     */
    public static int GL_SMOOTH() {
        return (int)7425L;
    }
    /**
     * {@snippet :
     * #define GL_KEEP 7680
     * }
     */
    public static int GL_KEEP() {
        return (int)7680L;
    }
    /**
     * {@snippet :
     * #define GL_REPLACE 7681
     * }
     */
    public static int GL_REPLACE() {
        return (int)7681L;
    }
    /**
     * {@snippet :
     * #define GL_INCR 7682
     * }
     */
    public static int GL_INCR() {
        return (int)7682L;
    }
    /**
     * {@snippet :
     * #define GL_DECR 7683
     * }
     */
    public static int GL_DECR() {
        return (int)7683L;
    }
    /**
     * {@snippet :
     * #define GL_VENDOR 7936
     * }
     */
    public static int GL_VENDOR() {
        return (int)7936L;
    }
    /**
     * {@snippet :
     * #define GL_RENDERER 7937
     * }
     */
    public static int GL_RENDERER() {
        return (int)7937L;
    }
    /**
     * {@snippet :
     * #define GL_VERSION 7938
     * }
     */
    public static int GL_VERSION() {
        return (int)7938L;
    }
    /**
     * {@snippet :
     * #define GL_EXTENSIONS 7939
     * }
     */
    public static int GL_EXTENSIONS() {
        return (int)7939L;
    }
    /**
     * {@snippet :
     * #define GL_S 8192
     * }
     */
    public static int GL_S() {
        return (int)8192L;
    }
    /**
     * {@snippet :
     * #define GL_T 8193
     * }
     */
    public static int GL_T() {
        return (int)8193L;
    }
    /**
     * {@snippet :
     * #define GL_R 8194
     * }
     */
    public static int GL_R() {
        return (int)8194L;
    }
    /**
     * {@snippet :
     * #define GL_Q 8195
     * }
     */
    public static int GL_Q() {
        return (int)8195L;
    }
    /**
     * {@snippet :
     * #define GL_MODULATE 8448
     * }
     */
    public static int GL_MODULATE() {
        return (int)8448L;
    }
    /**
     * {@snippet :
     * #define GL_DECAL 8449
     * }
     */
    public static int GL_DECAL() {
        return (int)8449L;
    }
    /**
     * {@snippet :
     * #define GL_TEXTURE_ENV_MODE 8704
     * }
     */
    public static int GL_TEXTURE_ENV_MODE() {
        return (int)8704L;
    }
    /**
     * {@snippet :
     * #define GL_TEXTURE_ENV_COLOR 8705
     * }
     */
    public static int GL_TEXTURE_ENV_COLOR() {
        return (int)8705L;
    }
    /**
     * {@snippet :
     * #define GL_TEXTURE_ENV 8960
     * }
     */
    public static int GL_TEXTURE_ENV() {
        return (int)8960L;
    }
    /**
     * {@snippet :
     * #define GL_EYE_LINEAR 9216
     * }
     */
    public static int GL_EYE_LINEAR() {
        return (int)9216L;
    }
    /**
     * {@snippet :
     * #define GL_OBJECT_LINEAR 9217
     * }
     */
    public static int GL_OBJECT_LINEAR() {
        return (int)9217L;
    }
    /**
     * {@snippet :
     * #define GL_SPHERE_MAP 9218
     * }
     */
    public static int GL_SPHERE_MAP() {
        return (int)9218L;
    }
    /**
     * {@snippet :
     * #define GL_TEXTURE_GEN_MODE 9472
     * }
     */
    public static int GL_TEXTURE_GEN_MODE() {
        return (int)9472L;
    }
    /**
     * {@snippet :
     * #define GL_OBJECT_PLANE 9473
     * }
     */
    public static int GL_OBJECT_PLANE() {
        return (int)9473L;
    }
    /**
     * {@snippet :
     * #define GL_EYE_PLANE 9474
     * }
     */
    public static int GL_EYE_PLANE() {
        return (int)9474L;
    }
    /**
     * {@snippet :
     * #define GL_NEAREST 9728
     * }
     */
    public static int GL_NEAREST() {
        return (int)9728L;
    }
    /**
     * {@snippet :
     * #define GL_LINEAR 9729
     * }
     */
    public static int GL_LINEAR() {
        return (int)9729L;
    }
    /**
     * {@snippet :
     * #define GL_NEAREST_MIPMAP_NEAREST 9984
     * }
     */
    public static int GL_NEAREST_MIPMAP_NEAREST() {
        return (int)9984L;
    }
    /**
     * {@snippet :
     * #define GL_LINEAR_MIPMAP_NEAREST 9985
     * }
     */
    public static int GL_LINEAR_MIPMAP_NEAREST() {
        return (int)9985L;
    }
    /**
     * {@snippet :
     * #define GL_NEAREST_MIPMAP_LINEAR 9986
     * }
     */
    public static int GL_NEAREST_MIPMAP_LINEAR() {
        return (int)9986L;
    }
    /**
     * {@snippet :
     * #define GL_LINEAR_MIPMAP_LINEAR 9987
     * }
     */
    public static int GL_LINEAR_MIPMAP_LINEAR() {
        return (int)9987L;
    }
    /**
     * {@snippet :
     * #define GL_TEXTURE_MAG_FILTER 10240
     * }
     */
    public static int GL_TEXTURE_MAG_FILTER() {
        return (int)10240L;
    }
    /**
     * {@snippet :
     * #define GL_TEXTURE_MIN_FILTER 10241
     * }
     */
    public static int GL_TEXTURE_MIN_FILTER() {
        return (int)10241L;
    }
    /**
     * {@snippet :
     * #define GL_TEXTURE_WRAP_S 10242
     * }
     */
    public static int GL_TEXTURE_WRAP_S() {
        return (int)10242L;
    }
    /**
     * {@snippet :
     * #define GL_TEXTURE_WRAP_T 10243
     * }
     */
    public static int GL_TEXTURE_WRAP_T() {
        return (int)10243L;
    }
    /**
     * {@snippet :
     * #define GL_CLAMP 10496
     * }
     */
    public static int GL_CLAMP() {
        return (int)10496L;
    }
    /**
     * {@snippet :
     * #define GL_REPEAT 10497
     * }
     */
    public static int GL_REPEAT() {
        return (int)10497L;
    }
    /**
     * {@snippet :
     * #define GL_CLIENT_PIXEL_STORE_BIT 1
     * }
     */
    public static int GL_CLIENT_PIXEL_STORE_BIT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define GL_CLIENT_VERTEX_ARRAY_BIT 2
     * }
     */
    public static int GL_CLIENT_VERTEX_ARRAY_BIT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define GL_POLYGON_OFFSET_FACTOR 32824
     * }
     */
    public static int GL_POLYGON_OFFSET_FACTOR() {
        return (int)32824L;
    }
    /**
     * {@snippet :
     * #define GL_POLYGON_OFFSET_UNITS 10752
     * }
     */
    public static int GL_POLYGON_OFFSET_UNITS() {
        return (int)10752L;
    }
    /**
     * {@snippet :
     * #define GL_POLYGON_OFFSET_POINT 10753
     * }
     */
    public static int GL_POLYGON_OFFSET_POINT() {
        return (int)10753L;
    }
    /**
     * {@snippet :
     * #define GL_POLYGON_OFFSET_LINE 10754
     * }
     */
    public static int GL_POLYGON_OFFSET_LINE() {
        return (int)10754L;
    }
    /**
     * {@snippet :
     * #define GL_POLYGON_OFFSET_FILL 32823
     * }
     */
    public static int GL_POLYGON_OFFSET_FILL() {
        return (int)32823L;
    }
    /**
     * {@snippet :
     * #define GL_ALPHA4 32827
     * }
     */
    public static int GL_ALPHA4() {
        return (int)32827L;
    }
    /**
     * {@snippet :
     * #define GL_ALPHA8 32828
     * }
     */
    public static int GL_ALPHA8() {
        return (int)32828L;
    }
    /**
     * {@snippet :
     * #define GL_ALPHA12 32829
     * }
     */
    public static int GL_ALPHA12() {
        return (int)32829L;
    }
    /**
     * {@snippet :
     * #define GL_ALPHA16 32830
     * }
     */
    public static int GL_ALPHA16() {
        return (int)32830L;
    }
    /**
     * {@snippet :
     * #define GL_LUMINANCE4 32831
     * }
     */
    public static int GL_LUMINANCE4() {
        return (int)32831L;
    }
    /**
     * {@snippet :
     * #define GL_LUMINANCE8 32832
     * }
     */
    public static int GL_LUMINANCE8() {
        return (int)32832L;
    }
    /**
     * {@snippet :
     * #define GL_LUMINANCE12 32833
     * }
     */
    public static int GL_LUMINANCE12() {
        return (int)32833L;
    }
    /**
     * {@snippet :
     * #define GL_LUMINANCE16 32834
     * }
     */
    public static int GL_LUMINANCE16() {
        return (int)32834L;
    }
    /**
     * {@snippet :
     * #define GL_LUMINANCE4_ALPHA4 32835
     * }
     */
    public static int GL_LUMINANCE4_ALPHA4() {
        return (int)32835L;
    }
    /**
     * {@snippet :
     * #define GL_LUMINANCE6_ALPHA2 32836
     * }
     */
    public static int GL_LUMINANCE6_ALPHA2() {
        return (int)32836L;
    }
    /**
     * {@snippet :
     * #define GL_LUMINANCE8_ALPHA8 32837
     * }
     */
    public static int GL_LUMINANCE8_ALPHA8() {
        return (int)32837L;
    }
    /**
     * {@snippet :
     * #define GL_LUMINANCE12_ALPHA4 32838
     * }
     */
    public static int GL_LUMINANCE12_ALPHA4() {
        return (int)32838L;
    }
    /**
     * {@snippet :
     * #define GL_LUMINANCE12_ALPHA12 32839
     * }
     */
    public static int GL_LUMINANCE12_ALPHA12() {
        return (int)32839L;
    }
    /**
     * {@snippet :
     * #define GL_LUMINANCE16_ALPHA16 32840
     * }
     */
    public static int GL_LUMINANCE16_ALPHA16() {
        return (int)32840L;
    }
    /**
     * {@snippet :
     * #define GL_INTENSITY 32841
     * }
     */
    public static int GL_INTENSITY() {
        return (int)32841L;
    }
    /**
     * {@snippet :
     * #define GL_INTENSITY4 32842
     * }
     */
    public static int GL_INTENSITY4() {
        return (int)32842L;
    }
    /**
     * {@snippet :
     * #define GL_INTENSITY8 32843
     * }
     */
    public static int GL_INTENSITY8() {
        return (int)32843L;
    }
    /**
     * {@snippet :
     * #define GL_INTENSITY12 32844
     * }
     */
    public static int GL_INTENSITY12() {
        return (int)32844L;
    }
    /**
     * {@snippet :
     * #define GL_INTENSITY16 32845
     * }
     */
    public static int GL_INTENSITY16() {
        return (int)32845L;
    }
    /**
     * {@snippet :
     * #define GL_R3_G3_B2 10768
     * }
     */
    public static int GL_R3_G3_B2() {
        return (int)10768L;
    }
    /**
     * {@snippet :
     * #define GL_RGB4 32847
     * }
     */
    public static int GL_RGB4() {
        return (int)32847L;
    }
    /**
     * {@snippet :
     * #define GL_RGB5 32848
     * }
     */
    public static int GL_RGB5() {
        return (int)32848L;
    }
    /**
     * {@snippet :
     * #define GL_RGB8 32849
     * }
     */
    public static int GL_RGB8() {
        return (int)32849L;
    }
    /**
     * {@snippet :
     * #define GL_RGB10 32850
     * }
     */
    public static int GL_RGB10() {
        return (int)32850L;
    }
    /**
     * {@snippet :
     * #define GL_RGB12 32851
     * }
     */
    public static int GL_RGB12() {
        return (int)32851L;
    }
    /**
     * {@snippet :
     * #define GL_RGB16 32852
     * }
     */
    public static int GL_RGB16() {
        return (int)32852L;
    }
    /**
     * {@snippet :
     * #define GL_RGBA2 32853
     * }
     */
    public static int GL_RGBA2() {
        return (int)32853L;
    }
    /**
     * {@snippet :
     * #define GL_RGBA4 32854
     * }
     */
    public static int GL_RGBA4() {
        return (int)32854L;
    }
    /**
     * {@snippet :
     * #define GL_RGB5_A1 32855
     * }
     */
    public static int GL_RGB5_A1() {
        return (int)32855L;
    }
    /**
     * {@snippet :
     * #define GL_RGBA8 32856
     * }
     */
    public static int GL_RGBA8() {
        return (int)32856L;
    }
    /**
     * {@snippet :
     * #define GL_RGB10_A2 32857
     * }
     */
    public static int GL_RGB10_A2() {
        return (int)32857L;
    }
    /**
     * {@snippet :
     * #define GL_RGBA12 32858
     * }
     */
    public static int GL_RGBA12() {
        return (int)32858L;
    }
    /**
     * {@snippet :
     * #define GL_RGBA16 32859
     * }
     */
    public static int GL_RGBA16() {
        return (int)32859L;
    }
    /**
     * {@snippet :
     * #define GL_TEXTURE_RED_SIZE 32860
     * }
     */
    public static int GL_TEXTURE_RED_SIZE() {
        return (int)32860L;
    }
    /**
     * {@snippet :
     * #define GL_TEXTURE_GREEN_SIZE 32861
     * }
     */
    public static int GL_TEXTURE_GREEN_SIZE() {
        return (int)32861L;
    }
    /**
     * {@snippet :
     * #define GL_TEXTURE_BLUE_SIZE 32862
     * }
     */
    public static int GL_TEXTURE_BLUE_SIZE() {
        return (int)32862L;
    }
    /**
     * {@snippet :
     * #define GL_TEXTURE_ALPHA_SIZE 32863
     * }
     */
    public static int GL_TEXTURE_ALPHA_SIZE() {
        return (int)32863L;
    }
    /**
     * {@snippet :
     * #define GL_TEXTURE_LUMINANCE_SIZE 32864
     * }
     */
    public static int GL_TEXTURE_LUMINANCE_SIZE() {
        return (int)32864L;
    }
    /**
     * {@snippet :
     * #define GL_TEXTURE_INTENSITY_SIZE 32865
     * }
     */
    public static int GL_TEXTURE_INTENSITY_SIZE() {
        return (int)32865L;
    }
    /**
     * {@snippet :
     * #define GL_PROXY_TEXTURE_1D 32867
     * }
     */
    public static int GL_PROXY_TEXTURE_1D() {
        return (int)32867L;
    }
    /**
     * {@snippet :
     * #define GL_PROXY_TEXTURE_2D 32868
     * }
     */
    public static int GL_PROXY_TEXTURE_2D() {
        return (int)32868L;
    }
    /**
     * {@snippet :
     * #define GL_TEXTURE_PRIORITY 32870
     * }
     */
    public static int GL_TEXTURE_PRIORITY() {
        return (int)32870L;
    }
    /**
     * {@snippet :
     * #define GL_TEXTURE_RESIDENT 32871
     * }
     */
    public static int GL_TEXTURE_RESIDENT() {
        return (int)32871L;
    }
    /**
     * {@snippet :
     * #define GL_TEXTURE_BINDING_1D 32872
     * }
     */
    public static int GL_TEXTURE_BINDING_1D() {
        return (int)32872L;
    }
    /**
     * {@snippet :
     * #define GL_TEXTURE_BINDING_2D 32873
     * }
     */
    public static int GL_TEXTURE_BINDING_2D() {
        return (int)32873L;
    }
    /**
     * {@snippet :
     * #define GL_VERTEX_ARRAY 32884
     * }
     */
    public static int GL_VERTEX_ARRAY() {
        return (int)32884L;
    }
    /**
     * {@snippet :
     * #define GL_NORMAL_ARRAY 32885
     * }
     */
    public static int GL_NORMAL_ARRAY() {
        return (int)32885L;
    }
    /**
     * {@snippet :
     * #define GL_COLOR_ARRAY 32886
     * }
     */
    public static int GL_COLOR_ARRAY() {
        return (int)32886L;
    }
    /**
     * {@snippet :
     * #define GL_INDEX_ARRAY 32887
     * }
     */
    public static int GL_INDEX_ARRAY() {
        return (int)32887L;
    }
    /**
     * {@snippet :
     * #define GL_TEXTURE_COORD_ARRAY 32888
     * }
     */
    public static int GL_TEXTURE_COORD_ARRAY() {
        return (int)32888L;
    }
    /**
     * {@snippet :
     * #define GL_EDGE_FLAG_ARRAY 32889
     * }
     */
    public static int GL_EDGE_FLAG_ARRAY() {
        return (int)32889L;
    }
    /**
     * {@snippet :
     * #define GL_VERTEX_ARRAY_SIZE 32890
     * }
     */
    public static int GL_VERTEX_ARRAY_SIZE() {
        return (int)32890L;
    }
    /**
     * {@snippet :
     * #define GL_VERTEX_ARRAY_TYPE 32891
     * }
     */
    public static int GL_VERTEX_ARRAY_TYPE() {
        return (int)32891L;
    }
    /**
     * {@snippet :
     * #define GL_VERTEX_ARRAY_STRIDE 32892
     * }
     */
    public static int GL_VERTEX_ARRAY_STRIDE() {
        return (int)32892L;
    }
    /**
     * {@snippet :
     * #define GL_NORMAL_ARRAY_TYPE 32894
     * }
     */
    public static int GL_NORMAL_ARRAY_TYPE() {
        return (int)32894L;
    }
    /**
     * {@snippet :
     * #define GL_NORMAL_ARRAY_STRIDE 32895
     * }
     */
    public static int GL_NORMAL_ARRAY_STRIDE() {
        return (int)32895L;
    }
    /**
     * {@snippet :
     * #define GL_COLOR_ARRAY_SIZE 32897
     * }
     */
    public static int GL_COLOR_ARRAY_SIZE() {
        return (int)32897L;
    }
    /**
     * {@snippet :
     * #define GL_COLOR_ARRAY_TYPE 32898
     * }
     */
    public static int GL_COLOR_ARRAY_TYPE() {
        return (int)32898L;
    }
    /**
     * {@snippet :
     * #define GL_COLOR_ARRAY_STRIDE 32899
     * }
     */
    public static int GL_COLOR_ARRAY_STRIDE() {
        return (int)32899L;
    }
    /**
     * {@snippet :
     * #define GL_INDEX_ARRAY_TYPE 32901
     * }
     */
    public static int GL_INDEX_ARRAY_TYPE() {
        return (int)32901L;
    }
    /**
     * {@snippet :
     * #define GL_INDEX_ARRAY_STRIDE 32902
     * }
     */
    public static int GL_INDEX_ARRAY_STRIDE() {
        return (int)32902L;
    }
    /**
     * {@snippet :
     * #define GL_TEXTURE_COORD_ARRAY_SIZE 32904
     * }
     */
    public static int GL_TEXTURE_COORD_ARRAY_SIZE() {
        return (int)32904L;
    }
    /**
     * {@snippet :
     * #define GL_TEXTURE_COORD_ARRAY_TYPE 32905
     * }
     */
    public static int GL_TEXTURE_COORD_ARRAY_TYPE() {
        return (int)32905L;
    }
    /**
     * {@snippet :
     * #define GL_TEXTURE_COORD_ARRAY_STRIDE 32906
     * }
     */
    public static int GL_TEXTURE_COORD_ARRAY_STRIDE() {
        return (int)32906L;
    }
    /**
     * {@snippet :
     * #define GL_EDGE_FLAG_ARRAY_STRIDE 32908
     * }
     */
    public static int GL_EDGE_FLAG_ARRAY_STRIDE() {
        return (int)32908L;
    }
    /**
     * {@snippet :
     * #define GL_VERTEX_ARRAY_POINTER 32910
     * }
     */
    public static int GL_VERTEX_ARRAY_POINTER() {
        return (int)32910L;
    }
    /**
     * {@snippet :
     * #define GL_NORMAL_ARRAY_POINTER 32911
     * }
     */
    public static int GL_NORMAL_ARRAY_POINTER() {
        return (int)32911L;
    }
    /**
     * {@snippet :
     * #define GL_COLOR_ARRAY_POINTER 32912
     * }
     */
    public static int GL_COLOR_ARRAY_POINTER() {
        return (int)32912L;
    }
    /**
     * {@snippet :
     * #define GL_INDEX_ARRAY_POINTER 32913
     * }
     */
    public static int GL_INDEX_ARRAY_POINTER() {
        return (int)32913L;
    }
    /**
     * {@snippet :
     * #define GL_TEXTURE_COORD_ARRAY_POINTER 32914
     * }
     */
    public static int GL_TEXTURE_COORD_ARRAY_POINTER() {
        return (int)32914L;
    }
    /**
     * {@snippet :
     * #define GL_EDGE_FLAG_ARRAY_POINTER 32915
     * }
     */
    public static int GL_EDGE_FLAG_ARRAY_POINTER() {
        return (int)32915L;
    }
    /**
     * {@snippet :
     * #define GL_V2F 10784
     * }
     */
    public static int GL_V2F() {
        return (int)10784L;
    }
    /**
     * {@snippet :
     * #define GL_V3F 10785
     * }
     */
    public static int GL_V3F() {
        return (int)10785L;
    }
    /**
     * {@snippet :
     * #define GL_C4UB_V2F 10786
     * }
     */
    public static int GL_C4UB_V2F() {
        return (int)10786L;
    }
    /**
     * {@snippet :
     * #define GL_C4UB_V3F 10787
     * }
     */
    public static int GL_C4UB_V3F() {
        return (int)10787L;
    }
    /**
     * {@snippet :
     * #define GL_C3F_V3F 10788
     * }
     */
    public static int GL_C3F_V3F() {
        return (int)10788L;
    }
    /**
     * {@snippet :
     * #define GL_N3F_V3F 10789
     * }
     */
    public static int GL_N3F_V3F() {
        return (int)10789L;
    }
    /**
     * {@snippet :
     * #define GL_C4F_N3F_V3F 10790
     * }
     */
    public static int GL_C4F_N3F_V3F() {
        return (int)10790L;
    }
    /**
     * {@snippet :
     * #define GL_T2F_V3F 10791
     * }
     */
    public static int GL_T2F_V3F() {
        return (int)10791L;
    }
    /**
     * {@snippet :
     * #define GL_T4F_V4F 10792
     * }
     */
    public static int GL_T4F_V4F() {
        return (int)10792L;
    }
    /**
     * {@snippet :
     * #define GL_T2F_C4UB_V3F 10793
     * }
     */
    public static int GL_T2F_C4UB_V3F() {
        return (int)10793L;
    }
    /**
     * {@snippet :
     * #define GL_T2F_C3F_V3F 10794
     * }
     */
    public static int GL_T2F_C3F_V3F() {
        return (int)10794L;
    }
    /**
     * {@snippet :
     * #define GL_T2F_N3F_V3F 10795
     * }
     */
    public static int GL_T2F_N3F_V3F() {
        return (int)10795L;
    }
    /**
     * {@snippet :
     * #define GL_T2F_C4F_N3F_V3F 10796
     * }
     */
    public static int GL_T2F_C4F_N3F_V3F() {
        return (int)10796L;
    }
    /**
     * {@snippet :
     * #define GL_T4F_C4F_N3F_V4F 10797
     * }
     */
    public static int GL_T4F_C4F_N3F_V4F() {
        return (int)10797L;
    }
    /**
     * {@snippet :
     * #define GL_EXT_vertex_array 1
     * }
     */
    public static int GL_EXT_vertex_array() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define GL_EXT_bgra 1
     * }
     */
    public static int GL_EXT_bgra() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define GL_EXT_paletted_texture 1
     * }
     */
    public static int GL_EXT_paletted_texture() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define GL_WIN_swap_hint 1
     * }
     */
    public static int GL_WIN_swap_hint() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define GL_WIN_draw_range_elements 1
     * }
     */
    public static int GL_WIN_draw_range_elements() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define GL_VERTEX_ARRAY_EXT 32884
     * }
     */
    public static int GL_VERTEX_ARRAY_EXT() {
        return (int)32884L;
    }
    /**
     * {@snippet :
     * #define GL_NORMAL_ARRAY_EXT 32885
     * }
     */
    public static int GL_NORMAL_ARRAY_EXT() {
        return (int)32885L;
    }
    /**
     * {@snippet :
     * #define GL_COLOR_ARRAY_EXT 32886
     * }
     */
    public static int GL_COLOR_ARRAY_EXT() {
        return (int)32886L;
    }
    /**
     * {@snippet :
     * #define GL_INDEX_ARRAY_EXT 32887
     * }
     */
    public static int GL_INDEX_ARRAY_EXT() {
        return (int)32887L;
    }
    /**
     * {@snippet :
     * #define GL_TEXTURE_COORD_ARRAY_EXT 32888
     * }
     */
    public static int GL_TEXTURE_COORD_ARRAY_EXT() {
        return (int)32888L;
    }
    /**
     * {@snippet :
     * #define GL_EDGE_FLAG_ARRAY_EXT 32889
     * }
     */
    public static int GL_EDGE_FLAG_ARRAY_EXT() {
        return (int)32889L;
    }
    /**
     * {@snippet :
     * #define GL_VERTEX_ARRAY_SIZE_EXT 32890
     * }
     */
    public static int GL_VERTEX_ARRAY_SIZE_EXT() {
        return (int)32890L;
    }
    /**
     * {@snippet :
     * #define GL_VERTEX_ARRAY_TYPE_EXT 32891
     * }
     */
    public static int GL_VERTEX_ARRAY_TYPE_EXT() {
        return (int)32891L;
    }
    /**
     * {@snippet :
     * #define GL_VERTEX_ARRAY_STRIDE_EXT 32892
     * }
     */
    public static int GL_VERTEX_ARRAY_STRIDE_EXT() {
        return (int)32892L;
    }
    /**
     * {@snippet :
     * #define GL_VERTEX_ARRAY_COUNT_EXT 32893
     * }
     */
    public static int GL_VERTEX_ARRAY_COUNT_EXT() {
        return (int)32893L;
    }
    /**
     * {@snippet :
     * #define GL_NORMAL_ARRAY_TYPE_EXT 32894
     * }
     */
    public static int GL_NORMAL_ARRAY_TYPE_EXT() {
        return (int)32894L;
    }
    /**
     * {@snippet :
     * #define GL_NORMAL_ARRAY_STRIDE_EXT 32895
     * }
     */
    public static int GL_NORMAL_ARRAY_STRIDE_EXT() {
        return (int)32895L;
    }
    /**
     * {@snippet :
     * #define GL_NORMAL_ARRAY_COUNT_EXT 32896
     * }
     */
    public static int GL_NORMAL_ARRAY_COUNT_EXT() {
        return (int)32896L;
    }
    /**
     * {@snippet :
     * #define GL_COLOR_ARRAY_SIZE_EXT 32897
     * }
     */
    public static int GL_COLOR_ARRAY_SIZE_EXT() {
        return (int)32897L;
    }
    /**
     * {@snippet :
     * #define GL_COLOR_ARRAY_TYPE_EXT 32898
     * }
     */
    public static int GL_COLOR_ARRAY_TYPE_EXT() {
        return (int)32898L;
    }
    /**
     * {@snippet :
     * #define GL_COLOR_ARRAY_STRIDE_EXT 32899
     * }
     */
    public static int GL_COLOR_ARRAY_STRIDE_EXT() {
        return (int)32899L;
    }
    /**
     * {@snippet :
     * #define GL_COLOR_ARRAY_COUNT_EXT 32900
     * }
     */
    public static int GL_COLOR_ARRAY_COUNT_EXT() {
        return (int)32900L;
    }
    /**
     * {@snippet :
     * #define GL_INDEX_ARRAY_TYPE_EXT 32901
     * }
     */
    public static int GL_INDEX_ARRAY_TYPE_EXT() {
        return (int)32901L;
    }
    /**
     * {@snippet :
     * #define GL_INDEX_ARRAY_STRIDE_EXT 32902
     * }
     */
    public static int GL_INDEX_ARRAY_STRIDE_EXT() {
        return (int)32902L;
    }
    /**
     * {@snippet :
     * #define GL_INDEX_ARRAY_COUNT_EXT 32903
     * }
     */
    public static int GL_INDEX_ARRAY_COUNT_EXT() {
        return (int)32903L;
    }
    /**
     * {@snippet :
     * #define GL_TEXTURE_COORD_ARRAY_SIZE_EXT 32904
     * }
     */
    public static int GL_TEXTURE_COORD_ARRAY_SIZE_EXT() {
        return (int)32904L;
    }
    /**
     * {@snippet :
     * #define GL_TEXTURE_COORD_ARRAY_TYPE_EXT 32905
     * }
     */
    public static int GL_TEXTURE_COORD_ARRAY_TYPE_EXT() {
        return (int)32905L;
    }
    /**
     * {@snippet :
     * #define GL_TEXTURE_COORD_ARRAY_STRIDE_EXT 32906
     * }
     */
    public static int GL_TEXTURE_COORD_ARRAY_STRIDE_EXT() {
        return (int)32906L;
    }
    /**
     * {@snippet :
     * #define GL_TEXTURE_COORD_ARRAY_COUNT_EXT 32907
     * }
     */
    public static int GL_TEXTURE_COORD_ARRAY_COUNT_EXT() {
        return (int)32907L;
    }
    /**
     * {@snippet :
     * #define GL_EDGE_FLAG_ARRAY_STRIDE_EXT 32908
     * }
     */
    public static int GL_EDGE_FLAG_ARRAY_STRIDE_EXT() {
        return (int)32908L;
    }
    /**
     * {@snippet :
     * #define GL_EDGE_FLAG_ARRAY_COUNT_EXT 32909
     * }
     */
    public static int GL_EDGE_FLAG_ARRAY_COUNT_EXT() {
        return (int)32909L;
    }
    /**
     * {@snippet :
     * #define GL_VERTEX_ARRAY_POINTER_EXT 32910
     * }
     */
    public static int GL_VERTEX_ARRAY_POINTER_EXT() {
        return (int)32910L;
    }
    /**
     * {@snippet :
     * #define GL_NORMAL_ARRAY_POINTER_EXT 32911
     * }
     */
    public static int GL_NORMAL_ARRAY_POINTER_EXT() {
        return (int)32911L;
    }
    /**
     * {@snippet :
     * #define GL_COLOR_ARRAY_POINTER_EXT 32912
     * }
     */
    public static int GL_COLOR_ARRAY_POINTER_EXT() {
        return (int)32912L;
    }
    /**
     * {@snippet :
     * #define GL_INDEX_ARRAY_POINTER_EXT 32913
     * }
     */
    public static int GL_INDEX_ARRAY_POINTER_EXT() {
        return (int)32913L;
    }
    /**
     * {@snippet :
     * #define GL_TEXTURE_COORD_ARRAY_POINTER_EXT 32914
     * }
     */
    public static int GL_TEXTURE_COORD_ARRAY_POINTER_EXT() {
        return (int)32914L;
    }
    /**
     * {@snippet :
     * #define GL_EDGE_FLAG_ARRAY_POINTER_EXT 32915
     * }
     */
    public static int GL_EDGE_FLAG_ARRAY_POINTER_EXT() {
        return (int)32915L;
    }
    /**
     * {@snippet :
     * #define GL_BGR_EXT 32992
     * }
     */
    public static int GL_BGR_EXT() {
        return (int)32992L;
    }
    /**
     * {@snippet :
     * #define GL_BGRA_EXT 32993
     * }
     */
    public static int GL_BGRA_EXT() {
        return (int)32993L;
    }
    /**
     * {@snippet :
     * #define GL_COLOR_TABLE_FORMAT_EXT 32984
     * }
     */
    public static int GL_COLOR_TABLE_FORMAT_EXT() {
        return (int)32984L;
    }
    /**
     * {@snippet :
     * #define GL_COLOR_TABLE_WIDTH_EXT 32985
     * }
     */
    public static int GL_COLOR_TABLE_WIDTH_EXT() {
        return (int)32985L;
    }
    /**
     * {@snippet :
     * #define GL_COLOR_TABLE_RED_SIZE_EXT 32986
     * }
     */
    public static int GL_COLOR_TABLE_RED_SIZE_EXT() {
        return (int)32986L;
    }
    /**
     * {@snippet :
     * #define GL_COLOR_TABLE_GREEN_SIZE_EXT 32987
     * }
     */
    public static int GL_COLOR_TABLE_GREEN_SIZE_EXT() {
        return (int)32987L;
    }
    /**
     * {@snippet :
     * #define GL_COLOR_TABLE_BLUE_SIZE_EXT 32988
     * }
     */
    public static int GL_COLOR_TABLE_BLUE_SIZE_EXT() {
        return (int)32988L;
    }
    /**
     * {@snippet :
     * #define GL_COLOR_TABLE_ALPHA_SIZE_EXT 32989
     * }
     */
    public static int GL_COLOR_TABLE_ALPHA_SIZE_EXT() {
        return (int)32989L;
    }
    /**
     * {@snippet :
     * #define GL_COLOR_TABLE_LUMINANCE_SIZE_EXT 32990
     * }
     */
    public static int GL_COLOR_TABLE_LUMINANCE_SIZE_EXT() {
        return (int)32990L;
    }
    /**
     * {@snippet :
     * #define GL_COLOR_TABLE_INTENSITY_SIZE_EXT 32991
     * }
     */
    public static int GL_COLOR_TABLE_INTENSITY_SIZE_EXT() {
        return (int)32991L;
    }
    /**
     * {@snippet :
     * #define GL_COLOR_INDEX1_EXT 32994
     * }
     */
    public static int GL_COLOR_INDEX1_EXT() {
        return (int)32994L;
    }
    /**
     * {@snippet :
     * #define GL_COLOR_INDEX2_EXT 32995
     * }
     */
    public static int GL_COLOR_INDEX2_EXT() {
        return (int)32995L;
    }
    /**
     * {@snippet :
     * #define GL_COLOR_INDEX4_EXT 32996
     * }
     */
    public static int GL_COLOR_INDEX4_EXT() {
        return (int)32996L;
    }
    /**
     * {@snippet :
     * #define GL_COLOR_INDEX8_EXT 32997
     * }
     */
    public static int GL_COLOR_INDEX8_EXT() {
        return (int)32997L;
    }
    /**
     * {@snippet :
     * #define GL_COLOR_INDEX12_EXT 32998
     * }
     */
    public static int GL_COLOR_INDEX12_EXT() {
        return (int)32998L;
    }
    /**
     * {@snippet :
     * #define GL_COLOR_INDEX16_EXT 32999
     * }
     */
    public static int GL_COLOR_INDEX16_EXT() {
        return (int)32999L;
    }
    /**
     * {@snippet :
     * #define GL_MAX_ELEMENTS_VERTICES_WIN 33000
     * }
     */
    public static int GL_MAX_ELEMENTS_VERTICES_WIN() {
        return (int)33000L;
    }
    /**
     * {@snippet :
     * #define GL_MAX_ELEMENTS_INDICES_WIN 33001
     * }
     */
    public static int GL_MAX_ELEMENTS_INDICES_WIN() {
        return (int)33001L;
    }
    /**
     * {@snippet :
     * #define GL_PHONG_WIN 33002
     * }
     */
    public static int GL_PHONG_WIN() {
        return (int)33002L;
    }
    /**
     * {@snippet :
     * #define GL_PHONG_HINT_WIN 33003
     * }
     */
    public static int GL_PHONG_HINT_WIN() {
        return (int)33003L;
    }
    /**
     * {@snippet :
     * #define GL_FOG_SPECULAR_TEXTURE_WIN 33004
     * }
     */
    public static int GL_FOG_SPECULAR_TEXTURE_WIN() {
        return (int)33004L;
    }
    /**
     * {@snippet :
     * #define GLFW_VERSION_MAJOR 3
     * }
     */
    public static int GLFW_VERSION_MAJOR() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define GLFW_VERSION_MINOR 4
     * }
     */
    public static int GLFW_VERSION_MINOR() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define GLFW_VERSION_REVISION 0
     * }
     */
    public static int GLFW_VERSION_REVISION() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define GLFW_TRUE 1
     * }
     */
    public static int GLFW_TRUE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define GLFW_FALSE 0
     * }
     */
    public static int GLFW_FALSE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define GLFW_RELEASE 0
     * }
     */
    public static int GLFW_RELEASE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define GLFW_PRESS 1
     * }
     */
    public static int GLFW_PRESS() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define GLFW_REPEAT 2
     * }
     */
    public static int GLFW_REPEAT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define GLFW_HAT_CENTERED 0
     * }
     */
    public static int GLFW_HAT_CENTERED() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define GLFW_HAT_UP 1
     * }
     */
    public static int GLFW_HAT_UP() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define GLFW_HAT_RIGHT 2
     * }
     */
    public static int GLFW_HAT_RIGHT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define GLFW_HAT_DOWN 4
     * }
     */
    public static int GLFW_HAT_DOWN() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define GLFW_HAT_LEFT 8
     * }
     */
    public static int GLFW_HAT_LEFT() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_SPACE 32
     * }
     */
    public static int GLFW_KEY_SPACE() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_APOSTROPHE 39
     * }
     */
    public static int GLFW_KEY_APOSTROPHE() {
        return (int)39L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_COMMA 44
     * }
     */
    public static int GLFW_KEY_COMMA() {
        return (int)44L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_MINUS 45
     * }
     */
    public static int GLFW_KEY_MINUS() {
        return (int)45L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_PERIOD 46
     * }
     */
    public static int GLFW_KEY_PERIOD() {
        return (int)46L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_SLASH 47
     * }
     */
    public static int GLFW_KEY_SLASH() {
        return (int)47L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_0 48
     * }
     */
    public static int GLFW_KEY_0() {
        return (int)48L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_1 49
     * }
     */
    public static int GLFW_KEY_1() {
        return (int)49L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_2 50
     * }
     */
    public static int GLFW_KEY_2() {
        return (int)50L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_3 51
     * }
     */
    public static int GLFW_KEY_3() {
        return (int)51L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_4 52
     * }
     */
    public static int GLFW_KEY_4() {
        return (int)52L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_5 53
     * }
     */
    public static int GLFW_KEY_5() {
        return (int)53L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_6 54
     * }
     */
    public static int GLFW_KEY_6() {
        return (int)54L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_7 55
     * }
     */
    public static int GLFW_KEY_7() {
        return (int)55L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_8 56
     * }
     */
    public static int GLFW_KEY_8() {
        return (int)56L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_9 57
     * }
     */
    public static int GLFW_KEY_9() {
        return (int)57L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_SEMICOLON 59
     * }
     */
    public static int GLFW_KEY_SEMICOLON() {
        return (int)59L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_EQUAL 61
     * }
     */
    public static int GLFW_KEY_EQUAL() {
        return (int)61L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_A 65
     * }
     */
    public static int GLFW_KEY_A() {
        return (int)65L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_B 66
     * }
     */
    public static int GLFW_KEY_B() {
        return (int)66L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_C 67
     * }
     */
    public static int GLFW_KEY_C() {
        return (int)67L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_D 68
     * }
     */
    public static int GLFW_KEY_D() {
        return (int)68L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_E 69
     * }
     */
    public static int GLFW_KEY_E() {
        return (int)69L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_F 70
     * }
     */
    public static int GLFW_KEY_F() {
        return (int)70L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_G 71
     * }
     */
    public static int GLFW_KEY_G() {
        return (int)71L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_H 72
     * }
     */
    public static int GLFW_KEY_H() {
        return (int)72L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_I 73
     * }
     */
    public static int GLFW_KEY_I() {
        return (int)73L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_J 74
     * }
     */
    public static int GLFW_KEY_J() {
        return (int)74L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_K 75
     * }
     */
    public static int GLFW_KEY_K() {
        return (int)75L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_L 76
     * }
     */
    public static int GLFW_KEY_L() {
        return (int)76L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_M 77
     * }
     */
    public static int GLFW_KEY_M() {
        return (int)77L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_N 78
     * }
     */
    public static int GLFW_KEY_N() {
        return (int)78L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_O 79
     * }
     */
    public static int GLFW_KEY_O() {
        return (int)79L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_P 80
     * }
     */
    public static int GLFW_KEY_P() {
        return (int)80L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_Q 81
     * }
     */
    public static int GLFW_KEY_Q() {
        return (int)81L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_R 82
     * }
     */
    public static int GLFW_KEY_R() {
        return (int)82L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_S 83
     * }
     */
    public static int GLFW_KEY_S() {
        return (int)83L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_T 84
     * }
     */
    public static int GLFW_KEY_T() {
        return (int)84L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_U 85
     * }
     */
    public static int GLFW_KEY_U() {
        return (int)85L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_V 86
     * }
     */
    public static int GLFW_KEY_V() {
        return (int)86L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_W 87
     * }
     */
    public static int GLFW_KEY_W() {
        return (int)87L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_X 88
     * }
     */
    public static int GLFW_KEY_X() {
        return (int)88L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_Y 89
     * }
     */
    public static int GLFW_KEY_Y() {
        return (int)89L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_Z 90
     * }
     */
    public static int GLFW_KEY_Z() {
        return (int)90L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_LEFT_BRACKET 91
     * }
     */
    public static int GLFW_KEY_LEFT_BRACKET() {
        return (int)91L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_BACKSLASH 92
     * }
     */
    public static int GLFW_KEY_BACKSLASH() {
        return (int)92L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_RIGHT_BRACKET 93
     * }
     */
    public static int GLFW_KEY_RIGHT_BRACKET() {
        return (int)93L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_GRAVE_ACCENT 96
     * }
     */
    public static int GLFW_KEY_GRAVE_ACCENT() {
        return (int)96L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_WORLD_1 161
     * }
     */
    public static int GLFW_KEY_WORLD_1() {
        return (int)161L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_WORLD_2 162
     * }
     */
    public static int GLFW_KEY_WORLD_2() {
        return (int)162L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_ESCAPE 256
     * }
     */
    public static int GLFW_KEY_ESCAPE() {
        return (int)256L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_ENTER 257
     * }
     */
    public static int GLFW_KEY_ENTER() {
        return (int)257L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_TAB 258
     * }
     */
    public static int GLFW_KEY_TAB() {
        return (int)258L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_BACKSPACE 259
     * }
     */
    public static int GLFW_KEY_BACKSPACE() {
        return (int)259L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_INSERT 260
     * }
     */
    public static int GLFW_KEY_INSERT() {
        return (int)260L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_DELETE 261
     * }
     */
    public static int GLFW_KEY_DELETE() {
        return (int)261L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_RIGHT 262
     * }
     */
    public static int GLFW_KEY_RIGHT() {
        return (int)262L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_LEFT 263
     * }
     */
    public static int GLFW_KEY_LEFT() {
        return (int)263L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_DOWN 264
     * }
     */
    public static int GLFW_KEY_DOWN() {
        return (int)264L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_UP 265
     * }
     */
    public static int GLFW_KEY_UP() {
        return (int)265L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_PAGE_UP 266
     * }
     */
    public static int GLFW_KEY_PAGE_UP() {
        return (int)266L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_PAGE_DOWN 267
     * }
     */
    public static int GLFW_KEY_PAGE_DOWN() {
        return (int)267L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_HOME 268
     * }
     */
    public static int GLFW_KEY_HOME() {
        return (int)268L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_END 269
     * }
     */
    public static int GLFW_KEY_END() {
        return (int)269L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_CAPS_LOCK 280
     * }
     */
    public static int GLFW_KEY_CAPS_LOCK() {
        return (int)280L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_SCROLL_LOCK 281
     * }
     */
    public static int GLFW_KEY_SCROLL_LOCK() {
        return (int)281L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_NUM_LOCK 282
     * }
     */
    public static int GLFW_KEY_NUM_LOCK() {
        return (int)282L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_PRINT_SCREEN 283
     * }
     */
    public static int GLFW_KEY_PRINT_SCREEN() {
        return (int)283L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_PAUSE 284
     * }
     */
    public static int GLFW_KEY_PAUSE() {
        return (int)284L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_F1 290
     * }
     */
    public static int GLFW_KEY_F1() {
        return (int)290L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_F2 291
     * }
     */
    public static int GLFW_KEY_F2() {
        return (int)291L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_F3 292
     * }
     */
    public static int GLFW_KEY_F3() {
        return (int)292L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_F4 293
     * }
     */
    public static int GLFW_KEY_F4() {
        return (int)293L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_F5 294
     * }
     */
    public static int GLFW_KEY_F5() {
        return (int)294L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_F6 295
     * }
     */
    public static int GLFW_KEY_F6() {
        return (int)295L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_F7 296
     * }
     */
    public static int GLFW_KEY_F7() {
        return (int)296L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_F8 297
     * }
     */
    public static int GLFW_KEY_F8() {
        return (int)297L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_F9 298
     * }
     */
    public static int GLFW_KEY_F9() {
        return (int)298L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_F10 299
     * }
     */
    public static int GLFW_KEY_F10() {
        return (int)299L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_F11 300
     * }
     */
    public static int GLFW_KEY_F11() {
        return (int)300L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_F12 301
     * }
     */
    public static int GLFW_KEY_F12() {
        return (int)301L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_F13 302
     * }
     */
    public static int GLFW_KEY_F13() {
        return (int)302L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_F14 303
     * }
     */
    public static int GLFW_KEY_F14() {
        return (int)303L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_F15 304
     * }
     */
    public static int GLFW_KEY_F15() {
        return (int)304L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_F16 305
     * }
     */
    public static int GLFW_KEY_F16() {
        return (int)305L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_F17 306
     * }
     */
    public static int GLFW_KEY_F17() {
        return (int)306L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_F18 307
     * }
     */
    public static int GLFW_KEY_F18() {
        return (int)307L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_F19 308
     * }
     */
    public static int GLFW_KEY_F19() {
        return (int)308L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_F20 309
     * }
     */
    public static int GLFW_KEY_F20() {
        return (int)309L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_F21 310
     * }
     */
    public static int GLFW_KEY_F21() {
        return (int)310L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_F22 311
     * }
     */
    public static int GLFW_KEY_F22() {
        return (int)311L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_F23 312
     * }
     */
    public static int GLFW_KEY_F23() {
        return (int)312L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_F24 313
     * }
     */
    public static int GLFW_KEY_F24() {
        return (int)313L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_F25 314
     * }
     */
    public static int GLFW_KEY_F25() {
        return (int)314L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_KP_0 320
     * }
     */
    public static int GLFW_KEY_KP_0() {
        return (int)320L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_KP_1 321
     * }
     */
    public static int GLFW_KEY_KP_1() {
        return (int)321L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_KP_2 322
     * }
     */
    public static int GLFW_KEY_KP_2() {
        return (int)322L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_KP_3 323
     * }
     */
    public static int GLFW_KEY_KP_3() {
        return (int)323L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_KP_4 324
     * }
     */
    public static int GLFW_KEY_KP_4() {
        return (int)324L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_KP_5 325
     * }
     */
    public static int GLFW_KEY_KP_5() {
        return (int)325L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_KP_6 326
     * }
     */
    public static int GLFW_KEY_KP_6() {
        return (int)326L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_KP_7 327
     * }
     */
    public static int GLFW_KEY_KP_7() {
        return (int)327L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_KP_8 328
     * }
     */
    public static int GLFW_KEY_KP_8() {
        return (int)328L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_KP_9 329
     * }
     */
    public static int GLFW_KEY_KP_9() {
        return (int)329L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_KP_DECIMAL 330
     * }
     */
    public static int GLFW_KEY_KP_DECIMAL() {
        return (int)330L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_KP_DIVIDE 331
     * }
     */
    public static int GLFW_KEY_KP_DIVIDE() {
        return (int)331L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_KP_MULTIPLY 332
     * }
     */
    public static int GLFW_KEY_KP_MULTIPLY() {
        return (int)332L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_KP_SUBTRACT 333
     * }
     */
    public static int GLFW_KEY_KP_SUBTRACT() {
        return (int)333L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_KP_ADD 334
     * }
     */
    public static int GLFW_KEY_KP_ADD() {
        return (int)334L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_KP_ENTER 335
     * }
     */
    public static int GLFW_KEY_KP_ENTER() {
        return (int)335L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_KP_EQUAL 336
     * }
     */
    public static int GLFW_KEY_KP_EQUAL() {
        return (int)336L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_LEFT_SHIFT 340
     * }
     */
    public static int GLFW_KEY_LEFT_SHIFT() {
        return (int)340L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_LEFT_CONTROL 341
     * }
     */
    public static int GLFW_KEY_LEFT_CONTROL() {
        return (int)341L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_LEFT_ALT 342
     * }
     */
    public static int GLFW_KEY_LEFT_ALT() {
        return (int)342L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_LEFT_SUPER 343
     * }
     */
    public static int GLFW_KEY_LEFT_SUPER() {
        return (int)343L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_RIGHT_SHIFT 344
     * }
     */
    public static int GLFW_KEY_RIGHT_SHIFT() {
        return (int)344L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_RIGHT_CONTROL 345
     * }
     */
    public static int GLFW_KEY_RIGHT_CONTROL() {
        return (int)345L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_RIGHT_ALT 346
     * }
     */
    public static int GLFW_KEY_RIGHT_ALT() {
        return (int)346L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_RIGHT_SUPER 347
     * }
     */
    public static int GLFW_KEY_RIGHT_SUPER() {
        return (int)347L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_MENU 348
     * }
     */
    public static int GLFW_KEY_MENU() {
        return (int)348L;
    }
    /**
     * {@snippet :
     * #define GLFW_MOD_SHIFT 1
     * }
     */
    public static int GLFW_MOD_SHIFT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define GLFW_MOD_CONTROL 2
     * }
     */
    public static int GLFW_MOD_CONTROL() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define GLFW_MOD_ALT 4
     * }
     */
    public static int GLFW_MOD_ALT() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define GLFW_MOD_SUPER 8
     * }
     */
    public static int GLFW_MOD_SUPER() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define GLFW_MOD_CAPS_LOCK 16
     * }
     */
    public static int GLFW_MOD_CAPS_LOCK() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define GLFW_MOD_NUM_LOCK 32
     * }
     */
    public static int GLFW_MOD_NUM_LOCK() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * #define GLFW_MOUSE_BUTTON_1 0
     * }
     */
    public static int GLFW_MOUSE_BUTTON_1() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define GLFW_MOUSE_BUTTON_2 1
     * }
     */
    public static int GLFW_MOUSE_BUTTON_2() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define GLFW_MOUSE_BUTTON_3 2
     * }
     */
    public static int GLFW_MOUSE_BUTTON_3() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define GLFW_MOUSE_BUTTON_4 3
     * }
     */
    public static int GLFW_MOUSE_BUTTON_4() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define GLFW_MOUSE_BUTTON_5 4
     * }
     */
    public static int GLFW_MOUSE_BUTTON_5() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define GLFW_MOUSE_BUTTON_6 5
     * }
     */
    public static int GLFW_MOUSE_BUTTON_6() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * #define GLFW_MOUSE_BUTTON_7 6
     * }
     */
    public static int GLFW_MOUSE_BUTTON_7() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * #define GLFW_MOUSE_BUTTON_8 7
     * }
     */
    public static int GLFW_MOUSE_BUTTON_8() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * #define GLFW_JOYSTICK_1 0
     * }
     */
    public static int GLFW_JOYSTICK_1() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define GLFW_JOYSTICK_2 1
     * }
     */
    public static int GLFW_JOYSTICK_2() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define GLFW_JOYSTICK_3 2
     * }
     */
    public static int GLFW_JOYSTICK_3() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define GLFW_JOYSTICK_4 3
     * }
     */
    public static int GLFW_JOYSTICK_4() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define GLFW_JOYSTICK_5 4
     * }
     */
    public static int GLFW_JOYSTICK_5() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define GLFW_JOYSTICK_6 5
     * }
     */
    public static int GLFW_JOYSTICK_6() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * #define GLFW_JOYSTICK_7 6
     * }
     */
    public static int GLFW_JOYSTICK_7() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * #define GLFW_JOYSTICK_8 7
     * }
     */
    public static int GLFW_JOYSTICK_8() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * #define GLFW_JOYSTICK_9 8
     * }
     */
    public static int GLFW_JOYSTICK_9() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define GLFW_JOYSTICK_10 9
     * }
     */
    public static int GLFW_JOYSTICK_10() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * #define GLFW_JOYSTICK_11 10
     * }
     */
    public static int GLFW_JOYSTICK_11() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * #define GLFW_JOYSTICK_12 11
     * }
     */
    public static int GLFW_JOYSTICK_12() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * #define GLFW_JOYSTICK_13 12
     * }
     */
    public static int GLFW_JOYSTICK_13() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * #define GLFW_JOYSTICK_14 13
     * }
     */
    public static int GLFW_JOYSTICK_14() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * #define GLFW_JOYSTICK_15 14
     * }
     */
    public static int GLFW_JOYSTICK_15() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * #define GLFW_JOYSTICK_16 15
     * }
     */
    public static int GLFW_JOYSTICK_16() {
        return (int)15L;
    }
    /**
     * {@snippet :
     * #define GLFW_GAMEPAD_BUTTON_A 0
     * }
     */
    public static int GLFW_GAMEPAD_BUTTON_A() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define GLFW_GAMEPAD_BUTTON_B 1
     * }
     */
    public static int GLFW_GAMEPAD_BUTTON_B() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define GLFW_GAMEPAD_BUTTON_X 2
     * }
     */
    public static int GLFW_GAMEPAD_BUTTON_X() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define GLFW_GAMEPAD_BUTTON_Y 3
     * }
     */
    public static int GLFW_GAMEPAD_BUTTON_Y() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define GLFW_GAMEPAD_BUTTON_LEFT_BUMPER 4
     * }
     */
    public static int GLFW_GAMEPAD_BUTTON_LEFT_BUMPER() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define GLFW_GAMEPAD_BUTTON_RIGHT_BUMPER 5
     * }
     */
    public static int GLFW_GAMEPAD_BUTTON_RIGHT_BUMPER() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * #define GLFW_GAMEPAD_BUTTON_BACK 6
     * }
     */
    public static int GLFW_GAMEPAD_BUTTON_BACK() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * #define GLFW_GAMEPAD_BUTTON_START 7
     * }
     */
    public static int GLFW_GAMEPAD_BUTTON_START() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * #define GLFW_GAMEPAD_BUTTON_GUIDE 8
     * }
     */
    public static int GLFW_GAMEPAD_BUTTON_GUIDE() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define GLFW_GAMEPAD_BUTTON_LEFT_THUMB 9
     * }
     */
    public static int GLFW_GAMEPAD_BUTTON_LEFT_THUMB() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * #define GLFW_GAMEPAD_BUTTON_RIGHT_THUMB 10
     * }
     */
    public static int GLFW_GAMEPAD_BUTTON_RIGHT_THUMB() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * #define GLFW_GAMEPAD_BUTTON_DPAD_UP 11
     * }
     */
    public static int GLFW_GAMEPAD_BUTTON_DPAD_UP() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * #define GLFW_GAMEPAD_BUTTON_DPAD_RIGHT 12
     * }
     */
    public static int GLFW_GAMEPAD_BUTTON_DPAD_RIGHT() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * #define GLFW_GAMEPAD_BUTTON_DPAD_DOWN 13
     * }
     */
    public static int GLFW_GAMEPAD_BUTTON_DPAD_DOWN() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * #define GLFW_GAMEPAD_BUTTON_DPAD_LEFT 14
     * }
     */
    public static int GLFW_GAMEPAD_BUTTON_DPAD_LEFT() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * #define GLFW_GAMEPAD_AXIS_LEFT_X 0
     * }
     */
    public static int GLFW_GAMEPAD_AXIS_LEFT_X() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define GLFW_GAMEPAD_AXIS_LEFT_Y 1
     * }
     */
    public static int GLFW_GAMEPAD_AXIS_LEFT_Y() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define GLFW_GAMEPAD_AXIS_RIGHT_X 2
     * }
     */
    public static int GLFW_GAMEPAD_AXIS_RIGHT_X() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define GLFW_GAMEPAD_AXIS_RIGHT_Y 3
     * }
     */
    public static int GLFW_GAMEPAD_AXIS_RIGHT_Y() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define GLFW_GAMEPAD_AXIS_LEFT_TRIGGER 4
     * }
     */
    public static int GLFW_GAMEPAD_AXIS_LEFT_TRIGGER() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define GLFW_GAMEPAD_AXIS_RIGHT_TRIGGER 5
     * }
     */
    public static int GLFW_GAMEPAD_AXIS_RIGHT_TRIGGER() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * #define GLFW_NO_ERROR 0
     * }
     */
    public static int GLFW_NO_ERROR() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define GLFW_NOT_INITIALIZED 65537
     * }
     */
    public static int GLFW_NOT_INITIALIZED() {
        return (int)65537L;
    }
    /**
     * {@snippet :
     * #define GLFW_NO_CURRENT_CONTEXT 65538
     * }
     */
    public static int GLFW_NO_CURRENT_CONTEXT() {
        return (int)65538L;
    }
    /**
     * {@snippet :
     * #define GLFW_INVALID_ENUM 65539
     * }
     */
    public static int GLFW_INVALID_ENUM() {
        return (int)65539L;
    }
    /**
     * {@snippet :
     * #define GLFW_INVALID_VALUE 65540
     * }
     */
    public static int GLFW_INVALID_VALUE() {
        return (int)65540L;
    }
    /**
     * {@snippet :
     * #define GLFW_OUT_OF_MEMORY 65541
     * }
     */
    public static int GLFW_OUT_OF_MEMORY() {
        return (int)65541L;
    }
    /**
     * {@snippet :
     * #define GLFW_API_UNAVAILABLE 65542
     * }
     */
    public static int GLFW_API_UNAVAILABLE() {
        return (int)65542L;
    }
    /**
     * {@snippet :
     * #define GLFW_VERSION_UNAVAILABLE 65543
     * }
     */
    public static int GLFW_VERSION_UNAVAILABLE() {
        return (int)65543L;
    }
    /**
     * {@snippet :
     * #define GLFW_PLATFORM_ERROR 65544
     * }
     */
    public static int GLFW_PLATFORM_ERROR() {
        return (int)65544L;
    }
    /**
     * {@snippet :
     * #define GLFW_FORMAT_UNAVAILABLE 65545
     * }
     */
    public static int GLFW_FORMAT_UNAVAILABLE() {
        return (int)65545L;
    }
    /**
     * {@snippet :
     * #define GLFW_NO_WINDOW_CONTEXT 65546
     * }
     */
    public static int GLFW_NO_WINDOW_CONTEXT() {
        return (int)65546L;
    }
    /**
     * {@snippet :
     * #define GLFW_CURSOR_UNAVAILABLE 65547
     * }
     */
    public static int GLFW_CURSOR_UNAVAILABLE() {
        return (int)65547L;
    }
    /**
     * {@snippet :
     * #define GLFW_FEATURE_UNAVAILABLE 65548
     * }
     */
    public static int GLFW_FEATURE_UNAVAILABLE() {
        return (int)65548L;
    }
    /**
     * {@snippet :
     * #define GLFW_FEATURE_UNIMPLEMENTED 65549
     * }
     */
    public static int GLFW_FEATURE_UNIMPLEMENTED() {
        return (int)65549L;
    }
    /**
     * {@snippet :
     * #define GLFW_PLATFORM_UNAVAILABLE 65550
     * }
     */
    public static int GLFW_PLATFORM_UNAVAILABLE() {
        return (int)65550L;
    }
    /**
     * {@snippet :
     * #define GLFW_FOCUSED 131073
     * }
     */
    public static int GLFW_FOCUSED() {
        return (int)131073L;
    }
    /**
     * {@snippet :
     * #define GLFW_ICONIFIED 131074
     * }
     */
    public static int GLFW_ICONIFIED() {
        return (int)131074L;
    }
    /**
     * {@snippet :
     * #define GLFW_RESIZABLE 131075
     * }
     */
    public static int GLFW_RESIZABLE() {
        return (int)131075L;
    }
    /**
     * {@snippet :
     * #define GLFW_VISIBLE 131076
     * }
     */
    public static int GLFW_VISIBLE() {
        return (int)131076L;
    }
    /**
     * {@snippet :
     * #define GLFW_DECORATED 131077
     * }
     */
    public static int GLFW_DECORATED() {
        return (int)131077L;
    }
    /**
     * {@snippet :
     * #define GLFW_AUTO_ICONIFY 131078
     * }
     */
    public static int GLFW_AUTO_ICONIFY() {
        return (int)131078L;
    }
    /**
     * {@snippet :
     * #define GLFW_FLOATING 131079
     * }
     */
    public static int GLFW_FLOATING() {
        return (int)131079L;
    }
    /**
     * {@snippet :
     * #define GLFW_MAXIMIZED 131080
     * }
     */
    public static int GLFW_MAXIMIZED() {
        return (int)131080L;
    }
    /**
     * {@snippet :
     * #define GLFW_CENTER_CURSOR 131081
     * }
     */
    public static int GLFW_CENTER_CURSOR() {
        return (int)131081L;
    }
    /**
     * {@snippet :
     * #define GLFW_TRANSPARENT_FRAMEBUFFER 131082
     * }
     */
    public static int GLFW_TRANSPARENT_FRAMEBUFFER() {
        return (int)131082L;
    }
    /**
     * {@snippet :
     * #define GLFW_HOVERED 131083
     * }
     */
    public static int GLFW_HOVERED() {
        return (int)131083L;
    }
    /**
     * {@snippet :
     * #define GLFW_FOCUS_ON_SHOW 131084
     * }
     */
    public static int GLFW_FOCUS_ON_SHOW() {
        return (int)131084L;
    }
    /**
     * {@snippet :
     * #define GLFW_MOUSE_PASSTHROUGH 131085
     * }
     */
    public static int GLFW_MOUSE_PASSTHROUGH() {
        return (int)131085L;
    }
    /**
     * {@snippet :
     * #define GLFW_POSITION_X 131086
     * }
     */
    public static int GLFW_POSITION_X() {
        return (int)131086L;
    }
    /**
     * {@snippet :
     * #define GLFW_POSITION_Y 131087
     * }
     */
    public static int GLFW_POSITION_Y() {
        return (int)131087L;
    }
    /**
     * {@snippet :
     * #define GLFW_RED_BITS 135169
     * }
     */
    public static int GLFW_RED_BITS() {
        return (int)135169L;
    }
    /**
     * {@snippet :
     * #define GLFW_GREEN_BITS 135170
     * }
     */
    public static int GLFW_GREEN_BITS() {
        return (int)135170L;
    }
    /**
     * {@snippet :
     * #define GLFW_BLUE_BITS 135171
     * }
     */
    public static int GLFW_BLUE_BITS() {
        return (int)135171L;
    }
    /**
     * {@snippet :
     * #define GLFW_ALPHA_BITS 135172
     * }
     */
    public static int GLFW_ALPHA_BITS() {
        return (int)135172L;
    }
    /**
     * {@snippet :
     * #define GLFW_DEPTH_BITS 135173
     * }
     */
    public static int GLFW_DEPTH_BITS() {
        return (int)135173L;
    }
    /**
     * {@snippet :
     * #define GLFW_STENCIL_BITS 135174
     * }
     */
    public static int GLFW_STENCIL_BITS() {
        return (int)135174L;
    }
    /**
     * {@snippet :
     * #define GLFW_ACCUM_RED_BITS 135175
     * }
     */
    public static int GLFW_ACCUM_RED_BITS() {
        return (int)135175L;
    }
    /**
     * {@snippet :
     * #define GLFW_ACCUM_GREEN_BITS 135176
     * }
     */
    public static int GLFW_ACCUM_GREEN_BITS() {
        return (int)135176L;
    }
    /**
     * {@snippet :
     * #define GLFW_ACCUM_BLUE_BITS 135177
     * }
     */
    public static int GLFW_ACCUM_BLUE_BITS() {
        return (int)135177L;
    }
    /**
     * {@snippet :
     * #define GLFW_ACCUM_ALPHA_BITS 135178
     * }
     */
    public static int GLFW_ACCUM_ALPHA_BITS() {
        return (int)135178L;
    }
    /**
     * {@snippet :
     * #define GLFW_AUX_BUFFERS 135179
     * }
     */
    public static int GLFW_AUX_BUFFERS() {
        return (int)135179L;
    }
    /**
     * {@snippet :
     * #define GLFW_STEREO 135180
     * }
     */
    public static int GLFW_STEREO() {
        return (int)135180L;
    }
    /**
     * {@snippet :
     * #define GLFW_SAMPLES 135181
     * }
     */
    public static int GLFW_SAMPLES() {
        return (int)135181L;
    }
    /**
     * {@snippet :
     * #define GLFW_SRGB_CAPABLE 135182
     * }
     */
    public static int GLFW_SRGB_CAPABLE() {
        return (int)135182L;
    }
    /**
     * {@snippet :
     * #define GLFW_REFRESH_RATE 135183
     * }
     */
    public static int GLFW_REFRESH_RATE() {
        return (int)135183L;
    }
    /**
     * {@snippet :
     * #define GLFW_DOUBLEBUFFER 135184
     * }
     */
    public static int GLFW_DOUBLEBUFFER() {
        return (int)135184L;
    }
    /**
     * {@snippet :
     * #define GLFW_CLIENT_API 139265
     * }
     */
    public static int GLFW_CLIENT_API() {
        return (int)139265L;
    }
    /**
     * {@snippet :
     * #define GLFW_CONTEXT_VERSION_MAJOR 139266
     * }
     */
    public static int GLFW_CONTEXT_VERSION_MAJOR() {
        return (int)139266L;
    }
    /**
     * {@snippet :
     * #define GLFW_CONTEXT_VERSION_MINOR 139267
     * }
     */
    public static int GLFW_CONTEXT_VERSION_MINOR() {
        return (int)139267L;
    }
    /**
     * {@snippet :
     * #define GLFW_CONTEXT_REVISION 139268
     * }
     */
    public static int GLFW_CONTEXT_REVISION() {
        return (int)139268L;
    }
    /**
     * {@snippet :
     * #define GLFW_CONTEXT_ROBUSTNESS 139269
     * }
     */
    public static int GLFW_CONTEXT_ROBUSTNESS() {
        return (int)139269L;
    }
    /**
     * {@snippet :
     * #define GLFW_OPENGL_FORWARD_COMPAT 139270
     * }
     */
    public static int GLFW_OPENGL_FORWARD_COMPAT() {
        return (int)139270L;
    }
    /**
     * {@snippet :
     * #define GLFW_CONTEXT_DEBUG 139271
     * }
     */
    public static int GLFW_CONTEXT_DEBUG() {
        return (int)139271L;
    }
    /**
     * {@snippet :
     * #define GLFW_OPENGL_PROFILE 139272
     * }
     */
    public static int GLFW_OPENGL_PROFILE() {
        return (int)139272L;
    }
    /**
     * {@snippet :
     * #define GLFW_CONTEXT_RELEASE_BEHAVIOR 139273
     * }
     */
    public static int GLFW_CONTEXT_RELEASE_BEHAVIOR() {
        return (int)139273L;
    }
    /**
     * {@snippet :
     * #define GLFW_CONTEXT_NO_ERROR 139274
     * }
     */
    public static int GLFW_CONTEXT_NO_ERROR() {
        return (int)139274L;
    }
    /**
     * {@snippet :
     * #define GLFW_CONTEXT_CREATION_API 139275
     * }
     */
    public static int GLFW_CONTEXT_CREATION_API() {
        return (int)139275L;
    }
    /**
     * {@snippet :
     * #define GLFW_SCALE_TO_MONITOR 139276
     * }
     */
    public static int GLFW_SCALE_TO_MONITOR() {
        return (int)139276L;
    }
    /**
     * {@snippet :
     * #define GLFW_SCALE_FRAMEBUFFER 139277
     * }
     */
    public static int GLFW_SCALE_FRAMEBUFFER() {
        return (int)139277L;
    }
    /**
     * {@snippet :
     * #define GLFW_COCOA_RETINA_FRAMEBUFFER 143361
     * }
     */
    public static int GLFW_COCOA_RETINA_FRAMEBUFFER() {
        return (int)143361L;
    }
    /**
     * {@snippet :
     * #define GLFW_COCOA_FRAME_NAME 143362
     * }
     */
    public static int GLFW_COCOA_FRAME_NAME() {
        return (int)143362L;
    }
    /**
     * {@snippet :
     * #define GLFW_COCOA_GRAPHICS_SWITCHING 143363
     * }
     */
    public static int GLFW_COCOA_GRAPHICS_SWITCHING() {
        return (int)143363L;
    }
    /**
     * {@snippet :
     * #define GLFW_X11_CLASS_NAME 147457
     * }
     */
    public static int GLFW_X11_CLASS_NAME() {
        return (int)147457L;
    }
    /**
     * {@snippet :
     * #define GLFW_X11_INSTANCE_NAME 147458
     * }
     */
    public static int GLFW_X11_INSTANCE_NAME() {
        return (int)147458L;
    }
    /**
     * {@snippet :
     * #define GLFW_WIN32_KEYBOARD_MENU 151553
     * }
     */
    public static int GLFW_WIN32_KEYBOARD_MENU() {
        return (int)151553L;
    }
    /**
     * {@snippet :
     * #define GLFW_WIN32_SHOWDEFAULT 151554
     * }
     */
    public static int GLFW_WIN32_SHOWDEFAULT() {
        return (int)151554L;
    }
    /**
     * {@snippet :
     * #define GLFW_WAYLAND_APP_ID 155649
     * }
     */
    public static int GLFW_WAYLAND_APP_ID() {
        return (int)155649L;
    }
    /**
     * {@snippet :
     * #define GLFW_NO_API 0
     * }
     */
    public static int GLFW_NO_API() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define GLFW_OPENGL_API 196609
     * }
     */
    public static int GLFW_OPENGL_API() {
        return (int)196609L;
    }
    /**
     * {@snippet :
     * #define GLFW_OPENGL_ES_API 196610
     * }
     */
    public static int GLFW_OPENGL_ES_API() {
        return (int)196610L;
    }
    /**
     * {@snippet :
     * #define GLFW_NO_ROBUSTNESS 0
     * }
     */
    public static int GLFW_NO_ROBUSTNESS() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define GLFW_NO_RESET_NOTIFICATION 200705
     * }
     */
    public static int GLFW_NO_RESET_NOTIFICATION() {
        return (int)200705L;
    }
    /**
     * {@snippet :
     * #define GLFW_LOSE_CONTEXT_ON_RESET 200706
     * }
     */
    public static int GLFW_LOSE_CONTEXT_ON_RESET() {
        return (int)200706L;
    }
    /**
     * {@snippet :
     * #define GLFW_OPENGL_ANY_PROFILE 0
     * }
     */
    public static int GLFW_OPENGL_ANY_PROFILE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define GLFW_OPENGL_CORE_PROFILE 204801
     * }
     */
    public static int GLFW_OPENGL_CORE_PROFILE() {
        return (int)204801L;
    }
    /**
     * {@snippet :
     * #define GLFW_OPENGL_COMPAT_PROFILE 204802
     * }
     */
    public static int GLFW_OPENGL_COMPAT_PROFILE() {
        return (int)204802L;
    }
    /**
     * {@snippet :
     * #define GLFW_CURSOR 208897
     * }
     */
    public static int GLFW_CURSOR() {
        return (int)208897L;
    }
    /**
     * {@snippet :
     * #define GLFW_STICKY_KEYS 208898
     * }
     */
    public static int GLFW_STICKY_KEYS() {
        return (int)208898L;
    }
    /**
     * {@snippet :
     * #define GLFW_STICKY_MOUSE_BUTTONS 208899
     * }
     */
    public static int GLFW_STICKY_MOUSE_BUTTONS() {
        return (int)208899L;
    }
    /**
     * {@snippet :
     * #define GLFW_LOCK_KEY_MODS 208900
     * }
     */
    public static int GLFW_LOCK_KEY_MODS() {
        return (int)208900L;
    }
    /**
     * {@snippet :
     * #define GLFW_RAW_MOUSE_MOTION 208901
     * }
     */
    public static int GLFW_RAW_MOUSE_MOTION() {
        return (int)208901L;
    }
    /**
     * {@snippet :
     * #define GLFW_CURSOR_NORMAL 212993
     * }
     */
    public static int GLFW_CURSOR_NORMAL() {
        return (int)212993L;
    }
    /**
     * {@snippet :
     * #define GLFW_CURSOR_HIDDEN 212994
     * }
     */
    public static int GLFW_CURSOR_HIDDEN() {
        return (int)212994L;
    }
    /**
     * {@snippet :
     * #define GLFW_CURSOR_DISABLED 212995
     * }
     */
    public static int GLFW_CURSOR_DISABLED() {
        return (int)212995L;
    }
    /**
     * {@snippet :
     * #define GLFW_CURSOR_CAPTURED 212996
     * }
     */
    public static int GLFW_CURSOR_CAPTURED() {
        return (int)212996L;
    }
    /**
     * {@snippet :
     * #define GLFW_ANY_RELEASE_BEHAVIOR 0
     * }
     */
    public static int GLFW_ANY_RELEASE_BEHAVIOR() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define GLFW_RELEASE_BEHAVIOR_FLUSH 217089
     * }
     */
    public static int GLFW_RELEASE_BEHAVIOR_FLUSH() {
        return (int)217089L;
    }
    /**
     * {@snippet :
     * #define GLFW_RELEASE_BEHAVIOR_NONE 217090
     * }
     */
    public static int GLFW_RELEASE_BEHAVIOR_NONE() {
        return (int)217090L;
    }
    /**
     * {@snippet :
     * #define GLFW_NATIVE_CONTEXT_API 221185
     * }
     */
    public static int GLFW_NATIVE_CONTEXT_API() {
        return (int)221185L;
    }
    /**
     * {@snippet :
     * #define GLFW_EGL_CONTEXT_API 221186
     * }
     */
    public static int GLFW_EGL_CONTEXT_API() {
        return (int)221186L;
    }
    /**
     * {@snippet :
     * #define GLFW_OSMESA_CONTEXT_API 221187
     * }
     */
    public static int GLFW_OSMESA_CONTEXT_API() {
        return (int)221187L;
    }
    /**
     * {@snippet :
     * #define GLFW_ANGLE_PLATFORM_TYPE_NONE 225281
     * }
     */
    public static int GLFW_ANGLE_PLATFORM_TYPE_NONE() {
        return (int)225281L;
    }
    /**
     * {@snippet :
     * #define GLFW_ANGLE_PLATFORM_TYPE_OPENGL 225282
     * }
     */
    public static int GLFW_ANGLE_PLATFORM_TYPE_OPENGL() {
        return (int)225282L;
    }
    /**
     * {@snippet :
     * #define GLFW_ANGLE_PLATFORM_TYPE_OPENGLES 225283
     * }
     */
    public static int GLFW_ANGLE_PLATFORM_TYPE_OPENGLES() {
        return (int)225283L;
    }
    /**
     * {@snippet :
     * #define GLFW_ANGLE_PLATFORM_TYPE_D3D9 225284
     * }
     */
    public static int GLFW_ANGLE_PLATFORM_TYPE_D3D9() {
        return (int)225284L;
    }
    /**
     * {@snippet :
     * #define GLFW_ANGLE_PLATFORM_TYPE_D3D11 225285
     * }
     */
    public static int GLFW_ANGLE_PLATFORM_TYPE_D3D11() {
        return (int)225285L;
    }
    /**
     * {@snippet :
     * #define GLFW_ANGLE_PLATFORM_TYPE_VULKAN 225287
     * }
     */
    public static int GLFW_ANGLE_PLATFORM_TYPE_VULKAN() {
        return (int)225287L;
    }
    /**
     * {@snippet :
     * #define GLFW_ANGLE_PLATFORM_TYPE_METAL 225288
     * }
     */
    public static int GLFW_ANGLE_PLATFORM_TYPE_METAL() {
        return (int)225288L;
    }
    /**
     * {@snippet :
     * #define GLFW_WAYLAND_PREFER_LIBDECOR 229377
     * }
     */
    public static int GLFW_WAYLAND_PREFER_LIBDECOR() {
        return (int)229377L;
    }
    /**
     * {@snippet :
     * #define GLFW_WAYLAND_DISABLE_LIBDECOR 229378
     * }
     */
    public static int GLFW_WAYLAND_DISABLE_LIBDECOR() {
        return (int)229378L;
    }
    /**
     * {@snippet :
     * #define GLFW_ARROW_CURSOR 221185
     * }
     */
    public static int GLFW_ARROW_CURSOR() {
        return (int)221185L;
    }
    /**
     * {@snippet :
     * #define GLFW_IBEAM_CURSOR 221186
     * }
     */
    public static int GLFW_IBEAM_CURSOR() {
        return (int)221186L;
    }
    /**
     * {@snippet :
     * #define GLFW_CROSSHAIR_CURSOR 221187
     * }
     */
    public static int GLFW_CROSSHAIR_CURSOR() {
        return (int)221187L;
    }
    /**
     * {@snippet :
     * #define GLFW_POINTING_HAND_CURSOR 221188
     * }
     */
    public static int GLFW_POINTING_HAND_CURSOR() {
        return (int)221188L;
    }
    /**
     * {@snippet :
     * #define GLFW_RESIZE_EW_CURSOR 221189
     * }
     */
    public static int GLFW_RESIZE_EW_CURSOR() {
        return (int)221189L;
    }
    /**
     * {@snippet :
     * #define GLFW_RESIZE_NS_CURSOR 221190
     * }
     */
    public static int GLFW_RESIZE_NS_CURSOR() {
        return (int)221190L;
    }
    /**
     * {@snippet :
     * #define GLFW_RESIZE_NWSE_CURSOR 221191
     * }
     */
    public static int GLFW_RESIZE_NWSE_CURSOR() {
        return (int)221191L;
    }
    /**
     * {@snippet :
     * #define GLFW_RESIZE_NESW_CURSOR 221192
     * }
     */
    public static int GLFW_RESIZE_NESW_CURSOR() {
        return (int)221192L;
    }
    /**
     * {@snippet :
     * #define GLFW_RESIZE_ALL_CURSOR 221193
     * }
     */
    public static int GLFW_RESIZE_ALL_CURSOR() {
        return (int)221193L;
    }
    /**
     * {@snippet :
     * #define GLFW_NOT_ALLOWED_CURSOR 221194
     * }
     */
    public static int GLFW_NOT_ALLOWED_CURSOR() {
        return (int)221194L;
    }
    /**
     * {@snippet :
     * #define GLFW_CONNECTED 262145
     * }
     */
    public static int GLFW_CONNECTED() {
        return (int)262145L;
    }
    /**
     * {@snippet :
     * #define GLFW_DISCONNECTED 262146
     * }
     */
    public static int GLFW_DISCONNECTED() {
        return (int)262146L;
    }
    /**
     * {@snippet :
     * #define GLFW_JOYSTICK_HAT_BUTTONS 327681
     * }
     */
    public static int GLFW_JOYSTICK_HAT_BUTTONS() {
        return (int)327681L;
    }
    /**
     * {@snippet :
     * #define GLFW_ANGLE_PLATFORM_TYPE 327682
     * }
     */
    public static int GLFW_ANGLE_PLATFORM_TYPE() {
        return (int)327682L;
    }
    /**
     * {@snippet :
     * #define GLFW_PLATFORM 327683
     * }
     */
    public static int GLFW_PLATFORM() {
        return (int)327683L;
    }
    /**
     * {@snippet :
     * #define GLFW_COCOA_CHDIR_RESOURCES 331777
     * }
     */
    public static int GLFW_COCOA_CHDIR_RESOURCES() {
        return (int)331777L;
    }
    /**
     * {@snippet :
     * #define GLFW_COCOA_MENUBAR 331778
     * }
     */
    public static int GLFW_COCOA_MENUBAR() {
        return (int)331778L;
    }
    /**
     * {@snippet :
     * #define GLFW_X11_XCB_VULKAN_SURFACE 335873
     * }
     */
    public static int GLFW_X11_XCB_VULKAN_SURFACE() {
        return (int)335873L;
    }
    /**
     * {@snippet :
     * #define GLFW_WAYLAND_LIBDECOR 339969
     * }
     */
    public static int GLFW_WAYLAND_LIBDECOR() {
        return (int)339969L;
    }
    /**
     * {@snippet :
     * #define GLFW_ANY_PLATFORM 393216
     * }
     */
    public static int GLFW_ANY_PLATFORM() {
        return (int)393216L;
    }
    /**
     * {@snippet :
     * #define GLFW_PLATFORM_WIN32 393217
     * }
     */
    public static int GLFW_PLATFORM_WIN32() {
        return (int)393217L;
    }
    /**
     * {@snippet :
     * #define GLFW_PLATFORM_COCOA 393218
     * }
     */
    public static int GLFW_PLATFORM_COCOA() {
        return (int)393218L;
    }
    /**
     * {@snippet :
     * #define GLFW_PLATFORM_WAYLAND 393219
     * }
     */
    public static int GLFW_PLATFORM_WAYLAND() {
        return (int)393219L;
    }
    /**
     * {@snippet :
     * #define GLFW_PLATFORM_X11 393220
     * }
     */
    public static int GLFW_PLATFORM_X11() {
        return (int)393220L;
    }
    /**
     * {@snippet :
     * #define GLFW_PLATFORM_NULL 393221
     * }
     */
    public static int GLFW_PLATFORM_NULL() {
        return (int)393221L;
    }
    /**
     * {@snippet :
     * typedef long long ptrdiff_t;
     * }
     */
    public static final OfLong ptrdiff_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned long long size_t;
     * }
     */
    public static final OfLong size_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned short wchar_t;
     * }
     */
    public static final OfShort wchar_t = JAVA_SHORT;
    /**
     * {@snippet :
     * typedef double max_align_t;
     * }
     */
    public static final OfDouble max_align_t = JAVA_DOUBLE;
    /**
     * {@snippet :
     * typedef unsigned long long uintptr_t;
     * }
     */
    public static final OfLong uintptr_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef char* va_list;
     * }
     */
    public static final AddressLayout va_list = RuntimeHelper.POINTER;
    public static MethodHandle __va_start$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$1,"__va_start");
    }
    /**
     * {@snippet :
     * void __va_start(va_list*,...);
     * }
     */
    public static void __va_start(MemorySegment x0, Object... x1) {
        var mh$ = __va_start$MH();
        try {
            mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef long long intptr_t;
     * }
     */
    public static final OfLong intptr_t = JAVA_LONG;
    public static MethodHandle __security_init_cookie$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$3,"__security_init_cookie");
    }
    /**
     * {@snippet :
     * void __security_init_cookie();
     * }
     */
    public static void __security_init_cookie() {
        var mh$ = __security_init_cookie$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __security_check_cookie$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$5,"__security_check_cookie");
    }
    /**
     * {@snippet :
     * void __security_check_cookie(uintptr_t _StackCookie);
     * }
     */
    public static void __security_check_cookie(long _StackCookie) {
        var mh$ = __security_check_cookie$MH();
        try {
            mh$.invokeExact(_StackCookie);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __report_gsfailure$MH() {
        return RuntimeHelper.requireNonNull(constants$1.const$0,"__report_gsfailure");
    }
    /**
     * {@snippet :
     * void __report_gsfailure(uintptr_t _StackCookie);
     * }
     */
    public static void __report_gsfailure(long _StackCookie) {
        var mh$ = __report_gsfailure$MH();
        try {
            mh$.invokeExact(_StackCookie);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemoryLayout __security_cookie$LAYOUT() {
        return JAVA_LONG;
    }
    public static VarHandle __security_cookie$VH() {
        return constants$1.const$1;
    }
    public static MemorySegment __security_cookie$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1.const$2,"__security_cookie");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * uintptr_t __security_cookie;
     * }
     */
    public static long __security_cookie$get() {
        return (long) constants$1.const$1.get(RuntimeHelper.requireNonNull(constants$1.const$2, "__security_cookie"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * uintptr_t __security_cookie;
     * }
     */
    public static void __security_cookie$set(long x) {
        constants$1.const$1.set(RuntimeHelper.requireNonNull(constants$1.const$2, "__security_cookie"), x);
    }
    /**
     * {@snippet :
     * typedef signed char int8_t;
     * }
     */
    public static final OfByte int8_t = JAVA_BYTE;
    /**
     * {@snippet :
     * typedef short int16_t;
     * }
     */
    public static final OfShort int16_t = JAVA_SHORT;
    /**
     * {@snippet :
     * typedef int int32_t;
     * }
     */
    public static final OfInt int32_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef long long int64_t;
     * }
     */
    public static final OfLong int64_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned char uint8_t;
     * }
     */
    public static final OfByte uint8_t = JAVA_BYTE;
    /**
     * {@snippet :
     * typedef unsigned short uint16_t;
     * }
     */
    public static final OfShort uint16_t = JAVA_SHORT;
    /**
     * {@snippet :
     * typedef unsigned int uint32_t;
     * }
     */
    public static final OfInt uint32_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef unsigned long long uint64_t;
     * }
     */
    public static final OfLong uint64_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef signed char int_least8_t;
     * }
     */
    public static final OfByte int_least8_t = JAVA_BYTE;
    /**
     * {@snippet :
     * typedef short int_least16_t;
     * }
     */
    public static final OfShort int_least16_t = JAVA_SHORT;
    /**
     * {@snippet :
     * typedef int int_least32_t;
     * }
     */
    public static final OfInt int_least32_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef long long int_least64_t;
     * }
     */
    public static final OfLong int_least64_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned char uint_least8_t;
     * }
     */
    public static final OfByte uint_least8_t = JAVA_BYTE;
    /**
     * {@snippet :
     * typedef unsigned short uint_least16_t;
     * }
     */
    public static final OfShort uint_least16_t = JAVA_SHORT;
    /**
     * {@snippet :
     * typedef unsigned int uint_least32_t;
     * }
     */
    public static final OfInt uint_least32_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef unsigned long long uint_least64_t;
     * }
     */
    public static final OfLong uint_least64_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef signed char int_fast8_t;
     * }
     */
    public static final OfByte int_fast8_t = JAVA_BYTE;
    /**
     * {@snippet :
     * typedef int int_fast16_t;
     * }
     */
    public static final OfInt int_fast16_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef int int_fast32_t;
     * }
     */
    public static final OfInt int_fast32_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef long long int_fast64_t;
     * }
     */
    public static final OfLong int_fast64_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned char uint_fast8_t;
     * }
     */
    public static final OfByte uint_fast8_t = JAVA_BYTE;
    /**
     * {@snippet :
     * typedef unsigned int uint_fast16_t;
     * }
     */
    public static final OfInt uint_fast16_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef unsigned int uint_fast32_t;
     * }
     */
    public static final OfInt uint_fast32_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef unsigned long long uint_fast64_t;
     * }
     */
    public static final OfLong uint_fast64_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef long long intmax_t;
     * }
     */
    public static final OfLong intmax_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned long long uintmax_t;
     * }
     */
    public static final OfLong uintmax_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned int VkBool32;
     * }
     */
    public static final OfInt VkBool32 = JAVA_INT;
    /**
     * {@snippet :
     * typedef unsigned long long VkDeviceAddress;
     * }
     */
    public static final OfLong VkDeviceAddress = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned long long VkDeviceSize;
     * }
     */
    public static final OfLong VkDeviceSize = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned int VkFlags;
     * }
     */
    public static final OfInt VkFlags = JAVA_INT;
    /**
     * {@snippet :
     * typedef unsigned int VkSampleMask;
     * }
     */
    public static final OfInt VkSampleMask = JAVA_INT;
    /**
     * {@snippet :
     * typedef struct VkBuffer_T* VkBuffer;
     * }
     */
    public static final AddressLayout VkBuffer = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct VkImage_T* VkImage;
     * }
     */
    public static final AddressLayout VkImage = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct VkInstance_T* VkInstance;
     * }
     */
    public static final AddressLayout VkInstance = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct VkPhysicalDevice_T* VkPhysicalDevice;
     * }
     */
    public static final AddressLayout VkPhysicalDevice = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct VkDevice_T* VkDevice;
     * }
     */
    public static final AddressLayout VkDevice = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct VkQueue_T* VkQueue;
     * }
     */
    public static final AddressLayout VkQueue = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct VkSemaphore_T* VkSemaphore;
     * }
     */
    public static final AddressLayout VkSemaphore = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct VkCommandBuffer_T* VkCommandBuffer;
     * }
     */
    public static final AddressLayout VkCommandBuffer = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct VkFence_T* VkFence;
     * }
     */
    public static final AddressLayout VkFence = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct VkDeviceMemory_T* VkDeviceMemory;
     * }
     */
    public static final AddressLayout VkDeviceMemory = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct VkEvent_T* VkEvent;
     * }
     */
    public static final AddressLayout VkEvent = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct VkQueryPool_T* VkQueryPool;
     * }
     */
    public static final AddressLayout VkQueryPool = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct VkBufferView_T* VkBufferView;
     * }
     */
    public static final AddressLayout VkBufferView = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct VkImageView_T* VkImageView;
     * }
     */
    public static final AddressLayout VkImageView = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct VkShaderModule_T* VkShaderModule;
     * }
     */
    public static final AddressLayout VkShaderModule = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct VkPipelineCache_T* VkPipelineCache;
     * }
     */
    public static final AddressLayout VkPipelineCache = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct VkPipelineLayout_T* VkPipelineLayout;
     * }
     */
    public static final AddressLayout VkPipelineLayout = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct VkPipeline_T* VkPipeline;
     * }
     */
    public static final AddressLayout VkPipeline = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct VkRenderPass_T* VkRenderPass;
     * }
     */
    public static final AddressLayout VkRenderPass = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct VkDescriptorSetLayout_T* VkDescriptorSetLayout;
     * }
     */
    public static final AddressLayout VkDescriptorSetLayout = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct VkSampler_T* VkSampler;
     * }
     */
    public static final AddressLayout VkSampler = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct VkDescriptorSet_T* VkDescriptorSet;
     * }
     */
    public static final AddressLayout VkDescriptorSet = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct VkDescriptorPool_T* VkDescriptorPool;
     * }
     */
    public static final AddressLayout VkDescriptorPool = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct VkFramebuffer_T* VkFramebuffer;
     * }
     */
    public static final AddressLayout VkFramebuffer = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct VkCommandPool_T* VkCommandPool;
     * }
     */
    public static final AddressLayout VkCommandPool = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * enum VkResult.VK_SUCCESS = 0;
     * }
     */
    public static int VK_SUCCESS() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum VkResult.VK_NOT_READY = 1;
     * }
     */
    public static int VK_NOT_READY() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum VkResult.VK_TIMEOUT = 2;
     * }
     */
    public static int VK_TIMEOUT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum VkResult.VK_EVENT_SET = 3;
     * }
     */
    public static int VK_EVENT_SET() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum VkResult.VK_EVENT_RESET = 4;
     * }
     */
    public static int VK_EVENT_RESET() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum VkResult.VK_INCOMPLETE = 5;
     * }
     */
    public static int VK_INCOMPLETE() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum VkResult.VK_ERROR_OUT_OF_HOST_MEMORY = -1;
     * }
     */
    public static int VK_ERROR_OUT_OF_HOST_MEMORY() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * enum VkResult.VK_ERROR_OUT_OF_DEVICE_MEMORY = -2;
     * }
     */
    public static int VK_ERROR_OUT_OF_DEVICE_MEMORY() {
        return (int)-2L;
    }
    /**
     * {@snippet :
     * enum VkResult.VK_ERROR_INITIALIZATION_FAILED = -3;
     * }
     */
    public static int VK_ERROR_INITIALIZATION_FAILED() {
        return (int)-3L;
    }
    /**
     * {@snippet :
     * enum VkResult.VK_ERROR_DEVICE_LOST = -4;
     * }
     */
    public static int VK_ERROR_DEVICE_LOST() {
        return (int)-4L;
    }
    /**
     * {@snippet :
     * enum VkResult.VK_ERROR_MEMORY_MAP_FAILED = -5;
     * }
     */
    public static int VK_ERROR_MEMORY_MAP_FAILED() {
        return (int)-5L;
    }
    /**
     * {@snippet :
     * enum VkResult.VK_ERROR_LAYER_NOT_PRESENT = -6;
     * }
     */
    public static int VK_ERROR_LAYER_NOT_PRESENT() {
        return (int)-6L;
    }
    /**
     * {@snippet :
     * enum VkResult.VK_ERROR_EXTENSION_NOT_PRESENT = -7;
     * }
     */
    public static int VK_ERROR_EXTENSION_NOT_PRESENT() {
        return (int)-7L;
    }
    /**
     * {@snippet :
     * enum VkResult.VK_ERROR_FEATURE_NOT_PRESENT = -8;
     * }
     */
    public static int VK_ERROR_FEATURE_NOT_PRESENT() {
        return (int)-8L;
    }
    /**
     * {@snippet :
     * enum VkResult.VK_ERROR_INCOMPATIBLE_DRIVER = -9;
     * }
     */
    public static int VK_ERROR_INCOMPATIBLE_DRIVER() {
        return (int)-9L;
    }
    /**
     * {@snippet :
     * enum VkResult.VK_ERROR_TOO_MANY_OBJECTS = -10;
     * }
     */
    public static int VK_ERROR_TOO_MANY_OBJECTS() {
        return (int)-10L;
    }
    /**
     * {@snippet :
     * enum VkResult.VK_ERROR_FORMAT_NOT_SUPPORTED = -11;
     * }
     */
    public static int VK_ERROR_FORMAT_NOT_SUPPORTED() {
        return (int)-11L;
    }
    /**
     * {@snippet :
     * enum VkResult.VK_ERROR_FRAGMENTED_POOL = -12;
     * }
     */
    public static int VK_ERROR_FRAGMENTED_POOL() {
        return (int)-12L;
    }
    /**
     * {@snippet :
     * enum VkResult.VK_ERROR_UNKNOWN = -13;
     * }
     */
    public static int VK_ERROR_UNKNOWN() {
        return (int)-13L;
    }
    /**
     * {@snippet :
     * enum VkResult.VK_ERROR_OUT_OF_POOL_MEMORY = -1000069000;
     * }
     */
    public static int VK_ERROR_OUT_OF_POOL_MEMORY() {
        return (int)-1000069000L;
    }
    /**
     * {@snippet :
     * enum VkResult.VK_ERROR_INVALID_EXTERNAL_HANDLE = -1000072003;
     * }
     */
    public static int VK_ERROR_INVALID_EXTERNAL_HANDLE() {
        return (int)-1000072003L;
    }
    /**
     * {@snippet :
     * enum VkResult.VK_ERROR_FRAGMENTATION = -1000161000;
     * }
     */
    public static int VK_ERROR_FRAGMENTATION() {
        return (int)-1000161000L;
    }
    /**
     * {@snippet :
     * enum VkResult.VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS = -1000257000;
     * }
     */
    public static int VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS() {
        return (int)-1000257000L;
    }
    /**
     * {@snippet :
     * enum VkResult.VK_PIPELINE_COMPILE_REQUIRED = 1000297000;
     * }
     */
    public static int VK_PIPELINE_COMPILE_REQUIRED() {
        return (int)1000297000L;
    }
    /**
     * {@snippet :
     * enum VkResult.VK_ERROR_SURFACE_LOST_KHR = -1000000000;
     * }
     */
    public static int VK_ERROR_SURFACE_LOST_KHR() {
        return (int)-1000000000L;
    }
    /**
     * {@snippet :
     * enum VkResult.VK_ERROR_NATIVE_WINDOW_IN_USE_KHR = -1000000001;
     * }
     */
    public static int VK_ERROR_NATIVE_WINDOW_IN_USE_KHR() {
        return (int)-1000000001L;
    }
    /**
     * {@snippet :
     * enum VkResult.VK_SUBOPTIMAL_KHR = 1000001003;
     * }
     */
    public static int VK_SUBOPTIMAL_KHR() {
        return (int)1000001003L;
    }
    /**
     * {@snippet :
     * enum VkResult.VK_ERROR_OUT_OF_DATE_KHR = -1000001004;
     * }
     */
    public static int VK_ERROR_OUT_OF_DATE_KHR() {
        return (int)-1000001004L;
    }
    /**
     * {@snippet :
     * enum VkResult.VK_ERROR_INCOMPATIBLE_DISPLAY_KHR = -1000003001;
     * }
     */
    public static int VK_ERROR_INCOMPATIBLE_DISPLAY_KHR() {
        return (int)-1000003001L;
    }
    /**
     * {@snippet :
     * enum VkResult.VK_ERROR_VALIDATION_FAILED_EXT = -1000011001;
     * }
     */
    public static int VK_ERROR_VALIDATION_FAILED_EXT() {
        return (int)-1000011001L;
    }
    /**
     * {@snippet :
     * enum VkResult.VK_ERROR_INVALID_SHADER_NV = -1000012000;
     * }
     */
    public static int VK_ERROR_INVALID_SHADER_NV() {
        return (int)-1000012000L;
    }
    /**
     * {@snippet :
     * enum VkResult.VK_ERROR_IMAGE_USAGE_NOT_SUPPORTED_KHR = -1000023000;
     * }
     */
    public static int VK_ERROR_IMAGE_USAGE_NOT_SUPPORTED_KHR() {
        return (int)-1000023000L;
    }
    /**
     * {@snippet :
     * enum VkResult.VK_ERROR_VIDEO_PICTURE_LAYOUT_NOT_SUPPORTED_KHR = -1000023001;
     * }
     */
    public static int VK_ERROR_VIDEO_PICTURE_LAYOUT_NOT_SUPPORTED_KHR() {
        return (int)-1000023001L;
    }
    /**
     * {@snippet :
     * enum VkResult.VK_ERROR_VIDEO_PROFILE_OPERATION_NOT_SUPPORTED_KHR = -1000023002;
     * }
     */
    public static int VK_ERROR_VIDEO_PROFILE_OPERATION_NOT_SUPPORTED_KHR() {
        return (int)-1000023002L;
    }
    /**
     * {@snippet :
     * enum VkResult.VK_ERROR_VIDEO_PROFILE_FORMAT_NOT_SUPPORTED_KHR = -1000023003;
     * }
     */
    public static int VK_ERROR_VIDEO_PROFILE_FORMAT_NOT_SUPPORTED_KHR() {
        return (int)-1000023003L;
    }
    /**
     * {@snippet :
     * enum VkResult.VK_ERROR_VIDEO_PROFILE_CODEC_NOT_SUPPORTED_KHR = -1000023004;
     * }
     */
    public static int VK_ERROR_VIDEO_PROFILE_CODEC_NOT_SUPPORTED_KHR() {
        return (int)-1000023004L;
    }
    /**
     * {@snippet :
     * enum VkResult.VK_ERROR_VIDEO_STD_VERSION_NOT_SUPPORTED_KHR = -1000023005;
     * }
     */
    public static int VK_ERROR_VIDEO_STD_VERSION_NOT_SUPPORTED_KHR() {
        return (int)-1000023005L;
    }
    /**
     * {@snippet :
     * enum VkResult.VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT = -1000158000;
     * }
     */
    public static int VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT() {
        return (int)-1000158000L;
    }
    /**
     * {@snippet :
     * enum VkResult.VK_ERROR_NOT_PERMITTED_KHR = -1000174001;
     * }
     */
    public static int VK_ERROR_NOT_PERMITTED_KHR() {
        return (int)-1000174001L;
    }
    /**
     * {@snippet :
     * enum VkResult.VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT = -1000255000;
     * }
     */
    public static int VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT() {
        return (int)-1000255000L;
    }
    /**
     * {@snippet :
     * enum VkResult.VK_THREAD_IDLE_KHR = 1000268000;
     * }
     */
    public static int VK_THREAD_IDLE_KHR() {
        return (int)1000268000L;
    }
    /**
     * {@snippet :
     * enum VkResult.VK_THREAD_DONE_KHR = 1000268001;
     * }
     */
    public static int VK_THREAD_DONE_KHR() {
        return (int)1000268001L;
    }
    /**
     * {@snippet :
     * enum VkResult.VK_OPERATION_DEFERRED_KHR = 1000268002;
     * }
     */
    public static int VK_OPERATION_DEFERRED_KHR() {
        return (int)1000268002L;
    }
    /**
     * {@snippet :
     * enum VkResult.VK_OPERATION_NOT_DEFERRED_KHR = 1000268003;
     * }
     */
    public static int VK_OPERATION_NOT_DEFERRED_KHR() {
        return (int)1000268003L;
    }
    /**
     * {@snippet :
     * enum VkResult.VK_ERROR_COMPRESSION_EXHAUSTED_EXT = -1000338000;
     * }
     */
    public static int VK_ERROR_COMPRESSION_EXHAUSTED_EXT() {
        return (int)-1000338000L;
    }
    /**
     * {@snippet :
     * enum VkResult.VK_ERROR_INCOMPATIBLE_SHADER_BINARY_EXT = 1000482000;
     * }
     */
    public static int VK_ERROR_INCOMPATIBLE_SHADER_BINARY_EXT() {
        return (int)1000482000L;
    }
    /**
     * {@snippet :
     * enum VkResult.VK_ERROR_OUT_OF_POOL_MEMORY_KHR = -1000069000;
     * }
     */
    public static int VK_ERROR_OUT_OF_POOL_MEMORY_KHR() {
        return (int)-1000069000L;
    }
    /**
     * {@snippet :
     * enum VkResult.VK_ERROR_INVALID_EXTERNAL_HANDLE_KHR = -1000072003;
     * }
     */
    public static int VK_ERROR_INVALID_EXTERNAL_HANDLE_KHR() {
        return (int)-1000072003L;
    }
    /**
     * {@snippet :
     * enum VkResult.VK_ERROR_FRAGMENTATION_EXT = -1000161000;
     * }
     */
    public static int VK_ERROR_FRAGMENTATION_EXT() {
        return (int)-1000161000L;
    }
    /**
     * {@snippet :
     * enum VkResult.VK_ERROR_NOT_PERMITTED_EXT = -1000174001;
     * }
     */
    public static int VK_ERROR_NOT_PERMITTED_EXT() {
        return (int)-1000174001L;
    }
    /**
     * {@snippet :
     * enum VkResult.VK_ERROR_INVALID_DEVICE_ADDRESS_EXT = -1000257000;
     * }
     */
    public static int VK_ERROR_INVALID_DEVICE_ADDRESS_EXT() {
        return (int)-1000257000L;
    }
    /**
     * {@snippet :
     * enum VkResult.VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR = -1000257000;
     * }
     */
    public static int VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR() {
        return (int)-1000257000L;
    }
    /**
     * {@snippet :
     * enum VkResult.VK_PIPELINE_COMPILE_REQUIRED_EXT = 1000297000;
     * }
     */
    public static int VK_PIPELINE_COMPILE_REQUIRED_EXT() {
        return (int)1000297000L;
    }
    /**
     * {@snippet :
     * enum VkResult.VK_ERROR_PIPELINE_COMPILE_REQUIRED_EXT = 1000297000;
     * }
     */
    public static int VK_ERROR_PIPELINE_COMPILE_REQUIRED_EXT() {
        return (int)1000297000L;
    }
    /**
     * {@snippet :
     * enum VkResult.VK_RESULT_MAX_ENUM = 2147483647;
     * }
     */
    public static int VK_RESULT_MAX_ENUM() {
        return (int)2147483647L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_APPLICATION_INFO = 0;
     * }
     */
    public static int VK_STRUCTURE_TYPE_APPLICATION_INFO() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO = 1;
     * }
     */
    public static int VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO = 2;
     * }
     */
    public static int VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO = 3;
     * }
     */
    public static int VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_SUBMIT_INFO = 4;
     * }
     */
    public static int VK_STRUCTURE_TYPE_SUBMIT_INFO() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO = 5;
     * }
     */
    public static int VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_MAPPED_MEMORY_RANGE = 6;
     * }
     */
    public static int VK_STRUCTURE_TYPE_MAPPED_MEMORY_RANGE() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_BIND_SPARSE_INFO = 7;
     * }
     */
    public static int VK_STRUCTURE_TYPE_BIND_SPARSE_INFO() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_FENCE_CREATE_INFO = 8;
     * }
     */
    public static int VK_STRUCTURE_TYPE_FENCE_CREATE_INFO() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO = 9;
     * }
     */
    public static int VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_EVENT_CREATE_INFO = 10;
     * }
     */
    public static int VK_STRUCTURE_TYPE_EVENT_CREATE_INFO() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO = 11;
     * }
     */
    public static int VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO = 12;
     * }
     */
    public static int VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_BUFFER_VIEW_CREATE_INFO = 13;
     * }
     */
    public static int VK_STRUCTURE_TYPE_BUFFER_VIEW_CREATE_INFO() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO = 14;
     * }
     */
    public static int VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO = 15;
     * }
     */
    public static int VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO() {
        return (int)15L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO = 16;
     * }
     */
    public static int VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_CACHE_CREATE_INFO = 17;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PIPELINE_CACHE_CREATE_INFO() {
        return (int)17L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO = 18;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO() {
        return (int)18L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO = 19;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO() {
        return (int)19L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO = 20;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO() {
        return (int)20L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_STATE_CREATE_INFO = 21;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_STATE_CREATE_INFO() {
        return (int)21L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO = 22;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO() {
        return (int)22L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO = 23;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO() {
        return (int)23L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO = 24;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO() {
        return (int)24L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO = 25;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO() {
        return (int)25L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO = 26;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO() {
        return (int)26L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO = 27;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO() {
        return (int)27L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO = 28;
     * }
     */
    public static int VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO() {
        return (int)28L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO = 29;
     * }
     */
    public static int VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO() {
        return (int)29L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO = 30;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO() {
        return (int)30L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO = 31;
     * }
     */
    public static int VK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO() {
        return (int)31L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO = 32;
     * }
     */
    public static int VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO = 33;
     * }
     */
    public static int VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO() {
        return (int)33L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO = 34;
     * }
     */
    public static int VK_STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO() {
        return (int)34L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET = 35;
     * }
     */
    public static int VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET() {
        return (int)35L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_COPY_DESCRIPTOR_SET = 36;
     * }
     */
    public static int VK_STRUCTURE_TYPE_COPY_DESCRIPTOR_SET() {
        return (int)36L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO = 37;
     * }
     */
    public static int VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO() {
        return (int)37L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO = 38;
     * }
     */
    public static int VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO() {
        return (int)38L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO = 39;
     * }
     */
    public static int VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO() {
        return (int)39L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO = 40;
     * }
     */
    public static int VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO() {
        return (int)40L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_INFO = 41;
     * }
     */
    public static int VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_INFO() {
        return (int)41L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO = 42;
     * }
     */
    public static int VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO() {
        return (int)42L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO = 43;
     * }
     */
    public static int VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO() {
        return (int)43L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER = 44;
     * }
     */
    public static int VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER() {
        return (int)44L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER = 45;
     * }
     */
    public static int VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER() {
        return (int)45L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_MEMORY_BARRIER = 46;
     * }
     */
    public static int VK_STRUCTURE_TYPE_MEMORY_BARRIER() {
        return (int)46L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_LOADER_INSTANCE_CREATE_INFO = 47;
     * }
     */
    public static int VK_STRUCTURE_TYPE_LOADER_INSTANCE_CREATE_INFO() {
        return (int)47L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_LOADER_DEVICE_CREATE_INFO = 48;
     * }
     */
    public static int VK_STRUCTURE_TYPE_LOADER_DEVICE_CREATE_INFO() {
        return (int)48L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_PROPERTIES = 1000094000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_PROPERTIES() {
        return (int)1000094000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO = 1000157000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO() {
        return (int)1000157000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO = 1000157001;
     * }
     */
    public static int VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO() {
        return (int)1000157001L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES = 1000083000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES() {
        return (int)1000083000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS = 1000127000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS() {
        return (int)1000127000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO = 1000127001;
     * }
     */
    public static int VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO() {
        return (int)1000127001L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO = 1000060000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO() {
        return (int)1000060000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO = 1000060003;
     * }
     */
    public static int VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO() {
        return (int)1000060003L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO = 1000060004;
     * }
     */
    public static int VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO() {
        return (int)1000060004L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO = 1000060005;
     * }
     */
    public static int VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO() {
        return (int)1000060005L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO = 1000060006;
     * }
     */
    public static int VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO() {
        return (int)1000060006L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO = 1000060013;
     * }
     */
    public static int VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO() {
        return (int)1000060013L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO = 1000060014;
     * }
     */
    public static int VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO() {
        return (int)1000060014L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES = 1000070000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES() {
        return (int)1000070000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO = 1000070001;
     * }
     */
    public static int VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO() {
        return (int)1000070001L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2 = 1000146000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2() {
        return (int)1000146000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2 = 1000146001;
     * }
     */
    public static int VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2() {
        return (int)1000146001L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2 = 1000146002;
     * }
     */
    public static int VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2() {
        return (int)1000146002L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 = 1000146003;
     * }
     */
    public static int VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2() {
        return (int)1000146003L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2 = 1000146004;
     * }
     */
    public static int VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2() {
        return (int)1000146004L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2 = 1000059000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2() {
        return (int)1000059000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2 = 1000059001;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2() {
        return (int)1000059001L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2 = 1000059002;
     * }
     */
    public static int VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2() {
        return (int)1000059002L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2 = 1000059003;
     * }
     */
    public static int VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2() {
        return (int)1000059003L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2 = 1000059004;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2() {
        return (int)1000059004L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2 = 1000059005;
     * }
     */
    public static int VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2() {
        return (int)1000059005L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2 = 1000059006;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2() {
        return (int)1000059006L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2 = 1000059007;
     * }
     */
    public static int VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2() {
        return (int)1000059007L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2 = 1000059008;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2() {
        return (int)1000059008L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES = 1000117000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES() {
        return (int)1000117000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO = 1000117001;
     * }
     */
    public static int VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO() {
        return (int)1000117001L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO = 1000117002;
     * }
     */
    public static int VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO() {
        return (int)1000117002L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO = 1000117003;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO() {
        return (int)1000117003L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO = 1000053000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO() {
        return (int)1000053000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES = 1000053001;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES() {
        return (int)1000053001L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES = 1000053002;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES() {
        return (int)1000053002L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES = 1000120000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES() {
        return (int)1000120000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PROTECTED_SUBMIT_INFO = 1000145000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PROTECTED_SUBMIT_INFO() {
        return (int)1000145000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_FEATURES = 1000145001;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_FEATURES() {
        return (int)1000145001L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_PROPERTIES = 1000145002;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_PROPERTIES() {
        return (int)1000145002L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_DEVICE_QUEUE_INFO_2 = 1000145003;
     * }
     */
    public static int VK_STRUCTURE_TYPE_DEVICE_QUEUE_INFO_2() {
        return (int)1000145003L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO = 1000156000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO() {
        return (int)1000156000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO = 1000156001;
     * }
     */
    public static int VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO() {
        return (int)1000156001L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO = 1000156002;
     * }
     */
    public static int VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO() {
        return (int)1000156002L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO = 1000156003;
     * }
     */
    public static int VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO() {
        return (int)1000156003L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES = 1000156004;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES() {
        return (int)1000156004L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES = 1000156005;
     * }
     */
    public static int VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES() {
        return (int)1000156005L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO = 1000085000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO() {
        return (int)1000085000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO = 1000071000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO() {
        return (int)1000071000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES = 1000071001;
     * }
     */
    public static int VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES() {
        return (int)1000071001L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO = 1000071002;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO() {
        return (int)1000071002L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES = 1000071003;
     * }
     */
    public static int VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES() {
        return (int)1000071003L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES = 1000071004;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES() {
        return (int)1000071004L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO = 1000072000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO() {
        return (int)1000072000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO = 1000072001;
     * }
     */
    public static int VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO() {
        return (int)1000072001L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO = 1000072002;
     * }
     */
    public static int VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO() {
        return (int)1000072002L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO = 1000112000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO() {
        return (int)1000112000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES = 1000112001;
     * }
     */
    public static int VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES() {
        return (int)1000112001L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO = 1000113000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO() {
        return (int)1000113000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO = 1000077000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO() {
        return (int)1000077000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO = 1000076000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO() {
        return (int)1000076000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES = 1000076001;
     * }
     */
    public static int VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES() {
        return (int)1000076001L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES = 1000168000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES() {
        return (int)1000168000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT = 1000168001;
     * }
     */
    public static int VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT() {
        return (int)1000168001L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETERS_FEATURES = 1000063000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETERS_FEATURES() {
        return (int)1000063000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_FEATURES = 49;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_FEATURES() {
        return (int)49L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_PROPERTIES = 50;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_PROPERTIES() {
        return (int)50L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_FEATURES = 51;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_FEATURES() {
        return (int)51L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_PROPERTIES = 52;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_PROPERTIES() {
        return (int)52L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO = 1000147000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO() {
        return (int)1000147000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2 = 1000109000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2() {
        return (int)1000109000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2 = 1000109001;
     * }
     */
    public static int VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2() {
        return (int)1000109001L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2 = 1000109002;
     * }
     */
    public static int VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2() {
        return (int)1000109002L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2 = 1000109003;
     * }
     */
    public static int VK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2() {
        return (int)1000109003L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2 = 1000109004;
     * }
     */
    public static int VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2() {
        return (int)1000109004L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO = 1000109005;
     * }
     */
    public static int VK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO() {
        return (int)1000109005L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_SUBPASS_END_INFO = 1000109006;
     * }
     */
    public static int VK_STRUCTURE_TYPE_SUBPASS_END_INFO() {
        return (int)1000109006L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES = 1000177000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES() {
        return (int)1000177000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES = 1000196000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES() {
        return (int)1000196000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES = 1000180000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES() {
        return (int)1000180000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES = 1000082000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES() {
        return (int)1000082000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES = 1000197000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES() {
        return (int)1000197000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO = 1000161000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO() {
        return (int)1000161000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES = 1000161001;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES() {
        return (int)1000161001L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES = 1000161002;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES() {
        return (int)1000161002L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO = 1000161003;
     * }
     */
    public static int VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO() {
        return (int)1000161003L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT = 1000161004;
     * }
     */
    public static int VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT() {
        return (int)1000161004L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES = 1000199000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES() {
        return (int)1000199000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE = 1000199001;
     * }
     */
    public static int VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE() {
        return (int)1000199001L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES = 1000221000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES() {
        return (int)1000221000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO = 1000246000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO() {
        return (int)1000246000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES = 1000130000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES() {
        return (int)1000130000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO = 1000130001;
     * }
     */
    public static int VK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO() {
        return (int)1000130001L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES = 1000211000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES() {
        return (int)1000211000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES = 1000108000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES() {
        return (int)1000108000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENTS_CREATE_INFO = 1000108001;
     * }
     */
    public static int VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENTS_CREATE_INFO() {
        return (int)1000108001L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENT_IMAGE_INFO = 1000108002;
     * }
     */
    public static int VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENT_IMAGE_INFO() {
        return (int)1000108002L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_RENDER_PASS_ATTACHMENT_BEGIN_INFO = 1000108003;
     * }
     */
    public static int VK_STRUCTURE_TYPE_RENDER_PASS_ATTACHMENT_BEGIN_INFO() {
        return (int)1000108003L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES = 1000253000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES() {
        return (int)1000253000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES = 1000175000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES() {
        return (int)1000175000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES = 1000241000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES() {
        return (int)1000241000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_STENCIL_LAYOUT = 1000241001;
     * }
     */
    public static int VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_STENCIL_LAYOUT() {
        return (int)1000241001L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT = 1000241002;
     * }
     */
    public static int VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT() {
        return (int)1000241002L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES = 1000261000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES() {
        return (int)1000261000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES = 1000207000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES() {
        return (int)1000207000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES = 1000207001;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES() {
        return (int)1000207001L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_SEMAPHORE_TYPE_CREATE_INFO = 1000207002;
     * }
     */
    public static int VK_STRUCTURE_TYPE_SEMAPHORE_TYPE_CREATE_INFO() {
        return (int)1000207002L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_TIMELINE_SEMAPHORE_SUBMIT_INFO = 1000207003;
     * }
     */
    public static int VK_STRUCTURE_TYPE_TIMELINE_SEMAPHORE_SUBMIT_INFO() {
        return (int)1000207003L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_SEMAPHORE_WAIT_INFO = 1000207004;
     * }
     */
    public static int VK_STRUCTURE_TYPE_SEMAPHORE_WAIT_INFO() {
        return (int)1000207004L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_SEMAPHORE_SIGNAL_INFO = 1000207005;
     * }
     */
    public static int VK_STRUCTURE_TYPE_SEMAPHORE_SIGNAL_INFO() {
        return (int)1000207005L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES = 1000257000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES() {
        return (int)1000257000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO = 1000244001;
     * }
     */
    public static int VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO() {
        return (int)1000244001L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO = 1000257002;
     * }
     */
    public static int VK_STRUCTURE_TYPE_BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO() {
        return (int)1000257002L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO = 1000257003;
     * }
     */
    public static int VK_STRUCTURE_TYPE_MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO() {
        return (int)1000257003L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO = 1000257004;
     * }
     */
    public static int VK_STRUCTURE_TYPE_DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO() {
        return (int)1000257004L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_FEATURES = 53;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_FEATURES() {
        return (int)53L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_PROPERTIES = 54;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_PROPERTIES() {
        return (int)54L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_CREATION_FEEDBACK_CREATE_INFO = 1000192000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PIPELINE_CREATION_FEEDBACK_CREATE_INFO() {
        return (int)1000192000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TERMINATE_INVOCATION_FEATURES = 1000215000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TERMINATE_INVOCATION_FEATURES() {
        return (int)1000215000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TOOL_PROPERTIES = 1000245000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TOOL_PROPERTIES() {
        return (int)1000245000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES = 1000276000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES() {
        return (int)1000276000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIVATE_DATA_FEATURES = 1000295000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIVATE_DATA_FEATURES() {
        return (int)1000295000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_DEVICE_PRIVATE_DATA_CREATE_INFO = 1000295001;
     * }
     */
    public static int VK_STRUCTURE_TYPE_DEVICE_PRIVATE_DATA_CREATE_INFO() {
        return (int)1000295001L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PRIVATE_DATA_SLOT_CREATE_INFO = 1000295002;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PRIVATE_DATA_SLOT_CREATE_INFO() {
        return (int)1000295002L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_CREATION_CACHE_CONTROL_FEATURES = 1000297000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_CREATION_CACHE_CONTROL_FEATURES() {
        return (int)1000297000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_MEMORY_BARRIER_2 = 1000314000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_MEMORY_BARRIER_2() {
        return (int)1000314000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER_2 = 1000314001;
     * }
     */
    public static int VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER_2() {
        return (int)1000314001L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 = 1000314002;
     * }
     */
    public static int VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2() {
        return (int)1000314002L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_DEPENDENCY_INFO = 1000314003;
     * }
     */
    public static int VK_STRUCTURE_TYPE_DEPENDENCY_INFO() {
        return (int)1000314003L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_SUBMIT_INFO_2 = 1000314004;
     * }
     */
    public static int VK_STRUCTURE_TYPE_SUBMIT_INFO_2() {
        return (int)1000314004L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_SEMAPHORE_SUBMIT_INFO = 1000314005;
     * }
     */
    public static int VK_STRUCTURE_TYPE_SEMAPHORE_SUBMIT_INFO() {
        return (int)1000314005L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO = 1000314006;
     * }
     */
    public static int VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO() {
        return (int)1000314006L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SYNCHRONIZATION_2_FEATURES = 1000314007;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SYNCHRONIZATION_2_FEATURES() {
        return (int)1000314007L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ZERO_INITIALIZE_WORKGROUP_MEMORY_FEATURES = 1000325000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ZERO_INITIALIZE_WORKGROUP_MEMORY_FEATURES() {
        return (int)1000325000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_ROBUSTNESS_FEATURES = 1000335000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_ROBUSTNESS_FEATURES() {
        return (int)1000335000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_COPY_BUFFER_INFO_2 = 1000337000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_COPY_BUFFER_INFO_2() {
        return (int)1000337000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_COPY_IMAGE_INFO_2 = 1000337001;
     * }
     */
    public static int VK_STRUCTURE_TYPE_COPY_IMAGE_INFO_2() {
        return (int)1000337001L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2 = 1000337002;
     * }
     */
    public static int VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2() {
        return (int)1000337002L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_COPY_IMAGE_TO_BUFFER_INFO_2 = 1000337003;
     * }
     */
    public static int VK_STRUCTURE_TYPE_COPY_IMAGE_TO_BUFFER_INFO_2() {
        return (int)1000337003L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 = 1000337004;
     * }
     */
    public static int VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2() {
        return (int)1000337004L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_RESOLVE_IMAGE_INFO_2 = 1000337005;
     * }
     */
    public static int VK_STRUCTURE_TYPE_RESOLVE_IMAGE_INFO_2() {
        return (int)1000337005L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_BUFFER_COPY_2 = 1000337006;
     * }
     */
    public static int VK_STRUCTURE_TYPE_BUFFER_COPY_2() {
        return (int)1000337006L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_IMAGE_COPY_2 = 1000337007;
     * }
     */
    public static int VK_STRUCTURE_TYPE_IMAGE_COPY_2() {
        return (int)1000337007L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_IMAGE_BLIT_2 = 1000337008;
     * }
     */
    public static int VK_STRUCTURE_TYPE_IMAGE_BLIT_2() {
        return (int)1000337008L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2 = 1000337009;
     * }
     */
    public static int VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2() {
        return (int)1000337009L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_IMAGE_RESOLVE_2 = 1000337010;
     * }
     */
    public static int VK_STRUCTURE_TYPE_IMAGE_RESOLVE_2() {
        return (int)1000337010L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES = 1000225000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES() {
        return (int)1000225000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO = 1000225001;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO() {
        return (int)1000225001L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES = 1000225002;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES() {
        return (int)1000225002L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES = 1000138000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES() {
        return (int)1000138000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES = 1000138001;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES() {
        return (int)1000138001L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK = 1000138002;
     * }
     */
    public static int VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK() {
        return (int)1000138002L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO = 1000138003;
     * }
     */
    public static int VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO() {
        return (int)1000138003L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES = 1000066000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES() {
        return (int)1000066000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_RENDERING_INFO = 1000044000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_RENDERING_INFO() {
        return (int)1000044000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_INFO = 1000044001;
     * }
     */
    public static int VK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_INFO() {
        return (int)1000044001L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_RENDERING_CREATE_INFO = 1000044002;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PIPELINE_RENDERING_CREATE_INFO() {
        return (int)1000044002L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_FEATURES = 1000044003;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_FEATURES() {
        return (int)1000044003L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDERING_INFO = 1000044004;
     * }
     */
    public static int VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDERING_INFO() {
        return (int)1000044004L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_FEATURES = 1000280000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_FEATURES() {
        return (int)1000280000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_PROPERTIES = 1000280001;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_PROPERTIES() {
        return (int)1000280001L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES = 1000281001;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES() {
        return (int)1000281001L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_3 = 1000360000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_3() {
        return (int)1000360000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_FEATURES = 1000413000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_FEATURES() {
        return (int)1000413000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_PROPERTIES = 1000413001;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_PROPERTIES() {
        return (int)1000413001L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_DEVICE_BUFFER_MEMORY_REQUIREMENTS = 1000413002;
     * }
     */
    public static int VK_STRUCTURE_TYPE_DEVICE_BUFFER_MEMORY_REQUIREMENTS() {
        return (int)1000413002L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_DEVICE_IMAGE_MEMORY_REQUIREMENTS = 1000413003;
     * }
     */
    public static int VK_STRUCTURE_TYPE_DEVICE_IMAGE_MEMORY_REQUIREMENTS() {
        return (int)1000413003L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR = 1000001000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR() {
        return (int)1000001000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PRESENT_INFO_KHR = 1000001001;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PRESENT_INFO_KHR() {
        return (int)1000001001L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_CAPABILITIES_KHR = 1000060007;
     * }
     */
    public static int VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_CAPABILITIES_KHR() {
        return (int)1000060007L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_IMAGE_SWAPCHAIN_CREATE_INFO_KHR = 1000060008;
     * }
     */
    public static int VK_STRUCTURE_TYPE_IMAGE_SWAPCHAIN_CREATE_INFO_KHR() {
        return (int)1000060008L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_SWAPCHAIN_INFO_KHR = 1000060009;
     * }
     */
    public static int VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_SWAPCHAIN_INFO_KHR() {
        return (int)1000060009L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_ACQUIRE_NEXT_IMAGE_INFO_KHR = 1000060010;
     * }
     */
    public static int VK_STRUCTURE_TYPE_ACQUIRE_NEXT_IMAGE_INFO_KHR() {
        return (int)1000060010L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_INFO_KHR = 1000060011;
     * }
     */
    public static int VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_INFO_KHR() {
        return (int)1000060011L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_DEVICE_GROUP_SWAPCHAIN_CREATE_INFO_KHR = 1000060012;
     * }
     */
    public static int VK_STRUCTURE_TYPE_DEVICE_GROUP_SWAPCHAIN_CREATE_INFO_KHR() {
        return (int)1000060012L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_DISPLAY_MODE_CREATE_INFO_KHR = 1000002000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_DISPLAY_MODE_CREATE_INFO_KHR() {
        return (int)1000002000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_DISPLAY_SURFACE_CREATE_INFO_KHR = 1000002001;
     * }
     */
    public static int VK_STRUCTURE_TYPE_DISPLAY_SURFACE_CREATE_INFO_KHR() {
        return (int)1000002001L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_DISPLAY_PRESENT_INFO_KHR = 1000003000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_DISPLAY_PRESENT_INFO_KHR() {
        return (int)1000003000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_XLIB_SURFACE_CREATE_INFO_KHR = 1000004000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_XLIB_SURFACE_CREATE_INFO_KHR() {
        return (int)1000004000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_XCB_SURFACE_CREATE_INFO_KHR = 1000005000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_XCB_SURFACE_CREATE_INFO_KHR() {
        return (int)1000005000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_WAYLAND_SURFACE_CREATE_INFO_KHR = 1000006000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_WAYLAND_SURFACE_CREATE_INFO_KHR() {
        return (int)1000006000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_ANDROID_SURFACE_CREATE_INFO_KHR = 1000008000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_ANDROID_SURFACE_CREATE_INFO_KHR() {
        return (int)1000008000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_WIN32_SURFACE_CREATE_INFO_KHR = 1000009000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_WIN32_SURFACE_CREATE_INFO_KHR() {
        return (int)1000009000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT = 1000011000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT() {
        return (int)1000011000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_RASTERIZATION_ORDER_AMD = 1000018000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_RASTERIZATION_ORDER_AMD() {
        return (int)1000018000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_NAME_INFO_EXT = 1000022000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_NAME_INFO_EXT() {
        return (int)1000022000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_TAG_INFO_EXT = 1000022001;
     * }
     */
    public static int VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_TAG_INFO_EXT() {
        return (int)1000022001L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_DEBUG_MARKER_MARKER_INFO_EXT = 1000022002;
     * }
     */
    public static int VK_STRUCTURE_TYPE_DEBUG_MARKER_MARKER_INFO_EXT() {
        return (int)1000022002L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_VIDEO_PROFILE_INFO_KHR = 1000023000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_VIDEO_PROFILE_INFO_KHR() {
        return (int)1000023000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_VIDEO_CAPABILITIES_KHR = 1000023001;
     * }
     */
    public static int VK_STRUCTURE_TYPE_VIDEO_CAPABILITIES_KHR() {
        return (int)1000023001L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_VIDEO_PICTURE_RESOURCE_INFO_KHR = 1000023002;
     * }
     */
    public static int VK_STRUCTURE_TYPE_VIDEO_PICTURE_RESOURCE_INFO_KHR() {
        return (int)1000023002L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_VIDEO_SESSION_MEMORY_REQUIREMENTS_KHR = 1000023003;
     * }
     */
    public static int VK_STRUCTURE_TYPE_VIDEO_SESSION_MEMORY_REQUIREMENTS_KHR() {
        return (int)1000023003L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_BIND_VIDEO_SESSION_MEMORY_INFO_KHR = 1000023004;
     * }
     */
    public static int VK_STRUCTURE_TYPE_BIND_VIDEO_SESSION_MEMORY_INFO_KHR() {
        return (int)1000023004L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_VIDEO_SESSION_CREATE_INFO_KHR = 1000023005;
     * }
     */
    public static int VK_STRUCTURE_TYPE_VIDEO_SESSION_CREATE_INFO_KHR() {
        return (int)1000023005L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_VIDEO_SESSION_PARAMETERS_CREATE_INFO_KHR = 1000023006;
     * }
     */
    public static int VK_STRUCTURE_TYPE_VIDEO_SESSION_PARAMETERS_CREATE_INFO_KHR() {
        return (int)1000023006L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_VIDEO_SESSION_PARAMETERS_UPDATE_INFO_KHR = 1000023007;
     * }
     */
    public static int VK_STRUCTURE_TYPE_VIDEO_SESSION_PARAMETERS_UPDATE_INFO_KHR() {
        return (int)1000023007L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_VIDEO_BEGIN_CODING_INFO_KHR = 1000023008;
     * }
     */
    public static int VK_STRUCTURE_TYPE_VIDEO_BEGIN_CODING_INFO_KHR() {
        return (int)1000023008L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_VIDEO_END_CODING_INFO_KHR = 1000023009;
     * }
     */
    public static int VK_STRUCTURE_TYPE_VIDEO_END_CODING_INFO_KHR() {
        return (int)1000023009L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_VIDEO_CODING_CONTROL_INFO_KHR = 1000023010;
     * }
     */
    public static int VK_STRUCTURE_TYPE_VIDEO_CODING_CONTROL_INFO_KHR() {
        return (int)1000023010L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_VIDEO_REFERENCE_SLOT_INFO_KHR = 1000023011;
     * }
     */
    public static int VK_STRUCTURE_TYPE_VIDEO_REFERENCE_SLOT_INFO_KHR() {
        return (int)1000023011L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_QUEUE_FAMILY_VIDEO_PROPERTIES_KHR = 1000023012;
     * }
     */
    public static int VK_STRUCTURE_TYPE_QUEUE_FAMILY_VIDEO_PROPERTIES_KHR() {
        return (int)1000023012L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_VIDEO_PROFILE_LIST_INFO_KHR = 1000023013;
     * }
     */
    public static int VK_STRUCTURE_TYPE_VIDEO_PROFILE_LIST_INFO_KHR() {
        return (int)1000023013L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VIDEO_FORMAT_INFO_KHR = 1000023014;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VIDEO_FORMAT_INFO_KHR() {
        return (int)1000023014L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_VIDEO_FORMAT_PROPERTIES_KHR = 1000023015;
     * }
     */
    public static int VK_STRUCTURE_TYPE_VIDEO_FORMAT_PROPERTIES_KHR() {
        return (int)1000023015L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_QUEUE_FAMILY_QUERY_RESULT_STATUS_PROPERTIES_KHR = 1000023016;
     * }
     */
    public static int VK_STRUCTURE_TYPE_QUEUE_FAMILY_QUERY_RESULT_STATUS_PROPERTIES_KHR() {
        return (int)1000023016L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_VIDEO_DECODE_INFO_KHR = 1000024000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_VIDEO_DECODE_INFO_KHR() {
        return (int)1000024000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_VIDEO_DECODE_CAPABILITIES_KHR = 1000024001;
     * }
     */
    public static int VK_STRUCTURE_TYPE_VIDEO_DECODE_CAPABILITIES_KHR() {
        return (int)1000024001L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_VIDEO_DECODE_USAGE_INFO_KHR = 1000024002;
     * }
     */
    public static int VK_STRUCTURE_TYPE_VIDEO_DECODE_USAGE_INFO_KHR() {
        return (int)1000024002L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_IMAGE_CREATE_INFO_NV = 1000026000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_IMAGE_CREATE_INFO_NV() {
        return (int)1000026000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_BUFFER_CREATE_INFO_NV = 1000026001;
     * }
     */
    public static int VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_BUFFER_CREATE_INFO_NV() {
        return (int)1000026001L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_MEMORY_ALLOCATE_INFO_NV = 1000026002;
     * }
     */
    public static int VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_MEMORY_ALLOCATE_INFO_NV() {
        return (int)1000026002L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_FEATURES_EXT = 1000028000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_FEATURES_EXT() {
        return (int)1000028000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_PROPERTIES_EXT = 1000028001;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_PROPERTIES_EXT() {
        return (int)1000028001L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_STREAM_CREATE_INFO_EXT = 1000028002;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_STREAM_CREATE_INFO_EXT() {
        return (int)1000028002L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_CU_MODULE_CREATE_INFO_NVX = 1000029000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_CU_MODULE_CREATE_INFO_NVX() {
        return (int)1000029000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_CU_FUNCTION_CREATE_INFO_NVX = 1000029001;
     * }
     */
    public static int VK_STRUCTURE_TYPE_CU_FUNCTION_CREATE_INFO_NVX() {
        return (int)1000029001L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_CU_LAUNCH_INFO_NVX = 1000029002;
     * }
     */
    public static int VK_STRUCTURE_TYPE_CU_LAUNCH_INFO_NVX() {
        return (int)1000029002L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_IMAGE_VIEW_HANDLE_INFO_NVX = 1000030000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_IMAGE_VIEW_HANDLE_INFO_NVX() {
        return (int)1000030000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_IMAGE_VIEW_ADDRESS_PROPERTIES_NVX = 1000030001;
     * }
     */
    public static int VK_STRUCTURE_TYPE_IMAGE_VIEW_ADDRESS_PROPERTIES_NVX() {
        return (int)1000030001L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_CAPABILITIES_KHR = 1000040000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_CAPABILITIES_KHR() {
        return (int)1000040000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_PICTURE_INFO_KHR = 1000040001;
     * }
     */
    public static int VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_PICTURE_INFO_KHR() {
        return (int)1000040001L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_PROFILE_INFO_KHR = 1000040003;
     * }
     */
    public static int VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_PROFILE_INFO_KHR() {
        return (int)1000040003L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_SESSION_PARAMETERS_CREATE_INFO_KHR = 1000040004;
     * }
     */
    public static int VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_SESSION_PARAMETERS_CREATE_INFO_KHR() {
        return (int)1000040004L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_SESSION_PARAMETERS_ADD_INFO_KHR = 1000040005;
     * }
     */
    public static int VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_SESSION_PARAMETERS_ADD_INFO_KHR() {
        return (int)1000040005L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_DPB_SLOT_INFO_KHR = 1000040006;
     * }
     */
    public static int VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_DPB_SLOT_INFO_KHR() {
        return (int)1000040006L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_TEXTURE_LOD_GATHER_FORMAT_PROPERTIES_AMD = 1000041000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_TEXTURE_LOD_GATHER_FORMAT_PROPERTIES_AMD() {
        return (int)1000041000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_INFO_KHR = 1000044006;
     * }
     */
    public static int VK_STRUCTURE_TYPE_RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_INFO_KHR() {
        return (int)1000044006L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_INFO_EXT = 1000044007;
     * }
     */
    public static int VK_STRUCTURE_TYPE_RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_INFO_EXT() {
        return (int)1000044007L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_ATTACHMENT_SAMPLE_COUNT_INFO_AMD = 1000044008;
     * }
     */
    public static int VK_STRUCTURE_TYPE_ATTACHMENT_SAMPLE_COUNT_INFO_AMD() {
        return (int)1000044008L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_MULTIVIEW_PER_VIEW_ATTRIBUTES_INFO_NVX = 1000044009;
     * }
     */
    public static int VK_STRUCTURE_TYPE_MULTIVIEW_PER_VIEW_ATTRIBUTES_INFO_NVX() {
        return (int)1000044009L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_STREAM_DESCRIPTOR_SURFACE_CREATE_INFO_GGP = 1000049000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_STREAM_DESCRIPTOR_SURFACE_CREATE_INFO_GGP() {
        return (int)1000049000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CORNER_SAMPLED_IMAGE_FEATURES_NV = 1000050000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CORNER_SAMPLED_IMAGE_FEATURES_NV() {
        return (int)1000050000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_NV = 1000056000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_NV() {
        return (int)1000056000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_NV = 1000056001;
     * }
     */
    public static int VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_NV() {
        return (int)1000056001L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_NV = 1000057000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_NV() {
        return (int)1000057000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_NV = 1000057001;
     * }
     */
    public static int VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_NV() {
        return (int)1000057001L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_NV = 1000058000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_NV() {
        return (int)1000058000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_VALIDATION_FLAGS_EXT = 1000061000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_VALIDATION_FLAGS_EXT() {
        return (int)1000061000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_VI_SURFACE_CREATE_INFO_NN = 1000062000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_VI_SURFACE_CREATE_INFO_NN() {
        return (int)1000062000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_IMAGE_VIEW_ASTC_DECODE_MODE_EXT = 1000067000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_IMAGE_VIEW_ASTC_DECODE_MODE_EXT() {
        return (int)1000067000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ASTC_DECODE_FEATURES_EXT = 1000067001;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ASTC_DECODE_FEATURES_EXT() {
        return (int)1000067001L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_ROBUSTNESS_CREATE_INFO_EXT = 1000068000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PIPELINE_ROBUSTNESS_CREATE_INFO_EXT() {
        return (int)1000068000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_ROBUSTNESS_FEATURES_EXT = 1000068001;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_ROBUSTNESS_FEATURES_EXT() {
        return (int)1000068001L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_ROBUSTNESS_PROPERTIES_EXT = 1000068002;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_ROBUSTNESS_PROPERTIES_EXT() {
        return (int)1000068002L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_KHR = 1000073000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_KHR() {
        return (int)1000073000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_KHR = 1000073001;
     * }
     */
    public static int VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_KHR() {
        return (int)1000073001L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_MEMORY_WIN32_HANDLE_PROPERTIES_KHR = 1000073002;
     * }
     */
    public static int VK_STRUCTURE_TYPE_MEMORY_WIN32_HANDLE_PROPERTIES_KHR() {
        return (int)1000073002L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_MEMORY_GET_WIN32_HANDLE_INFO_KHR = 1000073003;
     * }
     */
    public static int VK_STRUCTURE_TYPE_MEMORY_GET_WIN32_HANDLE_INFO_KHR() {
        return (int)1000073003L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_IMPORT_MEMORY_FD_INFO_KHR = 1000074000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_IMPORT_MEMORY_FD_INFO_KHR() {
        return (int)1000074000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_MEMORY_FD_PROPERTIES_KHR = 1000074001;
     * }
     */
    public static int VK_STRUCTURE_TYPE_MEMORY_FD_PROPERTIES_KHR() {
        return (int)1000074001L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_MEMORY_GET_FD_INFO_KHR = 1000074002;
     * }
     */
    public static int VK_STRUCTURE_TYPE_MEMORY_GET_FD_INFO_KHR() {
        return (int)1000074002L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_KHR = 1000075000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_KHR() {
        return (int)1000075000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR = 1000078000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR() {
        return (int)1000078000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR = 1000078001;
     * }
     */
    public static int VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR() {
        return (int)1000078001L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_D3D12_FENCE_SUBMIT_INFO_KHR = 1000078002;
     * }
     */
    public static int VK_STRUCTURE_TYPE_D3D12_FENCE_SUBMIT_INFO_KHR() {
        return (int)1000078002L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_SEMAPHORE_GET_WIN32_HANDLE_INFO_KHR = 1000078003;
     * }
     */
    public static int VK_STRUCTURE_TYPE_SEMAPHORE_GET_WIN32_HANDLE_INFO_KHR() {
        return (int)1000078003L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_FD_INFO_KHR = 1000079000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_FD_INFO_KHR() {
        return (int)1000079000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_SEMAPHORE_GET_FD_INFO_KHR = 1000079001;
     * }
     */
    public static int VK_STRUCTURE_TYPE_SEMAPHORE_GET_FD_INFO_KHR() {
        return (int)1000079001L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PUSH_DESCRIPTOR_PROPERTIES_KHR = 1000080000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PUSH_DESCRIPTOR_PROPERTIES_KHR() {
        return (int)1000080000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_CONDITIONAL_RENDERING_INFO_EXT = 1000081000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_CONDITIONAL_RENDERING_INFO_EXT() {
        return (int)1000081000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONDITIONAL_RENDERING_FEATURES_EXT = 1000081001;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONDITIONAL_RENDERING_FEATURES_EXT() {
        return (int)1000081001L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_CONDITIONAL_RENDERING_BEGIN_INFO_EXT = 1000081002;
     * }
     */
    public static int VK_STRUCTURE_TYPE_CONDITIONAL_RENDERING_BEGIN_INFO_EXT() {
        return (int)1000081002L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PRESENT_REGIONS_KHR = 1000084000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PRESENT_REGIONS_KHR() {
        return (int)1000084000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_W_SCALING_STATE_CREATE_INFO_NV = 1000087000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_W_SCALING_STATE_CREATE_INFO_NV() {
        return (int)1000087000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_EXT = 1000090000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_EXT() {
        return (int)1000090000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_DISPLAY_POWER_INFO_EXT = 1000091000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_DISPLAY_POWER_INFO_EXT() {
        return (int)1000091000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_DEVICE_EVENT_INFO_EXT = 1000091001;
     * }
     */
    public static int VK_STRUCTURE_TYPE_DEVICE_EVENT_INFO_EXT() {
        return (int)1000091001L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_DISPLAY_EVENT_INFO_EXT = 1000091002;
     * }
     */
    public static int VK_STRUCTURE_TYPE_DISPLAY_EVENT_INFO_EXT() {
        return (int)1000091002L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_SWAPCHAIN_COUNTER_CREATE_INFO_EXT = 1000091003;
     * }
     */
    public static int VK_STRUCTURE_TYPE_SWAPCHAIN_COUNTER_CREATE_INFO_EXT() {
        return (int)1000091003L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PRESENT_TIMES_INFO_GOOGLE = 1000092000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PRESENT_TIMES_INFO_GOOGLE() {
        return (int)1000092000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_ATTRIBUTES_PROPERTIES_NVX = 1000097000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_ATTRIBUTES_PROPERTIES_NVX() {
        return (int)1000097000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SWIZZLE_STATE_CREATE_INFO_NV = 1000098000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SWIZZLE_STATE_CREATE_INFO_NV() {
        return (int)1000098000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DISCARD_RECTANGLE_PROPERTIES_EXT = 1000099000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DISCARD_RECTANGLE_PROPERTIES_EXT() {
        return (int)1000099000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_DISCARD_RECTANGLE_STATE_CREATE_INFO_EXT = 1000099001;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PIPELINE_DISCARD_RECTANGLE_STATE_CREATE_INFO_EXT() {
        return (int)1000099001L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONSERVATIVE_RASTERIZATION_PROPERTIES_EXT = 1000101000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONSERVATIVE_RASTERIZATION_PROPERTIES_EXT() {
        return (int)1000101000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_CONSERVATIVE_STATE_CREATE_INFO_EXT = 1000101001;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_CONSERVATIVE_STATE_CREATE_INFO_EXT() {
        return (int)1000101001L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_ENABLE_FEATURES_EXT = 1000102000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_ENABLE_FEATURES_EXT() {
        return (int)1000102000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_DEPTH_CLIP_STATE_CREATE_INFO_EXT = 1000102001;
     * }
     */
    public static int VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_DEPTH_CLIP_STATE_CREATE_INFO_EXT() {
        return (int)1000102001L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_HDR_METADATA_EXT = 1000105000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_HDR_METADATA_EXT() {
        return (int)1000105000L;
    }
    /**
     * {@snippet :
     * enum VkStructureType.VK_STRUCTURE_TYPE_SHARED_PRESENT_SURFACE_CAPABILITIES_KHR = 1000111000;
     * }
     */
    public static int VK_STRUCTURE_TYPE_SHARED_PRESENT_SURFACE_CAPABILITIES_KHR() {
        return (int)1000111000L;
    }
}


