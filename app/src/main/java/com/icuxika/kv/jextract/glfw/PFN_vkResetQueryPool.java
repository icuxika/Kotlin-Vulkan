// Generated by jextract

package com.icuxika.kv.jextract.glfw;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * void (*PFN_vkResetQueryPool)(struct VkDevice_T* device,struct VkQueryPool_T* queryPool,unsigned int firstQuery,unsigned int queryCount);
 * }
 */
public interface PFN_vkResetQueryPool {

    void apply(java.lang.foreign.MemorySegment device, java.lang.foreign.MemorySegment queryPool, int firstQuery, int queryCount);
    static MemorySegment allocate(PFN_vkResetQueryPool fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$343.const$2, fi, constants$176.const$0, scope);
    }
    static PFN_vkResetQueryPool ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (java.lang.foreign.MemorySegment _device, java.lang.foreign.MemorySegment _queryPool, int _firstQuery, int _queryCount) -> {
            try {
                constants$176.const$2.invokeExact(symbol, _device, _queryPool, _firstQuery, _queryCount);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


