// Generated by jextract

package com.icuxika.kv.jextract.glfw;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * void (*PFN_vkCmdWaitEvents2)(struct VkCommandBuffer_T* commandBuffer,unsigned int eventCount,struct VkEvent_T** pEvents,struct VkDependencyInfo* pDependencyInfos);
 * }
 */
public interface PFN_vkCmdWaitEvents2 {

    void apply(java.lang.foreign.MemorySegment commandBuffer, int infoCount, java.lang.foreign.MemorySegment pInfos, java.lang.foreign.MemorySegment ppBuildRangeInfos);
    static MemorySegment allocate(PFN_vkCmdWaitEvents2 fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$416.const$1, fi, constants$416.const$0, scope);
    }
    static PFN_vkCmdWaitEvents2 ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (java.lang.foreign.MemorySegment _commandBuffer, int _infoCount, java.lang.foreign.MemorySegment _pInfos, java.lang.foreign.MemorySegment _ppBuildRangeInfos) -> {
            try {
                constants$416.const$2.invokeExact(symbol, _commandBuffer, _infoCount, _pInfos, _ppBuildRangeInfos);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


