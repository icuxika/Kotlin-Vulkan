// Generated by jextract

package com.icuxika.kv.jextract.glfw;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct VkPhysicalDeviceMeshShaderPropertiesNV {
 *     VkStructureType sType;
 *     void* pNext;
 *     uint32_t maxDrawMeshTasksCount;
 *     uint32_t maxTaskWorkGroupInvocations;
 *     uint32_t maxTaskWorkGroupSize[3];
 *     uint32_t maxTaskTotalMemorySize;
 *     uint32_t maxTaskOutputCount;
 *     uint32_t maxMeshWorkGroupInvocations;
 *     uint32_t maxMeshWorkGroupSize[3];
 *     uint32_t maxMeshTotalMemorySize;
 *     uint32_t maxMeshOutputVertices;
 *     uint32_t maxMeshOutputPrimitives;
 *     uint32_t maxMeshMultiviewViewCount;
 *     uint32_t meshOutputPerVertexGranularity;
 *     uint32_t meshOutputPerPrimitiveGranularity;
 * };
 * }
 */
public class VkPhysicalDeviceMeshShaderPropertiesNV {

    public static MemoryLayout $LAYOUT() {
        return constants$756.const$2;
    }
    public static VarHandle sType$VH() {
        return constants$756.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * VkStructureType sType;
     * }
     */
    public static int sType$get(MemorySegment seg) {
        return (int)constants$756.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * VkStructureType sType;
     * }
     */
    public static void sType$set(MemorySegment seg, int x) {
        constants$756.const$3.set(seg, x);
    }
    public static int sType$get(MemorySegment seg, long index) {
        return (int)constants$756.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void sType$set(MemorySegment seg, long index, int x) {
        constants$756.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pNext$VH() {
        return constants$756.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * void* pNext;
     * }
     */
    public static MemorySegment pNext$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$756.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * void* pNext;
     * }
     */
    public static void pNext$set(MemorySegment seg, MemorySegment x) {
        constants$756.const$4.set(seg, x);
    }
    public static MemorySegment pNext$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$756.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void pNext$set(MemorySegment seg, long index, MemorySegment x) {
        constants$756.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle maxDrawMeshTasksCount$VH() {
        return constants$756.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint32_t maxDrawMeshTasksCount;
     * }
     */
    public static int maxDrawMeshTasksCount$get(MemorySegment seg) {
        return (int)constants$756.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint32_t maxDrawMeshTasksCount;
     * }
     */
    public static void maxDrawMeshTasksCount$set(MemorySegment seg, int x) {
        constants$756.const$5.set(seg, x);
    }
    public static int maxDrawMeshTasksCount$get(MemorySegment seg, long index) {
        return (int)constants$756.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void maxDrawMeshTasksCount$set(MemorySegment seg, long index, int x) {
        constants$756.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle maxTaskWorkGroupInvocations$VH() {
        return constants$757.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint32_t maxTaskWorkGroupInvocations;
     * }
     */
    public static int maxTaskWorkGroupInvocations$get(MemorySegment seg) {
        return (int)constants$757.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint32_t maxTaskWorkGroupInvocations;
     * }
     */
    public static void maxTaskWorkGroupInvocations$set(MemorySegment seg, int x) {
        constants$757.const$0.set(seg, x);
    }
    public static int maxTaskWorkGroupInvocations$get(MemorySegment seg, long index) {
        return (int)constants$757.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void maxTaskWorkGroupInvocations$set(MemorySegment seg, long index, int x) {
        constants$757.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment maxTaskWorkGroupSize$slice(MemorySegment seg) {
        return seg.asSlice(24, 12);
    }
    public static VarHandle maxTaskTotalMemorySize$VH() {
        return constants$757.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint32_t maxTaskTotalMemorySize;
     * }
     */
    public static int maxTaskTotalMemorySize$get(MemorySegment seg) {
        return (int)constants$757.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint32_t maxTaskTotalMemorySize;
     * }
     */
    public static void maxTaskTotalMemorySize$set(MemorySegment seg, int x) {
        constants$757.const$1.set(seg, x);
    }
    public static int maxTaskTotalMemorySize$get(MemorySegment seg, long index) {
        return (int)constants$757.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void maxTaskTotalMemorySize$set(MemorySegment seg, long index, int x) {
        constants$757.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle maxTaskOutputCount$VH() {
        return constants$757.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint32_t maxTaskOutputCount;
     * }
     */
    public static int maxTaskOutputCount$get(MemorySegment seg) {
        return (int)constants$757.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint32_t maxTaskOutputCount;
     * }
     */
    public static void maxTaskOutputCount$set(MemorySegment seg, int x) {
        constants$757.const$2.set(seg, x);
    }
    public static int maxTaskOutputCount$get(MemorySegment seg, long index) {
        return (int)constants$757.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void maxTaskOutputCount$set(MemorySegment seg, long index, int x) {
        constants$757.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle maxMeshWorkGroupInvocations$VH() {
        return constants$757.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint32_t maxMeshWorkGroupInvocations;
     * }
     */
    public static int maxMeshWorkGroupInvocations$get(MemorySegment seg) {
        return (int)constants$757.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint32_t maxMeshWorkGroupInvocations;
     * }
     */
    public static void maxMeshWorkGroupInvocations$set(MemorySegment seg, int x) {
        constants$757.const$3.set(seg, x);
    }
    public static int maxMeshWorkGroupInvocations$get(MemorySegment seg, long index) {
        return (int)constants$757.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void maxMeshWorkGroupInvocations$set(MemorySegment seg, long index, int x) {
        constants$757.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment maxMeshWorkGroupSize$slice(MemorySegment seg) {
        return seg.asSlice(48, 12);
    }
    public static VarHandle maxMeshTotalMemorySize$VH() {
        return constants$757.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint32_t maxMeshTotalMemorySize;
     * }
     */
    public static int maxMeshTotalMemorySize$get(MemorySegment seg) {
        return (int)constants$757.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint32_t maxMeshTotalMemorySize;
     * }
     */
    public static void maxMeshTotalMemorySize$set(MemorySegment seg, int x) {
        constants$757.const$4.set(seg, x);
    }
    public static int maxMeshTotalMemorySize$get(MemorySegment seg, long index) {
        return (int)constants$757.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void maxMeshTotalMemorySize$set(MemorySegment seg, long index, int x) {
        constants$757.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle maxMeshOutputVertices$VH() {
        return constants$757.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint32_t maxMeshOutputVertices;
     * }
     */
    public static int maxMeshOutputVertices$get(MemorySegment seg) {
        return (int)constants$757.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint32_t maxMeshOutputVertices;
     * }
     */
    public static void maxMeshOutputVertices$set(MemorySegment seg, int x) {
        constants$757.const$5.set(seg, x);
    }
    public static int maxMeshOutputVertices$get(MemorySegment seg, long index) {
        return (int)constants$757.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void maxMeshOutputVertices$set(MemorySegment seg, long index, int x) {
        constants$757.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle maxMeshOutputPrimitives$VH() {
        return constants$758.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint32_t maxMeshOutputPrimitives;
     * }
     */
    public static int maxMeshOutputPrimitives$get(MemorySegment seg) {
        return (int)constants$758.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint32_t maxMeshOutputPrimitives;
     * }
     */
    public static void maxMeshOutputPrimitives$set(MemorySegment seg, int x) {
        constants$758.const$0.set(seg, x);
    }
    public static int maxMeshOutputPrimitives$get(MemorySegment seg, long index) {
        return (int)constants$758.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void maxMeshOutputPrimitives$set(MemorySegment seg, long index, int x) {
        constants$758.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle maxMeshMultiviewViewCount$VH() {
        return constants$758.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint32_t maxMeshMultiviewViewCount;
     * }
     */
    public static int maxMeshMultiviewViewCount$get(MemorySegment seg) {
        return (int)constants$758.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint32_t maxMeshMultiviewViewCount;
     * }
     */
    public static void maxMeshMultiviewViewCount$set(MemorySegment seg, int x) {
        constants$758.const$1.set(seg, x);
    }
    public static int maxMeshMultiviewViewCount$get(MemorySegment seg, long index) {
        return (int)constants$758.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void maxMeshMultiviewViewCount$set(MemorySegment seg, long index, int x) {
        constants$758.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle meshOutputPerVertexGranularity$VH() {
        return constants$758.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint32_t meshOutputPerVertexGranularity;
     * }
     */
    public static int meshOutputPerVertexGranularity$get(MemorySegment seg) {
        return (int)constants$758.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint32_t meshOutputPerVertexGranularity;
     * }
     */
    public static void meshOutputPerVertexGranularity$set(MemorySegment seg, int x) {
        constants$758.const$2.set(seg, x);
    }
    public static int meshOutputPerVertexGranularity$get(MemorySegment seg, long index) {
        return (int)constants$758.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void meshOutputPerVertexGranularity$set(MemorySegment seg, long index, int x) {
        constants$758.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle meshOutputPerPrimitiveGranularity$VH() {
        return constants$758.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint32_t meshOutputPerPrimitiveGranularity;
     * }
     */
    public static int meshOutputPerPrimitiveGranularity$get(MemorySegment seg) {
        return (int)constants$758.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint32_t meshOutputPerPrimitiveGranularity;
     * }
     */
    public static void meshOutputPerPrimitiveGranularity$set(MemorySegment seg, int x) {
        constants$758.const$3.set(seg, x);
    }
    public static int meshOutputPerPrimitiveGranularity$get(MemorySegment seg, long index) {
        return (int)constants$758.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void meshOutputPerPrimitiveGranularity$set(MemorySegment seg, long index, int x) {
        constants$758.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


