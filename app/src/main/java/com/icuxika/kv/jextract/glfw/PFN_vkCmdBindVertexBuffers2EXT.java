// Generated by jextract

package com.icuxika.kv.jextract.glfw;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * void (*PFN_vkCmdBindVertexBuffers2EXT)(struct VkCommandBuffer_T* commandBuffer,unsigned int firstBinding,unsigned int bindingCount,struct VkBuffer_T** pBuffers,unsigned long long* pOffsets,unsigned long long* pSizes,unsigned long long* pStrides);
 * }
 */
public interface PFN_vkCmdBindVertexBuffers2EXT {

    void apply(java.lang.foreign.MemorySegment commandBuffer, int firstBinding, int bindingCount, java.lang.foreign.MemorySegment pBuffers, java.lang.foreign.MemorySegment pOffsets, java.lang.foreign.MemorySegment pSizes, java.lang.foreign.MemorySegment pStrides);
    static MemorySegment allocate(PFN_vkCmdBindVertexBuffers2EXT fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$808.const$3, fi, constants$419.const$3, scope);
    }
    static PFN_vkCmdBindVertexBuffers2EXT ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (java.lang.foreign.MemorySegment _commandBuffer, int _firstBinding, int _bindingCount, java.lang.foreign.MemorySegment _pBuffers, java.lang.foreign.MemorySegment _pOffsets, java.lang.foreign.MemorySegment _pSizes, java.lang.foreign.MemorySegment _pStrides) -> {
            try {
                constants$419.const$5.invokeExact(symbol, _commandBuffer, _firstBinding, _bindingCount, _pBuffers, _pOffsets, _pSizes, _pStrides);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


