// Generated by jextract

package com.icuxika.kv.jextract.glfw;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * void (*GLFWdropfun)(struct GLFWwindow* window,int path_count,char** paths);
 * }
 */
public interface GLFWdropfun {

    void apply(java.lang.foreign.MemorySegment window, int path_count, java.lang.foreign.MemorySegment paths);
    static MemorySegment allocate(GLFWdropfun fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$1154.const$0, fi, constants$140.const$5, scope);
    }
    static GLFWdropfun ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (java.lang.foreign.MemorySegment _window, int _path_count, java.lang.foreign.MemorySegment _paths) -> {
            try {
                constants$141.const$1.invokeExact(symbol, _window, _path_count, _paths);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


