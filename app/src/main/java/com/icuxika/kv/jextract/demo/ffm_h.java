// Generated by jextract

package com.icuxika.kv.jextract.demo;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class ffm_h  {

    public static final OfByte C_CHAR = JAVA_BYTE;
    public static final OfShort C_SHORT = JAVA_SHORT;
    public static final OfInt C_INT = JAVA_INT;
    public static final OfInt C_LONG = JAVA_INT;
    public static final OfLong C_LONG_LONG = JAVA_LONG;
    public static final OfFloat C_FLOAT = JAVA_FLOAT;
    public static final OfDouble C_DOUBLE = JAVA_DOUBLE;
    public static final AddressLayout C_POINTER = RuntimeHelper.POINTER;
    public static MethodHandle forEach$MH() {
        return RuntimeHelper.requireNonNull(constants$1.const$1,"forEach");
    }
    /**
     * {@snippet :
     * void forEach(int array[], int length, OnEach onEach);
     * }
     */
    public static void forEach(MemorySegment array, int length, MemorySegment onEach) {
        var mh$ = forEach$MH();
        try {
            mh$.invokeExact(array, length, onEach);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle dumpPerson$MH() {
        return RuntimeHelper.requireNonNull(constants$1.const$3,"dumpPerson");
    }
    /**
     * {@snippet :
     * void dumpPerson(Person* person);
     * }
     */
    public static void dumpPerson(MemorySegment person) {
        var mh$ = dumpPerson$MH();
        try {
            mh$.invokeExact(person);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getName$MH() {
        return RuntimeHelper.requireNonNull(constants$1.const$5,"getName");
    }
    /**
     * {@snippet :
     * char* getName(,...);
     * }
     */
    public static MemorySegment getName(Object... x0) {
        var mh$ = getName$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getNames$MH() {
        return RuntimeHelper.requireNonNull(constants$2.const$0,"getNames");
    }
    /**
     * {@snippet :
     * char** getNames(,...);
     * }
     */
    public static MemorySegment getNames(Object... x0) {
        var mh$ = getNames$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
}


