// Generated by jextract

package com.icuxika.kv.jextract.glfw;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * void (*PFN_vkCmdWriteTimestamp2)(struct VkCommandBuffer_T* commandBuffer,unsigned long long stage,struct VkQueryPool_T* queryPool,unsigned int query);
 * }
 */
public interface PFN_vkCmdWriteTimestamp2 {

    void apply(java.lang.foreign.MemorySegment commandBuffer, long stage, java.lang.foreign.MemorySegment queryPool, int query);
    static MemorySegment allocate(PFN_vkCmdWriteTimestamp2 fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$416.const$5, fi, constants$416.const$4, scope);
    }
    static PFN_vkCmdWriteTimestamp2 ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (java.lang.foreign.MemorySegment _commandBuffer, long _stage, java.lang.foreign.MemorySegment _queryPool, int _query) -> {
            try {
                constants$417.const$0.invokeExact(symbol, _commandBuffer, _stage, _queryPool, _query);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


