// Generated by jextract

package com.icuxika.kv.jextract.glfw;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * void (*PFN_vkSubmitDebugUtilsMessageEXT)(struct VkInstance_T* instance,enum VkDebugUtilsMessageSeverityFlagBitsEXT messageSeverity,unsigned int messageTypes,struct VkDebugUtilsMessengerCallbackDataEXT* pCallbackData);
 * }
 */
public interface PFN_vkSubmitDebugUtilsMessageEXT {

    void apply(java.lang.foreign.MemorySegment instance, int messageSeverity, int messageTypes, java.lang.foreign.MemorySegment pCallbackData);
    static MemorySegment allocate(PFN_vkSubmitDebugUtilsMessageEXT fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$685.const$5, fi, constants$145.const$0, scope);
    }
    static PFN_vkSubmitDebugUtilsMessageEXT ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (java.lang.foreign.MemorySegment _instance, int _messageSeverity, int _messageTypes, java.lang.foreign.MemorySegment _pCallbackData) -> {
            try {
                constants$145.const$2.invokeExact(symbol, _instance, _messageSeverity, _messageTypes, _pCallbackData);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


