// Generated by jextract

package com.icuxika.kv.jextract.glfw;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * union VkPerformanceValueDataINTEL {
 *     uint32_t value32;
 *     uint64_t value64;
 *     float valueFloat;
 *     VkBool32 valueBool;
 *     char* valueString;
 * };
 * }
 */
public class VkPerformanceValueDataINTEL {

    public static MemoryLayout $LAYOUT() {
        return constants$765.const$5;
    }
    public static VarHandle value32$VH() {
        return constants$766.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint32_t value32;
     * }
     */
    public static int value32$get(MemorySegment seg) {
        return (int)constants$766.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint32_t value32;
     * }
     */
    public static void value32$set(MemorySegment seg, int x) {
        constants$766.const$0.set(seg, x);
    }
    public static int value32$get(MemorySegment seg, long index) {
        return (int)constants$766.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void value32$set(MemorySegment seg, long index, int x) {
        constants$766.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle value64$VH() {
        return constants$766.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint64_t value64;
     * }
     */
    public static long value64$get(MemorySegment seg) {
        return (long)constants$766.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint64_t value64;
     * }
     */
    public static void value64$set(MemorySegment seg, long x) {
        constants$766.const$1.set(seg, x);
    }
    public static long value64$get(MemorySegment seg, long index) {
        return (long)constants$766.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void value64$set(MemorySegment seg, long index, long x) {
        constants$766.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle valueFloat$VH() {
        return constants$766.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * float valueFloat;
     * }
     */
    public static float valueFloat$get(MemorySegment seg) {
        return (float)constants$766.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * float valueFloat;
     * }
     */
    public static void valueFloat$set(MemorySegment seg, float x) {
        constants$766.const$2.set(seg, x);
    }
    public static float valueFloat$get(MemorySegment seg, long index) {
        return (float)constants$766.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void valueFloat$set(MemorySegment seg, long index, float x) {
        constants$766.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle valueBool$VH() {
        return constants$766.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * VkBool32 valueBool;
     * }
     */
    public static int valueBool$get(MemorySegment seg) {
        return (int)constants$766.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * VkBool32 valueBool;
     * }
     */
    public static void valueBool$set(MemorySegment seg, int x) {
        constants$766.const$3.set(seg, x);
    }
    public static int valueBool$get(MemorySegment seg, long index) {
        return (int)constants$766.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void valueBool$set(MemorySegment seg, long index, int x) {
        constants$766.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle valueString$VH() {
        return constants$766.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * char* valueString;
     * }
     */
    public static MemorySegment valueString$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$766.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * char* valueString;
     * }
     */
    public static void valueString$set(MemorySegment seg, MemorySegment x) {
        constants$766.const$4.set(seg, x);
    }
    public static MemorySegment valueString$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$766.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void valueString$set(MemorySegment seg, long index, MemorySegment x) {
        constants$766.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


