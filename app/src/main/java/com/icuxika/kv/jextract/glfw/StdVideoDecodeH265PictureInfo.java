// Generated by jextract

package com.icuxika.kv.jextract.glfw;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct StdVideoDecodeH265PictureInfo {
 *     StdVideoDecodeH265PictureInfoFlags flags;
 *     uint8_t sps_video_parameter_set_id;
 *     uint8_t pps_seq_parameter_set_id;
 *     uint8_t pps_pic_parameter_set_id;
 *     uint8_t NumDeltaPocsOfRefRpsIdx;
 *     int32_t PicOrderCntVal;
 *     uint16_t NumBitsForSTRefPicSetInSlice;
 *     uint16_t reserved;
 *     uint8_t RefPicSetStCurrBefore[8];
 *     uint8_t RefPicSetStCurrAfter[8];
 *     uint8_t RefPicSetLtCurr[8];
 * };
 * }
 */
public class StdVideoDecodeH265PictureInfo {

    public static MemoryLayout $LAYOUT() {
        return constants$564.const$1;
    }
    public static MemorySegment flags$slice(MemorySegment seg) {
        return seg.asSlice(0, 4);
    }
    public static VarHandle sps_video_parameter_set_id$VH() {
        return constants$564.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint8_t sps_video_parameter_set_id;
     * }
     */
    public static byte sps_video_parameter_set_id$get(MemorySegment seg) {
        return (byte)constants$564.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint8_t sps_video_parameter_set_id;
     * }
     */
    public static void sps_video_parameter_set_id$set(MemorySegment seg, byte x) {
        constants$564.const$2.set(seg, x);
    }
    public static byte sps_video_parameter_set_id$get(MemorySegment seg, long index) {
        return (byte)constants$564.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void sps_video_parameter_set_id$set(MemorySegment seg, long index, byte x) {
        constants$564.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pps_seq_parameter_set_id$VH() {
        return constants$564.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint8_t pps_seq_parameter_set_id;
     * }
     */
    public static byte pps_seq_parameter_set_id$get(MemorySegment seg) {
        return (byte)constants$564.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint8_t pps_seq_parameter_set_id;
     * }
     */
    public static void pps_seq_parameter_set_id$set(MemorySegment seg, byte x) {
        constants$564.const$3.set(seg, x);
    }
    public static byte pps_seq_parameter_set_id$get(MemorySegment seg, long index) {
        return (byte)constants$564.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void pps_seq_parameter_set_id$set(MemorySegment seg, long index, byte x) {
        constants$564.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pps_pic_parameter_set_id$VH() {
        return constants$564.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint8_t pps_pic_parameter_set_id;
     * }
     */
    public static byte pps_pic_parameter_set_id$get(MemorySegment seg) {
        return (byte)constants$564.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint8_t pps_pic_parameter_set_id;
     * }
     */
    public static void pps_pic_parameter_set_id$set(MemorySegment seg, byte x) {
        constants$564.const$4.set(seg, x);
    }
    public static byte pps_pic_parameter_set_id$get(MemorySegment seg, long index) {
        return (byte)constants$564.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void pps_pic_parameter_set_id$set(MemorySegment seg, long index, byte x) {
        constants$564.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle NumDeltaPocsOfRefRpsIdx$VH() {
        return constants$564.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint8_t NumDeltaPocsOfRefRpsIdx;
     * }
     */
    public static byte NumDeltaPocsOfRefRpsIdx$get(MemorySegment seg) {
        return (byte)constants$564.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint8_t NumDeltaPocsOfRefRpsIdx;
     * }
     */
    public static void NumDeltaPocsOfRefRpsIdx$set(MemorySegment seg, byte x) {
        constants$564.const$5.set(seg, x);
    }
    public static byte NumDeltaPocsOfRefRpsIdx$get(MemorySegment seg, long index) {
        return (byte)constants$564.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void NumDeltaPocsOfRefRpsIdx$set(MemorySegment seg, long index, byte x) {
        constants$564.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle PicOrderCntVal$VH() {
        return constants$565.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int32_t PicOrderCntVal;
     * }
     */
    public static int PicOrderCntVal$get(MemorySegment seg) {
        return (int)constants$565.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int32_t PicOrderCntVal;
     * }
     */
    public static void PicOrderCntVal$set(MemorySegment seg, int x) {
        constants$565.const$0.set(seg, x);
    }
    public static int PicOrderCntVal$get(MemorySegment seg, long index) {
        return (int)constants$565.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void PicOrderCntVal$set(MemorySegment seg, long index, int x) {
        constants$565.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle NumBitsForSTRefPicSetInSlice$VH() {
        return constants$565.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint16_t NumBitsForSTRefPicSetInSlice;
     * }
     */
    public static short NumBitsForSTRefPicSetInSlice$get(MemorySegment seg) {
        return (short)constants$565.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint16_t NumBitsForSTRefPicSetInSlice;
     * }
     */
    public static void NumBitsForSTRefPicSetInSlice$set(MemorySegment seg, short x) {
        constants$565.const$1.set(seg, x);
    }
    public static short NumBitsForSTRefPicSetInSlice$get(MemorySegment seg, long index) {
        return (short)constants$565.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void NumBitsForSTRefPicSetInSlice$set(MemorySegment seg, long index, short x) {
        constants$565.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle reserved$VH() {
        return constants$565.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint16_t reserved;
     * }
     */
    public static short reserved$get(MemorySegment seg) {
        return (short)constants$565.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint16_t reserved;
     * }
     */
    public static void reserved$set(MemorySegment seg, short x) {
        constants$565.const$2.set(seg, x);
    }
    public static short reserved$get(MemorySegment seg, long index) {
        return (short)constants$565.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void reserved$set(MemorySegment seg, long index, short x) {
        constants$565.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment RefPicSetStCurrBefore$slice(MemorySegment seg) {
        return seg.asSlice(16, 8);
    }
    public static MemorySegment RefPicSetStCurrAfter$slice(MemorySegment seg) {
        return seg.asSlice(24, 8);
    }
    public static MemorySegment RefPicSetLtCurr$slice(MemorySegment seg) {
        return seg.asSlice(32, 8);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


