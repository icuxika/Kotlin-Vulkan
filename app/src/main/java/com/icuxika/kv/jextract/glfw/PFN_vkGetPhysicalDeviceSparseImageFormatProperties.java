// Generated by jextract

package com.icuxika.kv.jextract.glfw;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * void (*PFN_vkGetPhysicalDeviceSparseImageFormatProperties)(struct VkPhysicalDevice_T* physicalDevice,enum VkFormat format,enum VkImageType type,enum VkSampleCountFlagBits samples,unsigned int usage,enum VkImageTiling tiling,unsigned int* pPropertyCount,struct VkSparseImageFormatProperties* pProperties);
 * }
 */
public interface PFN_vkGetPhysicalDeviceSparseImageFormatProperties {

    void apply(java.lang.foreign.MemorySegment physicalDevice, int format, int type, int samples, int usage, int tiling, java.lang.foreign.MemorySegment pPropertyCount, java.lang.foreign.MemorySegment pProperties);
    static MemorySegment allocate(PFN_vkGetPhysicalDeviceSparseImageFormatProperties fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$150.const$1, fi, constants$150.const$0, scope);
    }
    static PFN_vkGetPhysicalDeviceSparseImageFormatProperties ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (java.lang.foreign.MemorySegment _physicalDevice, int _format, int _type, int _samples, int _usage, int _tiling, java.lang.foreign.MemorySegment _pPropertyCount, java.lang.foreign.MemorySegment _pProperties) -> {
            try {
                constants$150.const$2.invokeExact(symbol, _physicalDevice, _format, _type, _samples, _usage, _tiling, _pPropertyCount, _pProperties);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


