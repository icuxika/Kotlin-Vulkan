// Generated by jextract

package com.icuxika.kv.jextract.glfw;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * enum VkResult (*PFN_vkAcquireNextImageKHR)(struct VkDevice_T* device,struct VkSwapchainKHR_T* swapchain,unsigned long long timeout,struct VkSemaphore_T* semaphore,struct VkFence_T* fence,unsigned int* pImageIndex);
 * }
 */
public interface PFN_vkAcquireNextImageKHR {

    int apply(java.lang.foreign.MemorySegment device, java.lang.foreign.MemorySegment swapchain, long timeout, java.lang.foreign.MemorySegment semaphore, java.lang.foreign.MemorySegment fence, java.lang.foreign.MemorySegment pImageIndex);
    static MemorySegment allocate(PFN_vkAcquireNextImageKHR fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$442.const$0, fi, constants$441.const$5, scope);
    }
    static PFN_vkAcquireNextImageKHR ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (java.lang.foreign.MemorySegment _device, java.lang.foreign.MemorySegment _swapchain, long _timeout, java.lang.foreign.MemorySegment _semaphore, java.lang.foreign.MemorySegment _fence, java.lang.foreign.MemorySegment _pImageIndex) -> {
            try {
                return (int)constants$442.const$1.invokeExact(symbol, _device, _swapchain, _timeout, _semaphore, _fence, _pImageIndex);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


