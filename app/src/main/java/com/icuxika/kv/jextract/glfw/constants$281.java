// Generated by jextract

package com.icuxika.kv.jextract.glfw;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$281 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$281() {}
    static final StructLayout const$0 = MemoryLayout.structLayout(
        JAVA_BYTE.withName("major"),
        JAVA_BYTE.withName("minor"),
        JAVA_BYTE.withName("subminor"),
        JAVA_BYTE.withName("patch")
    ).withName("VkConformanceVersion");
    static final VarHandle const$1 = constants$281.const$0.varHandle(MemoryLayout.PathElement.groupElement("major"));
    static final VarHandle const$2 = constants$281.const$0.varHandle(MemoryLayout.PathElement.groupElement("minor"));
    static final VarHandle const$3 = constants$281.const$0.varHandle(MemoryLayout.PathElement.groupElement("subminor"));
    static final VarHandle const$4 = constants$281.const$0.varHandle(MemoryLayout.PathElement.groupElement("patch"));
    static final StructLayout const$5 = MemoryLayout.structLayout(
        JAVA_INT.withName("sType"),
        MemoryLayout.paddingLayout(4),
        RuntimeHelper.POINTER.withName("pNext"),
        JAVA_INT.withName("driverID"),
        MemoryLayout.sequenceLayout(256, JAVA_BYTE).withName("driverName"),
        MemoryLayout.sequenceLayout(256, JAVA_BYTE).withName("driverInfo"),
        MemoryLayout.structLayout(
            JAVA_BYTE.withName("major"),
            JAVA_BYTE.withName("minor"),
            JAVA_BYTE.withName("subminor"),
            JAVA_BYTE.withName("patch")
        ).withName("conformanceVersion"),
        JAVA_INT.withName("denormBehaviorIndependence"),
        JAVA_INT.withName("roundingModeIndependence"),
        JAVA_INT.withName("shaderSignedZeroInfNanPreserveFloat16"),
        JAVA_INT.withName("shaderSignedZeroInfNanPreserveFloat32"),
        JAVA_INT.withName("shaderSignedZeroInfNanPreserveFloat64"),
        JAVA_INT.withName("shaderDenormPreserveFloat16"),
        JAVA_INT.withName("shaderDenormPreserveFloat32"),
        JAVA_INT.withName("shaderDenormPreserveFloat64"),
        JAVA_INT.withName("shaderDenormFlushToZeroFloat16"),
        JAVA_INT.withName("shaderDenormFlushToZeroFloat32"),
        JAVA_INT.withName("shaderDenormFlushToZeroFloat64"),
        JAVA_INT.withName("shaderRoundingModeRTEFloat16"),
        JAVA_INT.withName("shaderRoundingModeRTEFloat32"),
        JAVA_INT.withName("shaderRoundingModeRTEFloat64"),
        JAVA_INT.withName("shaderRoundingModeRTZFloat16"),
        JAVA_INT.withName("shaderRoundingModeRTZFloat32"),
        JAVA_INT.withName("shaderRoundingModeRTZFloat64"),
        JAVA_INT.withName("maxUpdateAfterBindDescriptorsInAllPools"),
        JAVA_INT.withName("shaderUniformBufferArrayNonUniformIndexingNative"),
        JAVA_INT.withName("shaderSampledImageArrayNonUniformIndexingNative"),
        JAVA_INT.withName("shaderStorageBufferArrayNonUniformIndexingNative"),
        JAVA_INT.withName("shaderStorageImageArrayNonUniformIndexingNative"),
        JAVA_INT.withName("shaderInputAttachmentArrayNonUniformIndexingNative"),
        JAVA_INT.withName("robustBufferAccessUpdateAfterBind"),
        JAVA_INT.withName("quadDivergentImplicitLod"),
        JAVA_INT.withName("maxPerStageDescriptorUpdateAfterBindSamplers"),
        JAVA_INT.withName("maxPerStageDescriptorUpdateAfterBindUniformBuffers"),
        JAVA_INT.withName("maxPerStageDescriptorUpdateAfterBindStorageBuffers"),
        JAVA_INT.withName("maxPerStageDescriptorUpdateAfterBindSampledImages"),
        JAVA_INT.withName("maxPerStageDescriptorUpdateAfterBindStorageImages"),
        JAVA_INT.withName("maxPerStageDescriptorUpdateAfterBindInputAttachments"),
        JAVA_INT.withName("maxPerStageUpdateAfterBindResources"),
        JAVA_INT.withName("maxDescriptorSetUpdateAfterBindSamplers"),
        JAVA_INT.withName("maxDescriptorSetUpdateAfterBindUniformBuffers"),
        JAVA_INT.withName("maxDescriptorSetUpdateAfterBindUniformBuffersDynamic"),
        JAVA_INT.withName("maxDescriptorSetUpdateAfterBindStorageBuffers"),
        JAVA_INT.withName("maxDescriptorSetUpdateAfterBindStorageBuffersDynamic"),
        JAVA_INT.withName("maxDescriptorSetUpdateAfterBindSampledImages"),
        JAVA_INT.withName("maxDescriptorSetUpdateAfterBindStorageImages"),
        JAVA_INT.withName("maxDescriptorSetUpdateAfterBindInputAttachments"),
        JAVA_INT.withName("supportedDepthResolveModes"),
        JAVA_INT.withName("supportedStencilResolveModes"),
        JAVA_INT.withName("independentResolveNone"),
        JAVA_INT.withName("independentResolve"),
        JAVA_INT.withName("filterMinmaxSingleComponentFormats"),
        JAVA_INT.withName("filterMinmaxImageComponentMapping"),
        JAVA_LONG.withName("maxTimelineSemaphoreValueDifference"),
        JAVA_INT.withName("framebufferIntegerColorSampleCounts"),
        MemoryLayout.paddingLayout(4)
    ).withName("VkPhysicalDeviceVulkan12Properties");
}


