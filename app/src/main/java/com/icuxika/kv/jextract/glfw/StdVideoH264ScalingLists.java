// Generated by jextract

package com.icuxika.kv.jextract.glfw;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct StdVideoH264ScalingLists {
 *     uint16_t scaling_list_present_mask;
 *     uint16_t use_default_scaling_matrix_mask;
 *     uint8_t  ScalingList4x4[6][16];
 *     uint8_t  ScalingList8x8[6][64];
 * };
 * }
 */
public class StdVideoH264ScalingLists {

    public static MemoryLayout $LAYOUT() {
        return constants$481.const$4;
    }
    public static VarHandle scaling_list_present_mask$VH() {
        return constants$481.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint16_t scaling_list_present_mask;
     * }
     */
    public static short scaling_list_present_mask$get(MemorySegment seg) {
        return (short)constants$481.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint16_t scaling_list_present_mask;
     * }
     */
    public static void scaling_list_present_mask$set(MemorySegment seg, short x) {
        constants$481.const$5.set(seg, x);
    }
    public static short scaling_list_present_mask$get(MemorySegment seg, long index) {
        return (short)constants$481.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void scaling_list_present_mask$set(MemorySegment seg, long index, short x) {
        constants$481.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle use_default_scaling_matrix_mask$VH() {
        return constants$482.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint16_t use_default_scaling_matrix_mask;
     * }
     */
    public static short use_default_scaling_matrix_mask$get(MemorySegment seg) {
        return (short)constants$482.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint16_t use_default_scaling_matrix_mask;
     * }
     */
    public static void use_default_scaling_matrix_mask$set(MemorySegment seg, short x) {
        constants$482.const$0.set(seg, x);
    }
    public static short use_default_scaling_matrix_mask$get(MemorySegment seg, long index) {
        return (short)constants$482.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void use_default_scaling_matrix_mask$set(MemorySegment seg, long index, short x) {
        constants$482.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment ScalingList4x4$slice(MemorySegment seg) {
        return seg.asSlice(4, 96);
    }
    public static MemorySegment ScalingList8x8$slice(MemorySegment seg) {
        return seg.asSlice(100, 384);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


