// Generated by jextract

package com.icuxika.kv.jextract.glfw;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * void (*GLFWkeyfun)(struct GLFWwindow* window,int key,int scancode,int action,int mods);
 * }
 */
public interface GLFWkeyfun {

    void apply(java.lang.foreign.MemorySegment window, int key, int scancode, int action, int mods);
    static MemorySegment allocate(GLFWkeyfun fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$1153.const$3, fi, constants$167.const$3, scope);
    }
    static GLFWkeyfun ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (java.lang.foreign.MemorySegment _window, int _key, int _scancode, int _action, int _mods) -> {
            try {
                constants$167.const$5.invokeExact(symbol, _window, _key, _scancode, _action, _mods);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


