// Generated by jextract

package com.icuxika.kv.jextract.glfw;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$756 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$756() {}
    static final VarHandle const$0 = constants$755.const$3.varHandle(MemoryLayout.PathElement.groupElement("taskShader"));
    static final VarHandle const$1 = constants$755.const$3.varHandle(MemoryLayout.PathElement.groupElement("meshShader"));
    static final StructLayout const$2 = MemoryLayout.structLayout(
        JAVA_INT.withName("sType"),
        MemoryLayout.paddingLayout(4),
        RuntimeHelper.POINTER.withName("pNext"),
        JAVA_INT.withName("maxDrawMeshTasksCount"),
        JAVA_INT.withName("maxTaskWorkGroupInvocations"),
        MemoryLayout.sequenceLayout(3, JAVA_INT).withName("maxTaskWorkGroupSize"),
        JAVA_INT.withName("maxTaskTotalMemorySize"),
        JAVA_INT.withName("maxTaskOutputCount"),
        JAVA_INT.withName("maxMeshWorkGroupInvocations"),
        MemoryLayout.sequenceLayout(3, JAVA_INT).withName("maxMeshWorkGroupSize"),
        JAVA_INT.withName("maxMeshTotalMemorySize"),
        JAVA_INT.withName("maxMeshOutputVertices"),
        JAVA_INT.withName("maxMeshOutputPrimitives"),
        JAVA_INT.withName("maxMeshMultiviewViewCount"),
        JAVA_INT.withName("meshOutputPerVertexGranularity"),
        JAVA_INT.withName("meshOutputPerPrimitiveGranularity"),
        MemoryLayout.paddingLayout(4)
    ).withName("VkPhysicalDeviceMeshShaderPropertiesNV");
    static final VarHandle const$3 = constants$756.const$2.varHandle(MemoryLayout.PathElement.groupElement("sType"));
    static final VarHandle const$4 = constants$756.const$2.varHandle(MemoryLayout.PathElement.groupElement("pNext"));
    static final VarHandle const$5 = constants$756.const$2.varHandle(MemoryLayout.PathElement.groupElement("maxDrawMeshTasksCount"));
}


