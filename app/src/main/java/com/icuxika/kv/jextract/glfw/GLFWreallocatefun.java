// Generated by jextract

package com.icuxika.kv.jextract.glfw;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * void* (*GLFWreallocatefun)(void* block,unsigned long long size,void* user);
 * }
 */
public interface GLFWreallocatefun {

    java.lang.foreign.MemorySegment apply(java.lang.foreign.MemorySegment block, long size, java.lang.foreign.MemorySegment user);
    static MemorySegment allocate(GLFWreallocatefun fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$1150.const$2, fi, constants$1150.const$1, scope);
    }
    static GLFWreallocatefun ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (java.lang.foreign.MemorySegment _block, long _size, java.lang.foreign.MemorySegment _user) -> {
            try {
                return (java.lang.foreign.MemorySegment)constants$1150.const$3.invokeExact(symbol, _block, _size, _user);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


