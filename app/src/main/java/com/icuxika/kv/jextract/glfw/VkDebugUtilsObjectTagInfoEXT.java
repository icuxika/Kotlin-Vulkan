// Generated by jextract

package com.icuxika.kv.jextract.glfw;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct VkDebugUtilsObjectTagInfoEXT {
 *     VkStructureType sType;
 *     void* pNext;
 *     VkObjectType objectType;
 *     uint64_t objectHandle;
 *     uint64_t tagName;
 *     size_t tagSize;
 *     void* pTag;
 * };
 * }
 */
public class VkDebugUtilsObjectTagInfoEXT {

    public static MemoryLayout $LAYOUT() {
        return constants$682.const$5;
    }
    public static VarHandle sType$VH() {
        return constants$683.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * VkStructureType sType;
     * }
     */
    public static int sType$get(MemorySegment seg) {
        return (int)constants$683.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * VkStructureType sType;
     * }
     */
    public static void sType$set(MemorySegment seg, int x) {
        constants$683.const$0.set(seg, x);
    }
    public static int sType$get(MemorySegment seg, long index) {
        return (int)constants$683.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void sType$set(MemorySegment seg, long index, int x) {
        constants$683.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pNext$VH() {
        return constants$683.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * void* pNext;
     * }
     */
    public static MemorySegment pNext$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$683.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * void* pNext;
     * }
     */
    public static void pNext$set(MemorySegment seg, MemorySegment x) {
        constants$683.const$1.set(seg, x);
    }
    public static MemorySegment pNext$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$683.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void pNext$set(MemorySegment seg, long index, MemorySegment x) {
        constants$683.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle objectType$VH() {
        return constants$683.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * VkObjectType objectType;
     * }
     */
    public static int objectType$get(MemorySegment seg) {
        return (int)constants$683.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * VkObjectType objectType;
     * }
     */
    public static void objectType$set(MemorySegment seg, int x) {
        constants$683.const$2.set(seg, x);
    }
    public static int objectType$get(MemorySegment seg, long index) {
        return (int)constants$683.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void objectType$set(MemorySegment seg, long index, int x) {
        constants$683.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle objectHandle$VH() {
        return constants$683.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint64_t objectHandle;
     * }
     */
    public static long objectHandle$get(MemorySegment seg) {
        return (long)constants$683.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint64_t objectHandle;
     * }
     */
    public static void objectHandle$set(MemorySegment seg, long x) {
        constants$683.const$3.set(seg, x);
    }
    public static long objectHandle$get(MemorySegment seg, long index) {
        return (long)constants$683.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void objectHandle$set(MemorySegment seg, long index, long x) {
        constants$683.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle tagName$VH() {
        return constants$683.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint64_t tagName;
     * }
     */
    public static long tagName$get(MemorySegment seg) {
        return (long)constants$683.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint64_t tagName;
     * }
     */
    public static void tagName$set(MemorySegment seg, long x) {
        constants$683.const$4.set(seg, x);
    }
    public static long tagName$get(MemorySegment seg, long index) {
        return (long)constants$683.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void tagName$set(MemorySegment seg, long index, long x) {
        constants$683.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle tagSize$VH() {
        return constants$683.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * size_t tagSize;
     * }
     */
    public static long tagSize$get(MemorySegment seg) {
        return (long)constants$683.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * size_t tagSize;
     * }
     */
    public static void tagSize$set(MemorySegment seg, long x) {
        constants$683.const$5.set(seg, x);
    }
    public static long tagSize$get(MemorySegment seg, long index) {
        return (long)constants$683.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void tagSize$set(MemorySegment seg, long index, long x) {
        constants$683.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pTag$VH() {
        return constants$684.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * void* pTag;
     * }
     */
    public static MemorySegment pTag$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$684.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * void* pTag;
     * }
     */
    public static void pTag$set(MemorySegment seg, MemorySegment x) {
        constants$684.const$0.set(seg, x);
    }
    public static MemorySegment pTag$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$684.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void pTag$set(MemorySegment seg, long index, MemorySegment x) {
        constants$684.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


