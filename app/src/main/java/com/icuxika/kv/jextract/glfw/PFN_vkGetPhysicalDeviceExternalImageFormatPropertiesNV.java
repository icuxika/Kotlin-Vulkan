// Generated by jextract

package com.icuxika.kv.jextract.glfw;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * enum VkResult (*PFN_vkGetPhysicalDeviceExternalImageFormatPropertiesNV)(struct VkPhysicalDevice_T* physicalDevice,enum VkFormat format,enum VkImageType type,enum VkImageTiling tiling,unsigned int usage,unsigned int flags,unsigned int externalHandleType,struct VkExternalImageFormatPropertiesNV* pExternalImageFormatProperties);
 * }
 */
public interface PFN_vkGetPhysicalDeviceExternalImageFormatPropertiesNV {

    int apply(java.lang.foreign.MemorySegment physicalDevice, int format, int type, int tiling, int usage, int flags, int externalHandleType, java.lang.foreign.MemorySegment pExternalImageFormatProperties);
    static MemorySegment allocate(PFN_vkGetPhysicalDeviceExternalImageFormatPropertiesNV fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$643.const$3, fi, constants$643.const$2, scope);
    }
    static PFN_vkGetPhysicalDeviceExternalImageFormatPropertiesNV ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (java.lang.foreign.MemorySegment _physicalDevice, int _format, int _type, int _tiling, int _usage, int _flags, int _externalHandleType, java.lang.foreign.MemorySegment _pExternalImageFormatProperties) -> {
            try {
                return (int)constants$643.const$4.invokeExact(symbol, _physicalDevice, _format, _type, _tiling, _usage, _flags, _externalHandleType, _pExternalImageFormatProperties);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


