// Generated by jextract

package com.icuxika.kv.jextract.glfw;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * void (*PFNGLDRAWRANGEELEMENTSWINPROC)(unsigned int mode,unsigned int start,unsigned int end,int count,unsigned int type,void* indices);
 * }
 */
public interface PFNGLDRAWRANGEELEMENTSWINPROC {

    void apply(int mode, int start, int end, int count, int type, java.lang.foreign.MemorySegment indices);
    static MemorySegment allocate(PFNGLDRAWRANGEELEMENTSWINPROC fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$1147.const$5, fi, constants$1147.const$4, scope);
    }
    static PFNGLDRAWRANGEELEMENTSWINPROC ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (int _mode, int _start, int _end, int _count, int _type, java.lang.foreign.MemorySegment _indices) -> {
            try {
                constants$1148.const$0.invokeExact(symbol, _mode, _start, _end, _count, _type, _indices);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


