// Generated by jextract

package com.icuxika.kv.jextract.glfw;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct VkPhysicalDeviceRayTracingPropertiesNV {
 *     VkStructureType sType;
 *     void* pNext;
 *     uint32_t shaderGroupHandleSize;
 *     uint32_t maxRecursionDepth;
 *     uint32_t maxShaderGroupStride;
 *     uint32_t shaderGroupBaseAlignment;
 *     uint64_t maxGeometryCount;
 *     uint64_t maxInstanceCount;
 *     uint64_t maxTriangleCount;
 *     uint32_t maxDescriptorSetAccelerationStructures;
 * };
 * }
 */
public class VkPhysicalDeviceRayTracingPropertiesNV {

    public static MemoryLayout $LAYOUT() {
        return constants$730.const$3;
    }
    public static VarHandle sType$VH() {
        return constants$730.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * VkStructureType sType;
     * }
     */
    public static int sType$get(MemorySegment seg) {
        return (int)constants$730.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * VkStructureType sType;
     * }
     */
    public static void sType$set(MemorySegment seg, int x) {
        constants$730.const$4.set(seg, x);
    }
    public static int sType$get(MemorySegment seg, long index) {
        return (int)constants$730.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void sType$set(MemorySegment seg, long index, int x) {
        constants$730.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pNext$VH() {
        return constants$730.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * void* pNext;
     * }
     */
    public static MemorySegment pNext$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$730.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * void* pNext;
     * }
     */
    public static void pNext$set(MemorySegment seg, MemorySegment x) {
        constants$730.const$5.set(seg, x);
    }
    public static MemorySegment pNext$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$730.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void pNext$set(MemorySegment seg, long index, MemorySegment x) {
        constants$730.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle shaderGroupHandleSize$VH() {
        return constants$731.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint32_t shaderGroupHandleSize;
     * }
     */
    public static int shaderGroupHandleSize$get(MemorySegment seg) {
        return (int)constants$731.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint32_t shaderGroupHandleSize;
     * }
     */
    public static void shaderGroupHandleSize$set(MemorySegment seg, int x) {
        constants$731.const$0.set(seg, x);
    }
    public static int shaderGroupHandleSize$get(MemorySegment seg, long index) {
        return (int)constants$731.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void shaderGroupHandleSize$set(MemorySegment seg, long index, int x) {
        constants$731.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle maxRecursionDepth$VH() {
        return constants$731.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint32_t maxRecursionDepth;
     * }
     */
    public static int maxRecursionDepth$get(MemorySegment seg) {
        return (int)constants$731.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint32_t maxRecursionDepth;
     * }
     */
    public static void maxRecursionDepth$set(MemorySegment seg, int x) {
        constants$731.const$1.set(seg, x);
    }
    public static int maxRecursionDepth$get(MemorySegment seg, long index) {
        return (int)constants$731.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void maxRecursionDepth$set(MemorySegment seg, long index, int x) {
        constants$731.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle maxShaderGroupStride$VH() {
        return constants$731.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint32_t maxShaderGroupStride;
     * }
     */
    public static int maxShaderGroupStride$get(MemorySegment seg) {
        return (int)constants$731.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint32_t maxShaderGroupStride;
     * }
     */
    public static void maxShaderGroupStride$set(MemorySegment seg, int x) {
        constants$731.const$2.set(seg, x);
    }
    public static int maxShaderGroupStride$get(MemorySegment seg, long index) {
        return (int)constants$731.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void maxShaderGroupStride$set(MemorySegment seg, long index, int x) {
        constants$731.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle shaderGroupBaseAlignment$VH() {
        return constants$731.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint32_t shaderGroupBaseAlignment;
     * }
     */
    public static int shaderGroupBaseAlignment$get(MemorySegment seg) {
        return (int)constants$731.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint32_t shaderGroupBaseAlignment;
     * }
     */
    public static void shaderGroupBaseAlignment$set(MemorySegment seg, int x) {
        constants$731.const$3.set(seg, x);
    }
    public static int shaderGroupBaseAlignment$get(MemorySegment seg, long index) {
        return (int)constants$731.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void shaderGroupBaseAlignment$set(MemorySegment seg, long index, int x) {
        constants$731.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle maxGeometryCount$VH() {
        return constants$731.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint64_t maxGeometryCount;
     * }
     */
    public static long maxGeometryCount$get(MemorySegment seg) {
        return (long)constants$731.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint64_t maxGeometryCount;
     * }
     */
    public static void maxGeometryCount$set(MemorySegment seg, long x) {
        constants$731.const$4.set(seg, x);
    }
    public static long maxGeometryCount$get(MemorySegment seg, long index) {
        return (long)constants$731.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void maxGeometryCount$set(MemorySegment seg, long index, long x) {
        constants$731.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle maxInstanceCount$VH() {
        return constants$731.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint64_t maxInstanceCount;
     * }
     */
    public static long maxInstanceCount$get(MemorySegment seg) {
        return (long)constants$731.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint64_t maxInstanceCount;
     * }
     */
    public static void maxInstanceCount$set(MemorySegment seg, long x) {
        constants$731.const$5.set(seg, x);
    }
    public static long maxInstanceCount$get(MemorySegment seg, long index) {
        return (long)constants$731.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void maxInstanceCount$set(MemorySegment seg, long index, long x) {
        constants$731.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle maxTriangleCount$VH() {
        return constants$732.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint64_t maxTriangleCount;
     * }
     */
    public static long maxTriangleCount$get(MemorySegment seg) {
        return (long)constants$732.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint64_t maxTriangleCount;
     * }
     */
    public static void maxTriangleCount$set(MemorySegment seg, long x) {
        constants$732.const$0.set(seg, x);
    }
    public static long maxTriangleCount$get(MemorySegment seg, long index) {
        return (long)constants$732.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void maxTriangleCount$set(MemorySegment seg, long index, long x) {
        constants$732.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle maxDescriptorSetAccelerationStructures$VH() {
        return constants$732.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint32_t maxDescriptorSetAccelerationStructures;
     * }
     */
    public static int maxDescriptorSetAccelerationStructures$get(MemorySegment seg) {
        return (int)constants$732.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint32_t maxDescriptorSetAccelerationStructures;
     * }
     */
    public static void maxDescriptorSetAccelerationStructures$set(MemorySegment seg, int x) {
        constants$732.const$1.set(seg, x);
    }
    public static int maxDescriptorSetAccelerationStructures$get(MemorySegment seg, long index) {
        return (int)constants$732.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void maxDescriptorSetAccelerationStructures$set(MemorySegment seg, long index, int x) {
        constants$732.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


