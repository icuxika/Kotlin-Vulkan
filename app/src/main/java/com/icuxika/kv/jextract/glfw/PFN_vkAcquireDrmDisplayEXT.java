// Generated by jextract

package com.icuxika.kv.jextract.glfw;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * enum VkResult (*PFN_vkAcquireDrmDisplayEXT)(struct VkPhysicalDevice_T* physicalDevice,int drmFd,struct VkDisplayKHR_T* display);
 * }
 */
public interface PFN_vkAcquireDrmDisplayEXT {

    int apply(java.lang.foreign.MemorySegment physicalDevice, int drmFd, java.lang.foreign.MemorySegment display);
    static MemorySegment allocate(PFN_vkAcquireDrmDisplayEXT fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$846.const$5, fi, constants$147.const$4, scope);
    }
    static PFN_vkAcquireDrmDisplayEXT ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (java.lang.foreign.MemorySegment _physicalDevice, int _drmFd, java.lang.foreign.MemorySegment _display) -> {
            try {
                return (int)constants$148.const$0.invokeExact(symbol, _physicalDevice, _drmFd, _display);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


