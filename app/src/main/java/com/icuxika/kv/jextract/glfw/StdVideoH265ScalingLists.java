// Generated by jextract

package com.icuxika.kv.jextract.glfw;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct StdVideoH265ScalingLists {
 *     uint8_t  ScalingList4x4[6][16];
 *     uint8_t  ScalingList8x8[6][64];
 *     uint8_t  ScalingList16x16[6][64];
 *     uint8_t  ScalingList32x32[2][64];
 *     uint8_t ScalingListDCCoef16x16[6];
 *     uint8_t ScalingListDCCoef32x32[2];
 * };
 * }
 */
public class StdVideoH265ScalingLists {

    public static MemoryLayout $LAYOUT() {
        return constants$544.const$3;
    }
    public static MemorySegment ScalingList4x4$slice(MemorySegment seg) {
        return seg.asSlice(0, 96);
    }
    public static MemorySegment ScalingList8x8$slice(MemorySegment seg) {
        return seg.asSlice(96, 384);
    }
    public static MemorySegment ScalingList16x16$slice(MemorySegment seg) {
        return seg.asSlice(480, 384);
    }
    public static MemorySegment ScalingList32x32$slice(MemorySegment seg) {
        return seg.asSlice(864, 128);
    }
    public static MemorySegment ScalingListDCCoef16x16$slice(MemorySegment seg) {
        return seg.asSlice(992, 6);
    }
    public static MemorySegment ScalingListDCCoef32x32$slice(MemorySegment seg) {
        return seg.asSlice(998, 2);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


