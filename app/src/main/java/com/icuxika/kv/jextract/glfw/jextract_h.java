// Generated by jextract

package com.icuxika.kv.jextract.glfw;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class jextract_h extends jextract_h_6 {

    public static final OfByte C_CHAR = JAVA_BYTE;
    public static final OfShort C_SHORT = JAVA_SHORT;
    public static final OfInt C_INT = JAVA_INT;
    public static final OfInt C_LONG = JAVA_INT;
    public static final OfLong C_LONG_LONG = JAVA_LONG;
    public static final OfFloat C_FLOAT = JAVA_FLOAT;
    public static final OfDouble C_DOUBLE = JAVA_DOUBLE;
    public static final AddressLayout C_POINTER = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * #define VULKAN_H_ 1
     * }
     */
    public static int VULKAN_H_() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _VCRT_COMPILER_PREPROCESSOR 1
     * }
     */
    public static int _VCRT_COMPILER_PREPROCESSOR() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _SAL_VERSION 20
     * }
     */
    public static int _SAL_VERSION() {
        return (int)20L;
    }
    /**
     * {@snippet :
     * #define __SAL_H_VERSION 180000000
     * }
     */
    public static int __SAL_H_VERSION() {
        return (int)180000000L;
    }
    /**
     * {@snippet :
     * #define _USE_DECLSPECS_FOR_SAL 0
     * }
     */
    public static int _USE_DECLSPECS_FOR_SAL() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define _USE_ATTRIBUTES_FOR_SAL 0
     * }
     */
    public static int _USE_ATTRIBUTES_FOR_SAL() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define _CRT_PACKING 8
     * }
     */
    public static int _CRT_PACKING() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define _HAS_EXCEPTIONS 1
     * }
     */
    public static int _HAS_EXCEPTIONS() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _HAS_CXX17 0
     * }
     */
    public static int _HAS_CXX17() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define _HAS_CXX20 0
     * }
     */
    public static int _HAS_CXX20() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define _HAS_CXX23 0
     * }
     */
    public static int _HAS_CXX23() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define _HAS_NODISCARD 0
     * }
     */
    public static int _HAS_NODISCARD() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define WCHAR_MIN 0
     * }
     */
    public static int WCHAR_MIN() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define WCHAR_MAX 65535
     * }
     */
    public static int WCHAR_MAX() {
        return (int)65535L;
    }
    /**
     * {@snippet :
     * #define WINT_MIN 0
     * }
     */
    public static int WINT_MIN() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define WINT_MAX 65535
     * }
     */
    public static int WINT_MAX() {
        return (int)65535L;
    }
    /**
     * {@snippet :
     * #define VULKAN_CORE_H_ 1
     * }
     */
    public static int VULKAN_CORE_H_() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_VERSION_1_0 1
     * }
     */
    public static int VK_VERSION_1_0() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_USE_64_BIT_PTR_DEFINES 1
     * }
     */
    public static int VK_USE_64_BIT_PTR_DEFINES() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_HEADER_VERSION 250
     * }
     */
    public static int VK_HEADER_VERSION() {
        return (int)250L;
    }
    /**
     * {@snippet :
     * #define VK_VERSION_1_1 1
     * }
     */
    public static int VK_VERSION_1_1() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_VERSION_1_2 1
     * }
     */
    public static int VK_VERSION_1_2() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_VERSION_1_3 1
     * }
     */
    public static int VK_VERSION_1_3() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_surface 1
     * }
     */
    public static int VK_KHR_surface() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_SURFACE_SPEC_VERSION 25
     * }
     */
    public static int VK_KHR_SURFACE_SPEC_VERSION() {
        return (int)25L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_swapchain 1
     * }
     */
    public static int VK_KHR_swapchain() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_SWAPCHAIN_SPEC_VERSION 70
     * }
     */
    public static int VK_KHR_SWAPCHAIN_SPEC_VERSION() {
        return (int)70L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_display 1
     * }
     */
    public static int VK_KHR_display() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_DISPLAY_SPEC_VERSION 23
     * }
     */
    public static int VK_KHR_DISPLAY_SPEC_VERSION() {
        return (int)23L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_display_swapchain 1
     * }
     */
    public static int VK_KHR_display_swapchain() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_DISPLAY_SWAPCHAIN_SPEC_VERSION 10
     * }
     */
    public static int VK_KHR_DISPLAY_SWAPCHAIN_SPEC_VERSION() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_sampler_mirror_clamp_to_edge 1
     * }
     */
    public static int VK_KHR_sampler_mirror_clamp_to_edge() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_SAMPLER_MIRROR_CLAMP_TO_EDGE_SPEC_VERSION 3
     * }
     */
    public static int VK_KHR_SAMPLER_MIRROR_CLAMP_TO_EDGE_SPEC_VERSION() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_video_queue 1
     * }
     */
    public static int VK_KHR_video_queue() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_VIDEO_QUEUE_SPEC_VERSION 8
     * }
     */
    public static int VK_KHR_VIDEO_QUEUE_SPEC_VERSION() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_video_decode_queue 1
     * }
     */
    public static int VK_KHR_video_decode_queue() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_VIDEO_DECODE_QUEUE_SPEC_VERSION 7
     * }
     */
    public static int VK_KHR_VIDEO_DECODE_QUEUE_SPEC_VERSION() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_video_decode_h264 1
     * }
     */
    public static int VK_KHR_video_decode_h264() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VULKAN_VIDEO_CODEC_H264STD_H_ 1
     * }
     */
    public static int VULKAN_VIDEO_CODEC_H264STD_H_() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define vulkan_video_codec_h264std 1
     * }
     */
    public static int vulkan_video_codec_h264std() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define STD_VIDEO_H264_CPB_CNT_LIST_SIZE 32
     * }
     */
    public static int STD_VIDEO_H264_CPB_CNT_LIST_SIZE() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * #define STD_VIDEO_H264_SCALING_LIST_4X4_NUM_LISTS 6
     * }
     */
    public static int STD_VIDEO_H264_SCALING_LIST_4X4_NUM_LISTS() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * #define STD_VIDEO_H264_SCALING_LIST_4X4_NUM_ELEMENTS 16
     * }
     */
    public static int STD_VIDEO_H264_SCALING_LIST_4X4_NUM_ELEMENTS() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define STD_VIDEO_H264_SCALING_LIST_8X8_NUM_LISTS 6
     * }
     */
    public static int STD_VIDEO_H264_SCALING_LIST_8X8_NUM_LISTS() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * #define STD_VIDEO_H264_SCALING_LIST_8X8_NUM_ELEMENTS 64
     * }
     */
    public static int STD_VIDEO_H264_SCALING_LIST_8X8_NUM_ELEMENTS() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * #define STD_VIDEO_H264_MAX_NUM_LIST_REF 32
     * }
     */
    public static int STD_VIDEO_H264_MAX_NUM_LIST_REF() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * #define STD_VIDEO_H264_MAX_CHROMA_PLANES 2
     * }
     */
    public static int STD_VIDEO_H264_MAX_CHROMA_PLANES() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define VULKAN_VIDEO_CODEC_H264STD_DECODE_H_ 1
     * }
     */
    public static int VULKAN_VIDEO_CODEC_H264STD_DECODE_H_() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define vulkan_video_codec_h264std_decode 1
     * }
     */
    public static int vulkan_video_codec_h264std_decode() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define STD_VIDEO_DECODE_H264_FIELD_ORDER_COUNT_LIST_SIZE 2
     * }
     */
    public static int STD_VIDEO_DECODE_H264_FIELD_ORDER_COUNT_LIST_SIZE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_VIDEO_DECODE_H264_SPEC_VERSION 8
     * }
     */
    public static int VK_KHR_VIDEO_DECODE_H264_SPEC_VERSION() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_dynamic_rendering 1
     * }
     */
    public static int VK_KHR_dynamic_rendering() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_DYNAMIC_RENDERING_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_DYNAMIC_RENDERING_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_multiview 1
     * }
     */
    public static int VK_KHR_multiview() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_MULTIVIEW_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_MULTIVIEW_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_get_physical_device_properties2 1
     * }
     */
    public static int VK_KHR_get_physical_device_properties2() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_GET_PHYSICAL_DEVICE_PROPERTIES_2_SPEC_VERSION 2
     * }
     */
    public static int VK_KHR_GET_PHYSICAL_DEVICE_PROPERTIES_2_SPEC_VERSION() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_device_group 1
     * }
     */
    public static int VK_KHR_device_group() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_DEVICE_GROUP_SPEC_VERSION 4
     * }
     */
    public static int VK_KHR_DEVICE_GROUP_SPEC_VERSION() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_shader_draw_parameters 1
     * }
     */
    public static int VK_KHR_shader_draw_parameters() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_SHADER_DRAW_PARAMETERS_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_SHADER_DRAW_PARAMETERS_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_maintenance1 1
     * }
     */
    public static int VK_KHR_maintenance1() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_MAINTENANCE_1_SPEC_VERSION 2
     * }
     */
    public static int VK_KHR_MAINTENANCE_1_SPEC_VERSION() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_device_group_creation 1
     * }
     */
    public static int VK_KHR_device_group_creation() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_DEVICE_GROUP_CREATION_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_DEVICE_GROUP_CREATION_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_external_memory_capabilities 1
     * }
     */
    public static int VK_KHR_external_memory_capabilities() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_EXTERNAL_MEMORY_CAPABILITIES_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_EXTERNAL_MEMORY_CAPABILITIES_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_external_memory 1
     * }
     */
    public static int VK_KHR_external_memory() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_EXTERNAL_MEMORY_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_EXTERNAL_MEMORY_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_external_memory_fd 1
     * }
     */
    public static int VK_KHR_external_memory_fd() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_EXTERNAL_MEMORY_FD_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_EXTERNAL_MEMORY_FD_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_external_semaphore_capabilities 1
     * }
     */
    public static int VK_KHR_external_semaphore_capabilities() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_EXTERNAL_SEMAPHORE_CAPABILITIES_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_EXTERNAL_SEMAPHORE_CAPABILITIES_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_external_semaphore 1
     * }
     */
    public static int VK_KHR_external_semaphore() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_EXTERNAL_SEMAPHORE_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_EXTERNAL_SEMAPHORE_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_external_semaphore_fd 1
     * }
     */
    public static int VK_KHR_external_semaphore_fd() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_EXTERNAL_SEMAPHORE_FD_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_EXTERNAL_SEMAPHORE_FD_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_push_descriptor 1
     * }
     */
    public static int VK_KHR_push_descriptor() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_PUSH_DESCRIPTOR_SPEC_VERSION 2
     * }
     */
    public static int VK_KHR_PUSH_DESCRIPTOR_SPEC_VERSION() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_shader_float16_int8 1
     * }
     */
    public static int VK_KHR_shader_float16_int8() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_SHADER_FLOAT16_INT8_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_SHADER_FLOAT16_INT8_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_16bit_storage 1
     * }
     */
    public static int VK_KHR_16bit_storage() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_16BIT_STORAGE_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_16BIT_STORAGE_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_incremental_present 1
     * }
     */
    public static int VK_KHR_incremental_present() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_INCREMENTAL_PRESENT_SPEC_VERSION 2
     * }
     */
    public static int VK_KHR_INCREMENTAL_PRESENT_SPEC_VERSION() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_descriptor_update_template 1
     * }
     */
    public static int VK_KHR_descriptor_update_template() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_DESCRIPTOR_UPDATE_TEMPLATE_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_DESCRIPTOR_UPDATE_TEMPLATE_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_imageless_framebuffer 1
     * }
     */
    public static int VK_KHR_imageless_framebuffer() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_IMAGELESS_FRAMEBUFFER_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_IMAGELESS_FRAMEBUFFER_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_create_renderpass2 1
     * }
     */
    public static int VK_KHR_create_renderpass2() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_CREATE_RENDERPASS_2_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_CREATE_RENDERPASS_2_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_shared_presentable_image 1
     * }
     */
    public static int VK_KHR_shared_presentable_image() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_SHARED_PRESENTABLE_IMAGE_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_SHARED_PRESENTABLE_IMAGE_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_external_fence_capabilities 1
     * }
     */
    public static int VK_KHR_external_fence_capabilities() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_EXTERNAL_FENCE_CAPABILITIES_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_EXTERNAL_FENCE_CAPABILITIES_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_external_fence 1
     * }
     */
    public static int VK_KHR_external_fence() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_EXTERNAL_FENCE_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_EXTERNAL_FENCE_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_external_fence_fd 1
     * }
     */
    public static int VK_KHR_external_fence_fd() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_EXTERNAL_FENCE_FD_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_EXTERNAL_FENCE_FD_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_performance_query 1
     * }
     */
    public static int VK_KHR_performance_query() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_PERFORMANCE_QUERY_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_PERFORMANCE_QUERY_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_maintenance2 1
     * }
     */
    public static int VK_KHR_maintenance2() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_MAINTENANCE_2_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_MAINTENANCE_2_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_get_surface_capabilities2 1
     * }
     */
    public static int VK_KHR_get_surface_capabilities2() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_GET_SURFACE_CAPABILITIES_2_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_GET_SURFACE_CAPABILITIES_2_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_variable_pointers 1
     * }
     */
    public static int VK_KHR_variable_pointers() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_VARIABLE_POINTERS_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_VARIABLE_POINTERS_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_get_display_properties2 1
     * }
     */
    public static int VK_KHR_get_display_properties2() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_GET_DISPLAY_PROPERTIES_2_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_GET_DISPLAY_PROPERTIES_2_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_dedicated_allocation 1
     * }
     */
    public static int VK_KHR_dedicated_allocation() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_DEDICATED_ALLOCATION_SPEC_VERSION 3
     * }
     */
    public static int VK_KHR_DEDICATED_ALLOCATION_SPEC_VERSION() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_storage_buffer_storage_class 1
     * }
     */
    public static int VK_KHR_storage_buffer_storage_class() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_STORAGE_BUFFER_STORAGE_CLASS_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_STORAGE_BUFFER_STORAGE_CLASS_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_relaxed_block_layout 1
     * }
     */
    public static int VK_KHR_relaxed_block_layout() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_RELAXED_BLOCK_LAYOUT_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_RELAXED_BLOCK_LAYOUT_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_get_memory_requirements2 1
     * }
     */
    public static int VK_KHR_get_memory_requirements2() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_GET_MEMORY_REQUIREMENTS_2_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_GET_MEMORY_REQUIREMENTS_2_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_image_format_list 1
     * }
     */
    public static int VK_KHR_image_format_list() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_IMAGE_FORMAT_LIST_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_IMAGE_FORMAT_LIST_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_sampler_ycbcr_conversion 1
     * }
     */
    public static int VK_KHR_sampler_ycbcr_conversion() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_SAMPLER_YCBCR_CONVERSION_SPEC_VERSION 14
     * }
     */
    public static int VK_KHR_SAMPLER_YCBCR_CONVERSION_SPEC_VERSION() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_bind_memory2 1
     * }
     */
    public static int VK_KHR_bind_memory2() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_BIND_MEMORY_2_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_BIND_MEMORY_2_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_maintenance3 1
     * }
     */
    public static int VK_KHR_maintenance3() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_MAINTENANCE_3_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_MAINTENANCE_3_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_draw_indirect_count 1
     * }
     */
    public static int VK_KHR_draw_indirect_count() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_DRAW_INDIRECT_COUNT_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_DRAW_INDIRECT_COUNT_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_shader_subgroup_extended_types 1
     * }
     */
    public static int VK_KHR_shader_subgroup_extended_types() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_SHADER_SUBGROUP_EXTENDED_TYPES_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_SHADER_SUBGROUP_EXTENDED_TYPES_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_8bit_storage 1
     * }
     */
    public static int VK_KHR_8bit_storage() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_8BIT_STORAGE_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_8BIT_STORAGE_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_shader_atomic_int64 1
     * }
     */
    public static int VK_KHR_shader_atomic_int64() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_SHADER_ATOMIC_INT64_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_SHADER_ATOMIC_INT64_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_shader_clock 1
     * }
     */
    public static int VK_KHR_shader_clock() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_SHADER_CLOCK_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_SHADER_CLOCK_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_video_decode_h265 1
     * }
     */
    public static int VK_KHR_video_decode_h265() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VULKAN_VIDEO_CODEC_H265STD_H_ 1
     * }
     */
    public static int VULKAN_VIDEO_CODEC_H265STD_H_() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define vulkan_video_codec_h265std 1
     * }
     */
    public static int vulkan_video_codec_h265std() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define STD_VIDEO_H265_SUBLAYERS_LIST_SIZE 7
     * }
     */
    public static int STD_VIDEO_H265_SUBLAYERS_LIST_SIZE() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * #define STD_VIDEO_H265_CPB_CNT_LIST_SIZE 32
     * }
     */
    public static int STD_VIDEO_H265_CPB_CNT_LIST_SIZE() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * #define STD_VIDEO_H265_SCALING_LIST_4X4_NUM_LISTS 6
     * }
     */
    public static int STD_VIDEO_H265_SCALING_LIST_4X4_NUM_LISTS() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * #define STD_VIDEO_H265_SCALING_LIST_4X4_NUM_ELEMENTS 16
     * }
     */
    public static int STD_VIDEO_H265_SCALING_LIST_4X4_NUM_ELEMENTS() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define STD_VIDEO_H265_SCALING_LIST_8X8_NUM_LISTS 6
     * }
     */
    public static int STD_VIDEO_H265_SCALING_LIST_8X8_NUM_LISTS() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * #define STD_VIDEO_H265_SCALING_LIST_8X8_NUM_ELEMENTS 64
     * }
     */
    public static int STD_VIDEO_H265_SCALING_LIST_8X8_NUM_ELEMENTS() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * #define STD_VIDEO_H265_SCALING_LIST_16X16_NUM_LISTS 6
     * }
     */
    public static int STD_VIDEO_H265_SCALING_LIST_16X16_NUM_LISTS() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * #define STD_VIDEO_H265_SCALING_LIST_16X16_NUM_ELEMENTS 64
     * }
     */
    public static int STD_VIDEO_H265_SCALING_LIST_16X16_NUM_ELEMENTS() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * #define STD_VIDEO_H265_SCALING_LIST_32X32_NUM_LISTS 2
     * }
     */
    public static int STD_VIDEO_H265_SCALING_LIST_32X32_NUM_LISTS() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define STD_VIDEO_H265_SCALING_LIST_32X32_NUM_ELEMENTS 64
     * }
     */
    public static int STD_VIDEO_H265_SCALING_LIST_32X32_NUM_ELEMENTS() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * #define STD_VIDEO_H265_PREDICTOR_PALETTE_COMPONENTS_LIST_SIZE 3
     * }
     */
    public static int STD_VIDEO_H265_PREDICTOR_PALETTE_COMPONENTS_LIST_SIZE() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define STD_VIDEO_H265_PREDICTOR_PALETTE_COMP_ENTRIES_LIST_SIZE 128
     * }
     */
    public static int STD_VIDEO_H265_PREDICTOR_PALETTE_COMP_ENTRIES_LIST_SIZE() {
        return (int)128L;
    }
    /**
     * {@snippet :
     * #define STD_VIDEO_H265_MAX_DPB_SIZE 16
     * }
     */
    public static int STD_VIDEO_H265_MAX_DPB_SIZE() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define STD_VIDEO_H265_MAX_LONG_TERM_REF_PICS_SPS 32
     * }
     */
    public static int STD_VIDEO_H265_MAX_LONG_TERM_REF_PICS_SPS() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * #define STD_VIDEO_H265_CHROMA_QP_OFFSET_LIST_SIZE 6
     * }
     */
    public static int STD_VIDEO_H265_CHROMA_QP_OFFSET_LIST_SIZE() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * #define STD_VIDEO_H265_CHROMA_QP_OFFSET_TILE_COLS_LIST_SIZE 19
     * }
     */
    public static int STD_VIDEO_H265_CHROMA_QP_OFFSET_TILE_COLS_LIST_SIZE() {
        return (int)19L;
    }
    /**
     * {@snippet :
     * #define STD_VIDEO_H265_CHROMA_QP_OFFSET_TILE_ROWS_LIST_SIZE 21
     * }
     */
    public static int STD_VIDEO_H265_CHROMA_QP_OFFSET_TILE_ROWS_LIST_SIZE() {
        return (int)21L;
    }
    /**
     * {@snippet :
     * #define STD_VIDEO_H265_MAX_NUM_LIST_REF 15
     * }
     */
    public static int STD_VIDEO_H265_MAX_NUM_LIST_REF() {
        return (int)15L;
    }
    /**
     * {@snippet :
     * #define STD_VIDEO_H265_MAX_CHROMA_PLANES 2
     * }
     */
    public static int STD_VIDEO_H265_MAX_CHROMA_PLANES() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define STD_VIDEO_H265_MAX_SHORT_TERM_REF_PIC_SETS 64
     * }
     */
    public static int STD_VIDEO_H265_MAX_SHORT_TERM_REF_PIC_SETS() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * #define STD_VIDEO_H265_MAX_LONG_TERM_PICS 16
     * }
     */
    public static int STD_VIDEO_H265_MAX_LONG_TERM_PICS() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define STD_VIDEO_H265_MAX_DELTA_POC 48
     * }
     */
    public static int STD_VIDEO_H265_MAX_DELTA_POC() {
        return (int)48L;
    }
    /**
     * {@snippet :
     * #define VULKAN_VIDEO_CODEC_H265STD_DECODE_H_ 1
     * }
     */
    public static int VULKAN_VIDEO_CODEC_H265STD_DECODE_H_() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define vulkan_video_codec_h265std_decode 1
     * }
     */
    public static int vulkan_video_codec_h265std_decode() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define STD_VIDEO_DECODE_H265_REF_PIC_SET_LIST_SIZE 8
     * }
     */
    public static int STD_VIDEO_DECODE_H265_REF_PIC_SET_LIST_SIZE() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_VIDEO_DECODE_H265_SPEC_VERSION 7
     * }
     */
    public static int VK_KHR_VIDEO_DECODE_H265_SPEC_VERSION() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_global_priority 1
     * }
     */
    public static int VK_KHR_global_priority() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_GLOBAL_PRIORITY_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_GLOBAL_PRIORITY_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_driver_properties 1
     * }
     */
    public static int VK_KHR_driver_properties() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_DRIVER_PROPERTIES_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_DRIVER_PROPERTIES_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_shader_float_controls 1
     * }
     */
    public static int VK_KHR_shader_float_controls() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_SHADER_FLOAT_CONTROLS_SPEC_VERSION 4
     * }
     */
    public static int VK_KHR_SHADER_FLOAT_CONTROLS_SPEC_VERSION() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_depth_stencil_resolve 1
     * }
     */
    public static int VK_KHR_depth_stencil_resolve() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_DEPTH_STENCIL_RESOLVE_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_DEPTH_STENCIL_RESOLVE_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_swapchain_mutable_format 1
     * }
     */
    public static int VK_KHR_swapchain_mutable_format() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_SWAPCHAIN_MUTABLE_FORMAT_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_SWAPCHAIN_MUTABLE_FORMAT_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_timeline_semaphore 1
     * }
     */
    public static int VK_KHR_timeline_semaphore() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_TIMELINE_SEMAPHORE_SPEC_VERSION 2
     * }
     */
    public static int VK_KHR_TIMELINE_SEMAPHORE_SPEC_VERSION() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_vulkan_memory_model 1
     * }
     */
    public static int VK_KHR_vulkan_memory_model() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_VULKAN_MEMORY_MODEL_SPEC_VERSION 3
     * }
     */
    public static int VK_KHR_VULKAN_MEMORY_MODEL_SPEC_VERSION() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_shader_terminate_invocation 1
     * }
     */
    public static int VK_KHR_shader_terminate_invocation() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_SHADER_TERMINATE_INVOCATION_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_SHADER_TERMINATE_INVOCATION_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_fragment_shading_rate 1
     * }
     */
    public static int VK_KHR_fragment_shading_rate() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_FRAGMENT_SHADING_RATE_SPEC_VERSION 2
     * }
     */
    public static int VK_KHR_FRAGMENT_SHADING_RATE_SPEC_VERSION() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_spirv_1_4 1
     * }
     */
    public static int VK_KHR_spirv_1_4() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_SPIRV_1_4_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_SPIRV_1_4_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_surface_protected_capabilities 1
     * }
     */
    public static int VK_KHR_surface_protected_capabilities() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_SURFACE_PROTECTED_CAPABILITIES_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_SURFACE_PROTECTED_CAPABILITIES_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_separate_depth_stencil_layouts 1
     * }
     */
    public static int VK_KHR_separate_depth_stencil_layouts() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_SEPARATE_DEPTH_STENCIL_LAYOUTS_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_SEPARATE_DEPTH_STENCIL_LAYOUTS_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_present_wait 1
     * }
     */
    public static int VK_KHR_present_wait() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_PRESENT_WAIT_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_PRESENT_WAIT_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_uniform_buffer_standard_layout 1
     * }
     */
    public static int VK_KHR_uniform_buffer_standard_layout() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_UNIFORM_BUFFER_STANDARD_LAYOUT_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_UNIFORM_BUFFER_STANDARD_LAYOUT_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_buffer_device_address 1
     * }
     */
    public static int VK_KHR_buffer_device_address() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_BUFFER_DEVICE_ADDRESS_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_BUFFER_DEVICE_ADDRESS_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_deferred_host_operations 1
     * }
     */
    public static int VK_KHR_deferred_host_operations() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_DEFERRED_HOST_OPERATIONS_SPEC_VERSION 4
     * }
     */
    public static int VK_KHR_DEFERRED_HOST_OPERATIONS_SPEC_VERSION() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_pipeline_executable_properties 1
     * }
     */
    public static int VK_KHR_pipeline_executable_properties() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_PIPELINE_EXECUTABLE_PROPERTIES_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_PIPELINE_EXECUTABLE_PROPERTIES_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_map_memory2 1
     * }
     */
    public static int VK_KHR_map_memory2() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_MAP_MEMORY_2_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_MAP_MEMORY_2_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_shader_integer_dot_product 1
     * }
     */
    public static int VK_KHR_shader_integer_dot_product() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_SHADER_INTEGER_DOT_PRODUCT_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_SHADER_INTEGER_DOT_PRODUCT_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_pipeline_library 1
     * }
     */
    public static int VK_KHR_pipeline_library() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_PIPELINE_LIBRARY_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_PIPELINE_LIBRARY_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_shader_non_semantic_info 1
     * }
     */
    public static int VK_KHR_shader_non_semantic_info() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_SHADER_NON_SEMANTIC_INFO_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_SHADER_NON_SEMANTIC_INFO_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_present_id 1
     * }
     */
    public static int VK_KHR_present_id() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_PRESENT_ID_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_PRESENT_ID_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_synchronization2 1
     * }
     */
    public static int VK_KHR_synchronization2() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_SYNCHRONIZATION_2_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_SYNCHRONIZATION_2_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_fragment_shader_barycentric 1
     * }
     */
    public static int VK_KHR_fragment_shader_barycentric() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_FRAGMENT_SHADER_BARYCENTRIC_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_FRAGMENT_SHADER_BARYCENTRIC_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_shader_subgroup_uniform_control_flow 1
     * }
     */
    public static int VK_KHR_shader_subgroup_uniform_control_flow() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_SHADER_SUBGROUP_UNIFORM_CONTROL_FLOW_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_SHADER_SUBGROUP_UNIFORM_CONTROL_FLOW_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_zero_initialize_workgroup_memory 1
     * }
     */
    public static int VK_KHR_zero_initialize_workgroup_memory() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_ZERO_INITIALIZE_WORKGROUP_MEMORY_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_ZERO_INITIALIZE_WORKGROUP_MEMORY_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_workgroup_memory_explicit_layout 1
     * }
     */
    public static int VK_KHR_workgroup_memory_explicit_layout() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_WORKGROUP_MEMORY_EXPLICIT_LAYOUT_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_WORKGROUP_MEMORY_EXPLICIT_LAYOUT_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_copy_commands2 1
     * }
     */
    public static int VK_KHR_copy_commands2() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_COPY_COMMANDS_2_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_COPY_COMMANDS_2_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_format_feature_flags2 1
     * }
     */
    public static int VK_KHR_format_feature_flags2() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_FORMAT_FEATURE_FLAGS_2_SPEC_VERSION 2
     * }
     */
    public static int VK_KHR_FORMAT_FEATURE_FLAGS_2_SPEC_VERSION() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_ray_tracing_maintenance1 1
     * }
     */
    public static int VK_KHR_ray_tracing_maintenance1() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_RAY_TRACING_MAINTENANCE_1_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_RAY_TRACING_MAINTENANCE_1_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_portability_enumeration 1
     * }
     */
    public static int VK_KHR_portability_enumeration() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_PORTABILITY_ENUMERATION_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_PORTABILITY_ENUMERATION_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_maintenance4 1
     * }
     */
    public static int VK_KHR_maintenance4() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_MAINTENANCE_4_SPEC_VERSION 2
     * }
     */
    public static int VK_KHR_MAINTENANCE_4_SPEC_VERSION() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_ray_tracing_position_fetch 1
     * }
     */
    public static int VK_KHR_ray_tracing_position_fetch() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_RAY_TRACING_POSITION_FETCH_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_RAY_TRACING_POSITION_FETCH_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_debug_report 1
     * }
     */
    public static int VK_EXT_debug_report() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_DEBUG_REPORT_SPEC_VERSION 10
     * }
     */
    public static int VK_EXT_DEBUG_REPORT_SPEC_VERSION() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * #define VK_NV_glsl_shader 1
     * }
     */
    public static int VK_NV_glsl_shader() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_GLSL_SHADER_SPEC_VERSION 1
     * }
     */
    public static int VK_NV_GLSL_SHADER_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_depth_range_unrestricted 1
     * }
     */
    public static int VK_EXT_depth_range_unrestricted() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_DEPTH_RANGE_UNRESTRICTED_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_DEPTH_RANGE_UNRESTRICTED_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_IMG_filter_cubic 1
     * }
     */
    public static int VK_IMG_filter_cubic() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_IMG_FILTER_CUBIC_SPEC_VERSION 1
     * }
     */
    public static int VK_IMG_FILTER_CUBIC_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_AMD_rasterization_order 1
     * }
     */
    public static int VK_AMD_rasterization_order() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_AMD_RASTERIZATION_ORDER_SPEC_VERSION 1
     * }
     */
    public static int VK_AMD_RASTERIZATION_ORDER_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_AMD_shader_trinary_minmax 1
     * }
     */
    public static int VK_AMD_shader_trinary_minmax() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_AMD_SHADER_TRINARY_MINMAX_SPEC_VERSION 1
     * }
     */
    public static int VK_AMD_SHADER_TRINARY_MINMAX_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_AMD_shader_explicit_vertex_parameter 1
     * }
     */
    public static int VK_AMD_shader_explicit_vertex_parameter() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_AMD_SHADER_EXPLICIT_VERTEX_PARAMETER_SPEC_VERSION 1
     * }
     */
    public static int VK_AMD_SHADER_EXPLICIT_VERTEX_PARAMETER_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_debug_marker 1
     * }
     */
    public static int VK_EXT_debug_marker() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_DEBUG_MARKER_SPEC_VERSION 4
     * }
     */
    public static int VK_EXT_DEBUG_MARKER_SPEC_VERSION() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define VK_AMD_gcn_shader 1
     * }
     */
    public static int VK_AMD_gcn_shader() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_AMD_GCN_SHADER_SPEC_VERSION 1
     * }
     */
    public static int VK_AMD_GCN_SHADER_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_dedicated_allocation 1
     * }
     */
    public static int VK_NV_dedicated_allocation() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_DEDICATED_ALLOCATION_SPEC_VERSION 1
     * }
     */
    public static int VK_NV_DEDICATED_ALLOCATION_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_transform_feedback 1
     * }
     */
    public static int VK_EXT_transform_feedback() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_TRANSFORM_FEEDBACK_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_TRANSFORM_FEEDBACK_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NVX_binary_import 1
     * }
     */
    public static int VK_NVX_binary_import() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NVX_BINARY_IMPORT_SPEC_VERSION 1
     * }
     */
    public static int VK_NVX_BINARY_IMPORT_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NVX_image_view_handle 1
     * }
     */
    public static int VK_NVX_image_view_handle() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NVX_IMAGE_VIEW_HANDLE_SPEC_VERSION 2
     * }
     */
    public static int VK_NVX_IMAGE_VIEW_HANDLE_SPEC_VERSION() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define VK_AMD_draw_indirect_count 1
     * }
     */
    public static int VK_AMD_draw_indirect_count() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_AMD_DRAW_INDIRECT_COUNT_SPEC_VERSION 2
     * }
     */
    public static int VK_AMD_DRAW_INDIRECT_COUNT_SPEC_VERSION() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define VK_AMD_negative_viewport_height 1
     * }
     */
    public static int VK_AMD_negative_viewport_height() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_AMD_NEGATIVE_VIEWPORT_HEIGHT_SPEC_VERSION 1
     * }
     */
    public static int VK_AMD_NEGATIVE_VIEWPORT_HEIGHT_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_AMD_gpu_shader_half_float 1
     * }
     */
    public static int VK_AMD_gpu_shader_half_float() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_AMD_GPU_SHADER_HALF_FLOAT_SPEC_VERSION 2
     * }
     */
    public static int VK_AMD_GPU_SHADER_HALF_FLOAT_SPEC_VERSION() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define VK_AMD_shader_ballot 1
     * }
     */
    public static int VK_AMD_shader_ballot() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_AMD_SHADER_BALLOT_SPEC_VERSION 1
     * }
     */
    public static int VK_AMD_SHADER_BALLOT_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_AMD_texture_gather_bias_lod 1
     * }
     */
    public static int VK_AMD_texture_gather_bias_lod() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_AMD_TEXTURE_GATHER_BIAS_LOD_SPEC_VERSION 1
     * }
     */
    public static int VK_AMD_TEXTURE_GATHER_BIAS_LOD_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_AMD_shader_info 1
     * }
     */
    public static int VK_AMD_shader_info() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_AMD_SHADER_INFO_SPEC_VERSION 1
     * }
     */
    public static int VK_AMD_SHADER_INFO_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_AMD_shader_image_load_store_lod 1
     * }
     */
    public static int VK_AMD_shader_image_load_store_lod() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_AMD_SHADER_IMAGE_LOAD_STORE_LOD_SPEC_VERSION 1
     * }
     */
    public static int VK_AMD_SHADER_IMAGE_LOAD_STORE_LOD_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_corner_sampled_image 1
     * }
     */
    public static int VK_NV_corner_sampled_image() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_CORNER_SAMPLED_IMAGE_SPEC_VERSION 2
     * }
     */
    public static int VK_NV_CORNER_SAMPLED_IMAGE_SPEC_VERSION() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define VK_IMG_format_pvrtc 1
     * }
     */
    public static int VK_IMG_format_pvrtc() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_IMG_FORMAT_PVRTC_SPEC_VERSION 1
     * }
     */
    public static int VK_IMG_FORMAT_PVRTC_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_external_memory_capabilities 1
     * }
     */
    public static int VK_NV_external_memory_capabilities() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_EXTERNAL_MEMORY_CAPABILITIES_SPEC_VERSION 1
     * }
     */
    public static int VK_NV_EXTERNAL_MEMORY_CAPABILITIES_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_external_memory 1
     * }
     */
    public static int VK_NV_external_memory() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_EXTERNAL_MEMORY_SPEC_VERSION 1
     * }
     */
    public static int VK_NV_EXTERNAL_MEMORY_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_validation_flags 1
     * }
     */
    public static int VK_EXT_validation_flags() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_VALIDATION_FLAGS_SPEC_VERSION 2
     * }
     */
    public static int VK_EXT_VALIDATION_FLAGS_SPEC_VERSION() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_shader_subgroup_ballot 1
     * }
     */
    public static int VK_EXT_shader_subgroup_ballot() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_SHADER_SUBGROUP_BALLOT_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_SHADER_SUBGROUP_BALLOT_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_shader_subgroup_vote 1
     * }
     */
    public static int VK_EXT_shader_subgroup_vote() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_SHADER_SUBGROUP_VOTE_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_SHADER_SUBGROUP_VOTE_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_texture_compression_astc_hdr 1
     * }
     */
    public static int VK_EXT_texture_compression_astc_hdr() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_TEXTURE_COMPRESSION_ASTC_HDR_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_TEXTURE_COMPRESSION_ASTC_HDR_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_astc_decode_mode 1
     * }
     */
    public static int VK_EXT_astc_decode_mode() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_ASTC_DECODE_MODE_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_ASTC_DECODE_MODE_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_pipeline_robustness 1
     * }
     */
    public static int VK_EXT_pipeline_robustness() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_PIPELINE_ROBUSTNESS_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_PIPELINE_ROBUSTNESS_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_conditional_rendering 1
     * }
     */
    public static int VK_EXT_conditional_rendering() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_CONDITIONAL_RENDERING_SPEC_VERSION 2
     * }
     */
    public static int VK_EXT_CONDITIONAL_RENDERING_SPEC_VERSION() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define VK_NV_clip_space_w_scaling 1
     * }
     */
    public static int VK_NV_clip_space_w_scaling() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_CLIP_SPACE_W_SCALING_SPEC_VERSION 1
     * }
     */
    public static int VK_NV_CLIP_SPACE_W_SCALING_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_direct_mode_display 1
     * }
     */
    public static int VK_EXT_direct_mode_display() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_DIRECT_MODE_DISPLAY_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_DIRECT_MODE_DISPLAY_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_display_surface_counter 1
     * }
     */
    public static int VK_EXT_display_surface_counter() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_DISPLAY_SURFACE_COUNTER_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_DISPLAY_SURFACE_COUNTER_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_display_control 1
     * }
     */
    public static int VK_EXT_display_control() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_DISPLAY_CONTROL_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_DISPLAY_CONTROL_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_GOOGLE_display_timing 1
     * }
     */
    public static int VK_GOOGLE_display_timing() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_GOOGLE_DISPLAY_TIMING_SPEC_VERSION 1
     * }
     */
    public static int VK_GOOGLE_DISPLAY_TIMING_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_sample_mask_override_coverage 1
     * }
     */
    public static int VK_NV_sample_mask_override_coverage() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_SAMPLE_MASK_OVERRIDE_COVERAGE_SPEC_VERSION 1
     * }
     */
    public static int VK_NV_SAMPLE_MASK_OVERRIDE_COVERAGE_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_geometry_shader_passthrough 1
     * }
     */
    public static int VK_NV_geometry_shader_passthrough() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_GEOMETRY_SHADER_PASSTHROUGH_SPEC_VERSION 1
     * }
     */
    public static int VK_NV_GEOMETRY_SHADER_PASSTHROUGH_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_viewport_array2 1
     * }
     */
    public static int VK_NV_viewport_array2() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_VIEWPORT_ARRAY_2_SPEC_VERSION 1
     * }
     */
    public static int VK_NV_VIEWPORT_ARRAY_2_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NVX_multiview_per_view_attributes 1
     * }
     */
    public static int VK_NVX_multiview_per_view_attributes() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NVX_MULTIVIEW_PER_VIEW_ATTRIBUTES_SPEC_VERSION 1
     * }
     */
    public static int VK_NVX_MULTIVIEW_PER_VIEW_ATTRIBUTES_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_viewport_swizzle 1
     * }
     */
    public static int VK_NV_viewport_swizzle() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_VIEWPORT_SWIZZLE_SPEC_VERSION 1
     * }
     */
    public static int VK_NV_VIEWPORT_SWIZZLE_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_discard_rectangles 1
     * }
     */
    public static int VK_EXT_discard_rectangles() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_DISCARD_RECTANGLES_SPEC_VERSION 2
     * }
     */
    public static int VK_EXT_DISCARD_RECTANGLES_SPEC_VERSION() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_conservative_rasterization 1
     * }
     */
    public static int VK_EXT_conservative_rasterization() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_CONSERVATIVE_RASTERIZATION_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_CONSERVATIVE_RASTERIZATION_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_depth_clip_enable 1
     * }
     */
    public static int VK_EXT_depth_clip_enable() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_DEPTH_CLIP_ENABLE_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_DEPTH_CLIP_ENABLE_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_swapchain_colorspace 1
     * }
     */
    public static int VK_EXT_swapchain_colorspace() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_SWAPCHAIN_COLOR_SPACE_SPEC_VERSION 4
     * }
     */
    public static int VK_EXT_SWAPCHAIN_COLOR_SPACE_SPEC_VERSION() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_hdr_metadata 1
     * }
     */
    public static int VK_EXT_hdr_metadata() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_HDR_METADATA_SPEC_VERSION 2
     * }
     */
    public static int VK_EXT_HDR_METADATA_SPEC_VERSION() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_external_memory_dma_buf 1
     * }
     */
    public static int VK_EXT_external_memory_dma_buf() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_EXTERNAL_MEMORY_DMA_BUF_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_EXTERNAL_MEMORY_DMA_BUF_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_queue_family_foreign 1
     * }
     */
    public static int VK_EXT_queue_family_foreign() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_QUEUE_FAMILY_FOREIGN_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_QUEUE_FAMILY_FOREIGN_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_debug_utils 1
     * }
     */
    public static int VK_EXT_debug_utils() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_DEBUG_UTILS_SPEC_VERSION 2
     * }
     */
    public static int VK_EXT_DEBUG_UTILS_SPEC_VERSION() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_sampler_filter_minmax 1
     * }
     */
    public static int VK_EXT_sampler_filter_minmax() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_SAMPLER_FILTER_MINMAX_SPEC_VERSION 2
     * }
     */
    public static int VK_EXT_SAMPLER_FILTER_MINMAX_SPEC_VERSION() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define VK_AMD_gpu_shader_int16 1
     * }
     */
    public static int VK_AMD_gpu_shader_int16() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_AMD_GPU_SHADER_INT16_SPEC_VERSION 2
     * }
     */
    public static int VK_AMD_GPU_SHADER_INT16_SPEC_VERSION() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define VK_AMD_mixed_attachment_samples 1
     * }
     */
    public static int VK_AMD_mixed_attachment_samples() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_AMD_MIXED_ATTACHMENT_SAMPLES_SPEC_VERSION 1
     * }
     */
    public static int VK_AMD_MIXED_ATTACHMENT_SAMPLES_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_AMD_shader_fragment_mask 1
     * }
     */
    public static int VK_AMD_shader_fragment_mask() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_AMD_SHADER_FRAGMENT_MASK_SPEC_VERSION 1
     * }
     */
    public static int VK_AMD_SHADER_FRAGMENT_MASK_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_inline_uniform_block 1
     * }
     */
    public static int VK_EXT_inline_uniform_block() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_INLINE_UNIFORM_BLOCK_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_INLINE_UNIFORM_BLOCK_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_shader_stencil_export 1
     * }
     */
    public static int VK_EXT_shader_stencil_export() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_SHADER_STENCIL_EXPORT_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_SHADER_STENCIL_EXPORT_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_sample_locations 1
     * }
     */
    public static int VK_EXT_sample_locations() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_SAMPLE_LOCATIONS_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_SAMPLE_LOCATIONS_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_blend_operation_advanced 1
     * }
     */
    public static int VK_EXT_blend_operation_advanced() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_BLEND_OPERATION_ADVANCED_SPEC_VERSION 2
     * }
     */
    public static int VK_EXT_BLEND_OPERATION_ADVANCED_SPEC_VERSION() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define VK_NV_fragment_coverage_to_color 1
     * }
     */
    public static int VK_NV_fragment_coverage_to_color() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_FRAGMENT_COVERAGE_TO_COLOR_SPEC_VERSION 1
     * }
     */
    public static int VK_NV_FRAGMENT_COVERAGE_TO_COLOR_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_framebuffer_mixed_samples 1
     * }
     */
    public static int VK_NV_framebuffer_mixed_samples() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_FRAMEBUFFER_MIXED_SAMPLES_SPEC_VERSION 1
     * }
     */
    public static int VK_NV_FRAMEBUFFER_MIXED_SAMPLES_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_fill_rectangle 1
     * }
     */
    public static int VK_NV_fill_rectangle() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_FILL_RECTANGLE_SPEC_VERSION 1
     * }
     */
    public static int VK_NV_FILL_RECTANGLE_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_shader_sm_builtins 1
     * }
     */
    public static int VK_NV_shader_sm_builtins() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_SHADER_SM_BUILTINS_SPEC_VERSION 1
     * }
     */
    public static int VK_NV_SHADER_SM_BUILTINS_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_post_depth_coverage 1
     * }
     */
    public static int VK_EXT_post_depth_coverage() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_POST_DEPTH_COVERAGE_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_POST_DEPTH_COVERAGE_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_image_drm_format_modifier 1
     * }
     */
    public static int VK_EXT_image_drm_format_modifier() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_IMAGE_DRM_FORMAT_MODIFIER_SPEC_VERSION 2
     * }
     */
    public static int VK_EXT_IMAGE_DRM_FORMAT_MODIFIER_SPEC_VERSION() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_validation_cache 1
     * }
     */
    public static int VK_EXT_validation_cache() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_VALIDATION_CACHE_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_VALIDATION_CACHE_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_descriptor_indexing 1
     * }
     */
    public static int VK_EXT_descriptor_indexing() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_DESCRIPTOR_INDEXING_SPEC_VERSION 2
     * }
     */
    public static int VK_EXT_DESCRIPTOR_INDEXING_SPEC_VERSION() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_shader_viewport_index_layer 1
     * }
     */
    public static int VK_EXT_shader_viewport_index_layer() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_SHADER_VIEWPORT_INDEX_LAYER_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_SHADER_VIEWPORT_INDEX_LAYER_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_shading_rate_image 1
     * }
     */
    public static int VK_NV_shading_rate_image() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_SHADING_RATE_IMAGE_SPEC_VERSION 3
     * }
     */
    public static int VK_NV_SHADING_RATE_IMAGE_SPEC_VERSION() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define VK_NV_ray_tracing 1
     * }
     */
    public static int VK_NV_ray_tracing() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_RAY_TRACING_SPEC_VERSION 3
     * }
     */
    public static int VK_NV_RAY_TRACING_SPEC_VERSION() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define VK_NV_representative_fragment_test 1
     * }
     */
    public static int VK_NV_representative_fragment_test() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_REPRESENTATIVE_FRAGMENT_TEST_SPEC_VERSION 2
     * }
     */
    public static int VK_NV_REPRESENTATIVE_FRAGMENT_TEST_SPEC_VERSION() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_filter_cubic 1
     * }
     */
    public static int VK_EXT_filter_cubic() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_FILTER_CUBIC_SPEC_VERSION 3
     * }
     */
    public static int VK_EXT_FILTER_CUBIC_SPEC_VERSION() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define VK_QCOM_render_pass_shader_resolve 1
     * }
     */
    public static int VK_QCOM_render_pass_shader_resolve() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_QCOM_RENDER_PASS_SHADER_RESOLVE_SPEC_VERSION 4
     * }
     */
    public static int VK_QCOM_RENDER_PASS_SHADER_RESOLVE_SPEC_VERSION() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_global_priority 1
     * }
     */
    public static int VK_EXT_global_priority() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_GLOBAL_PRIORITY_SPEC_VERSION 2
     * }
     */
    public static int VK_EXT_GLOBAL_PRIORITY_SPEC_VERSION() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_external_memory_host 1
     * }
     */
    public static int VK_EXT_external_memory_host() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_EXTERNAL_MEMORY_HOST_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_EXTERNAL_MEMORY_HOST_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_AMD_buffer_marker 1
     * }
     */
    public static int VK_AMD_buffer_marker() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_AMD_BUFFER_MARKER_SPEC_VERSION 1
     * }
     */
    public static int VK_AMD_BUFFER_MARKER_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_AMD_pipeline_compiler_control 1
     * }
     */
    public static int VK_AMD_pipeline_compiler_control() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_AMD_PIPELINE_COMPILER_CONTROL_SPEC_VERSION 1
     * }
     */
    public static int VK_AMD_PIPELINE_COMPILER_CONTROL_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_calibrated_timestamps 1
     * }
     */
    public static int VK_EXT_calibrated_timestamps() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_CALIBRATED_TIMESTAMPS_SPEC_VERSION 2
     * }
     */
    public static int VK_EXT_CALIBRATED_TIMESTAMPS_SPEC_VERSION() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define VK_AMD_shader_core_properties 1
     * }
     */
    public static int VK_AMD_shader_core_properties() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_AMD_SHADER_CORE_PROPERTIES_SPEC_VERSION 2
     * }
     */
    public static int VK_AMD_SHADER_CORE_PROPERTIES_SPEC_VERSION() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define VK_AMD_memory_overallocation_behavior 1
     * }
     */
    public static int VK_AMD_memory_overallocation_behavior() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_AMD_MEMORY_OVERALLOCATION_BEHAVIOR_SPEC_VERSION 1
     * }
     */
    public static int VK_AMD_MEMORY_OVERALLOCATION_BEHAVIOR_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_vertex_attribute_divisor 1
     * }
     */
    public static int VK_EXT_vertex_attribute_divisor() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_VERTEX_ATTRIBUTE_DIVISOR_SPEC_VERSION 3
     * }
     */
    public static int VK_EXT_VERTEX_ATTRIBUTE_DIVISOR_SPEC_VERSION() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_pipeline_creation_feedback 1
     * }
     */
    public static int VK_EXT_pipeline_creation_feedback() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_PIPELINE_CREATION_FEEDBACK_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_PIPELINE_CREATION_FEEDBACK_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_shader_subgroup_partitioned 1
     * }
     */
    public static int VK_NV_shader_subgroup_partitioned() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_SHADER_SUBGROUP_PARTITIONED_SPEC_VERSION 1
     * }
     */
    public static int VK_NV_SHADER_SUBGROUP_PARTITIONED_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_compute_shader_derivatives 1
     * }
     */
    public static int VK_NV_compute_shader_derivatives() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_COMPUTE_SHADER_DERIVATIVES_SPEC_VERSION 1
     * }
     */
    public static int VK_NV_COMPUTE_SHADER_DERIVATIVES_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_mesh_shader 1
     * }
     */
    public static int VK_NV_mesh_shader() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_MESH_SHADER_SPEC_VERSION 1
     * }
     */
    public static int VK_NV_MESH_SHADER_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_fragment_shader_barycentric 1
     * }
     */
    public static int VK_NV_fragment_shader_barycentric() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_FRAGMENT_SHADER_BARYCENTRIC_SPEC_VERSION 1
     * }
     */
    public static int VK_NV_FRAGMENT_SHADER_BARYCENTRIC_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_shader_image_footprint 1
     * }
     */
    public static int VK_NV_shader_image_footprint() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_SHADER_IMAGE_FOOTPRINT_SPEC_VERSION 2
     * }
     */
    public static int VK_NV_SHADER_IMAGE_FOOTPRINT_SPEC_VERSION() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define VK_NV_scissor_exclusive 1
     * }
     */
    public static int VK_NV_scissor_exclusive() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_SCISSOR_EXCLUSIVE_SPEC_VERSION 2
     * }
     */
    public static int VK_NV_SCISSOR_EXCLUSIVE_SPEC_VERSION() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define VK_NV_device_diagnostic_checkpoints 1
     * }
     */
    public static int VK_NV_device_diagnostic_checkpoints() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_DEVICE_DIAGNOSTIC_CHECKPOINTS_SPEC_VERSION 2
     * }
     */
    public static int VK_NV_DEVICE_DIAGNOSTIC_CHECKPOINTS_SPEC_VERSION() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define VK_INTEL_shader_integer_functions2 1
     * }
     */
    public static int VK_INTEL_shader_integer_functions2() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_INTEL_SHADER_INTEGER_FUNCTIONS_2_SPEC_VERSION 1
     * }
     */
    public static int VK_INTEL_SHADER_INTEGER_FUNCTIONS_2_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_INTEL_performance_query 1
     * }
     */
    public static int VK_INTEL_performance_query() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_INTEL_PERFORMANCE_QUERY_SPEC_VERSION 2
     * }
     */
    public static int VK_INTEL_PERFORMANCE_QUERY_SPEC_VERSION() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_pci_bus_info 1
     * }
     */
    public static int VK_EXT_pci_bus_info() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_PCI_BUS_INFO_SPEC_VERSION 2
     * }
     */
    public static int VK_EXT_PCI_BUS_INFO_SPEC_VERSION() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define VK_AMD_display_native_hdr 1
     * }
     */
    public static int VK_AMD_display_native_hdr() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_AMD_DISPLAY_NATIVE_HDR_SPEC_VERSION 1
     * }
     */
    public static int VK_AMD_DISPLAY_NATIVE_HDR_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_fragment_density_map 1
     * }
     */
    public static int VK_EXT_fragment_density_map() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_FRAGMENT_DENSITY_MAP_SPEC_VERSION 2
     * }
     */
    public static int VK_EXT_FRAGMENT_DENSITY_MAP_SPEC_VERSION() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_scalar_block_layout 1
     * }
     */
    public static int VK_EXT_scalar_block_layout() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_SCALAR_BLOCK_LAYOUT_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_SCALAR_BLOCK_LAYOUT_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_GOOGLE_hlsl_functionality1 1
     * }
     */
    public static int VK_GOOGLE_hlsl_functionality1() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_GOOGLE_HLSL_FUNCTIONALITY_1_SPEC_VERSION 1
     * }
     */
    public static int VK_GOOGLE_HLSL_FUNCTIONALITY_1_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_GOOGLE_decorate_string 1
     * }
     */
    public static int VK_GOOGLE_decorate_string() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_GOOGLE_DECORATE_STRING_SPEC_VERSION 1
     * }
     */
    public static int VK_GOOGLE_DECORATE_STRING_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_subgroup_size_control 1
     * }
     */
    public static int VK_EXT_subgroup_size_control() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_SUBGROUP_SIZE_CONTROL_SPEC_VERSION 2
     * }
     */
    public static int VK_EXT_SUBGROUP_SIZE_CONTROL_SPEC_VERSION() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define VK_AMD_shader_core_properties2 1
     * }
     */
    public static int VK_AMD_shader_core_properties2() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_AMD_SHADER_CORE_PROPERTIES_2_SPEC_VERSION 1
     * }
     */
    public static int VK_AMD_SHADER_CORE_PROPERTIES_2_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_AMD_device_coherent_memory 1
     * }
     */
    public static int VK_AMD_device_coherent_memory() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_AMD_DEVICE_COHERENT_MEMORY_SPEC_VERSION 1
     * }
     */
    public static int VK_AMD_DEVICE_COHERENT_MEMORY_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_shader_image_atomic_int64 1
     * }
     */
    public static int VK_EXT_shader_image_atomic_int64() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_SHADER_IMAGE_ATOMIC_INT64_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_SHADER_IMAGE_ATOMIC_INT64_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_memory_budget 1
     * }
     */
    public static int VK_EXT_memory_budget() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_MEMORY_BUDGET_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_MEMORY_BUDGET_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_memory_priority 1
     * }
     */
    public static int VK_EXT_memory_priority() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_MEMORY_PRIORITY_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_MEMORY_PRIORITY_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_dedicated_allocation_image_aliasing 1
     * }
     */
    public static int VK_NV_dedicated_allocation_image_aliasing() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_DEDICATED_ALLOCATION_IMAGE_ALIASING_SPEC_VERSION 1
     * }
     */
    public static int VK_NV_DEDICATED_ALLOCATION_IMAGE_ALIASING_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_buffer_device_address 1
     * }
     */
    public static int VK_EXT_buffer_device_address() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_BUFFER_DEVICE_ADDRESS_SPEC_VERSION 2
     * }
     */
    public static int VK_EXT_BUFFER_DEVICE_ADDRESS_SPEC_VERSION() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_tooling_info 1
     * }
     */
    public static int VK_EXT_tooling_info() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_TOOLING_INFO_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_TOOLING_INFO_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_separate_stencil_usage 1
     * }
     */
    public static int VK_EXT_separate_stencil_usage() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_SEPARATE_STENCIL_USAGE_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_SEPARATE_STENCIL_USAGE_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_validation_features 1
     * }
     */
    public static int VK_EXT_validation_features() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_VALIDATION_FEATURES_SPEC_VERSION 5
     * }
     */
    public static int VK_EXT_VALIDATION_FEATURES_SPEC_VERSION() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * #define VK_NV_cooperative_matrix 1
     * }
     */
    public static int VK_NV_cooperative_matrix() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_COOPERATIVE_MATRIX_SPEC_VERSION 1
     * }
     */
    public static int VK_NV_COOPERATIVE_MATRIX_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_coverage_reduction_mode 1
     * }
     */
    public static int VK_NV_coverage_reduction_mode() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_COVERAGE_REDUCTION_MODE_SPEC_VERSION 1
     * }
     */
    public static int VK_NV_COVERAGE_REDUCTION_MODE_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_fragment_shader_interlock 1
     * }
     */
    public static int VK_EXT_fragment_shader_interlock() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_FRAGMENT_SHADER_INTERLOCK_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_FRAGMENT_SHADER_INTERLOCK_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_ycbcr_image_arrays 1
     * }
     */
    public static int VK_EXT_ycbcr_image_arrays() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_YCBCR_IMAGE_ARRAYS_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_YCBCR_IMAGE_ARRAYS_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_provoking_vertex 1
     * }
     */
    public static int VK_EXT_provoking_vertex() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_PROVOKING_VERTEX_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_PROVOKING_VERTEX_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_headless_surface 1
     * }
     */
    public static int VK_EXT_headless_surface() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_HEADLESS_SURFACE_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_HEADLESS_SURFACE_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_line_rasterization 1
     * }
     */
    public static int VK_EXT_line_rasterization() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_LINE_RASTERIZATION_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_LINE_RASTERIZATION_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_shader_atomic_float 1
     * }
     */
    public static int VK_EXT_shader_atomic_float() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_SHADER_ATOMIC_FLOAT_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_SHADER_ATOMIC_FLOAT_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_host_query_reset 1
     * }
     */
    public static int VK_EXT_host_query_reset() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_HOST_QUERY_RESET_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_HOST_QUERY_RESET_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_index_type_uint8 1
     * }
     */
    public static int VK_EXT_index_type_uint8() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_INDEX_TYPE_UINT8_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_INDEX_TYPE_UINT8_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_extended_dynamic_state 1
     * }
     */
    public static int VK_EXT_extended_dynamic_state() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_EXTENDED_DYNAMIC_STATE_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_EXTENDED_DYNAMIC_STATE_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_shader_atomic_float2 1
     * }
     */
    public static int VK_EXT_shader_atomic_float2() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_SHADER_ATOMIC_FLOAT_2_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_SHADER_ATOMIC_FLOAT_2_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_surface_maintenance1 1
     * }
     */
    public static int VK_EXT_surface_maintenance1() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_SURFACE_MAINTENANCE_1_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_SURFACE_MAINTENANCE_1_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_swapchain_maintenance1 1
     * }
     */
    public static int VK_EXT_swapchain_maintenance1() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_SWAPCHAIN_MAINTENANCE_1_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_SWAPCHAIN_MAINTENANCE_1_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_shader_demote_to_helper_invocation 1
     * }
     */
    public static int VK_EXT_shader_demote_to_helper_invocation() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_SHADER_DEMOTE_TO_HELPER_INVOCATION_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_SHADER_DEMOTE_TO_HELPER_INVOCATION_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_device_generated_commands 1
     * }
     */
    public static int VK_NV_device_generated_commands() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_DEVICE_GENERATED_COMMANDS_SPEC_VERSION 3
     * }
     */
    public static int VK_NV_DEVICE_GENERATED_COMMANDS_SPEC_VERSION() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define VK_NV_inherited_viewport_scissor 1
     * }
     */
    public static int VK_NV_inherited_viewport_scissor() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_INHERITED_VIEWPORT_SCISSOR_SPEC_VERSION 1
     * }
     */
    public static int VK_NV_INHERITED_VIEWPORT_SCISSOR_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_texel_buffer_alignment 1
     * }
     */
    public static int VK_EXT_texel_buffer_alignment() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_TEXEL_BUFFER_ALIGNMENT_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_TEXEL_BUFFER_ALIGNMENT_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_QCOM_render_pass_transform 1
     * }
     */
    public static int VK_QCOM_render_pass_transform() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_QCOM_RENDER_PASS_TRANSFORM_SPEC_VERSION 3
     * }
     */
    public static int VK_QCOM_RENDER_PASS_TRANSFORM_SPEC_VERSION() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_device_memory_report 1
     * }
     */
    public static int VK_EXT_device_memory_report() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_DEVICE_MEMORY_REPORT_SPEC_VERSION 2
     * }
     */
    public static int VK_EXT_DEVICE_MEMORY_REPORT_SPEC_VERSION() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_acquire_drm_display 1
     * }
     */
    public static int VK_EXT_acquire_drm_display() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_ACQUIRE_DRM_DISPLAY_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_ACQUIRE_DRM_DISPLAY_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_robustness2 1
     * }
     */
    public static int VK_EXT_robustness2() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_ROBUSTNESS_2_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_ROBUSTNESS_2_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_custom_border_color 1
     * }
     */
    public static int VK_EXT_custom_border_color() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_CUSTOM_BORDER_COLOR_SPEC_VERSION 12
     * }
     */
    public static int VK_EXT_CUSTOM_BORDER_COLOR_SPEC_VERSION() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * #define VK_GOOGLE_user_type 1
     * }
     */
    public static int VK_GOOGLE_user_type() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_GOOGLE_USER_TYPE_SPEC_VERSION 1
     * }
     */
    public static int VK_GOOGLE_USER_TYPE_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_present_barrier 1
     * }
     */
    public static int VK_NV_present_barrier() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_PRESENT_BARRIER_SPEC_VERSION 1
     * }
     */
    public static int VK_NV_PRESENT_BARRIER_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_private_data 1
     * }
     */
    public static int VK_EXT_private_data() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_PRIVATE_DATA_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_PRIVATE_DATA_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_pipeline_creation_cache_control 1
     * }
     */
    public static int VK_EXT_pipeline_creation_cache_control() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_PIPELINE_CREATION_CACHE_CONTROL_SPEC_VERSION 3
     * }
     */
    public static int VK_EXT_PIPELINE_CREATION_CACHE_CONTROL_SPEC_VERSION() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define VK_NV_device_diagnostics_config 1
     * }
     */
    public static int VK_NV_device_diagnostics_config() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_DEVICE_DIAGNOSTICS_CONFIG_SPEC_VERSION 2
     * }
     */
    public static int VK_NV_DEVICE_DIAGNOSTICS_CONFIG_SPEC_VERSION() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define VK_QCOM_render_pass_store_ops 1
     * }
     */
    public static int VK_QCOM_render_pass_store_ops() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_QCOM_RENDER_PASS_STORE_OPS_SPEC_VERSION 2
     * }
     */
    public static int VK_QCOM_RENDER_PASS_STORE_OPS_SPEC_VERSION() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define VK_NV_low_latency 1
     * }
     */
    public static int VK_NV_low_latency() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_LOW_LATENCY_SPEC_VERSION 1
     * }
     */
    public static int VK_NV_LOW_LATENCY_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_descriptor_buffer 1
     * }
     */
    public static int VK_EXT_descriptor_buffer() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_DESCRIPTOR_BUFFER_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_DESCRIPTOR_BUFFER_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_graphics_pipeline_library 1
     * }
     */
    public static int VK_EXT_graphics_pipeline_library() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_GRAPHICS_PIPELINE_LIBRARY_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_GRAPHICS_PIPELINE_LIBRARY_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_AMD_shader_early_and_late_fragment_tests 1
     * }
     */
    public static int VK_AMD_shader_early_and_late_fragment_tests() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_AMD_SHADER_EARLY_AND_LATE_FRAGMENT_TESTS_SPEC_VERSION 1
     * }
     */
    public static int VK_AMD_SHADER_EARLY_AND_LATE_FRAGMENT_TESTS_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_fragment_shading_rate_enums 1
     * }
     */
    public static int VK_NV_fragment_shading_rate_enums() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_FRAGMENT_SHADING_RATE_ENUMS_SPEC_VERSION 1
     * }
     */
    public static int VK_NV_FRAGMENT_SHADING_RATE_ENUMS_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_ray_tracing_motion_blur 1
     * }
     */
    public static int VK_NV_ray_tracing_motion_blur() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_RAY_TRACING_MOTION_BLUR_SPEC_VERSION 1
     * }
     */
    public static int VK_NV_RAY_TRACING_MOTION_BLUR_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_ycbcr_2plane_444_formats 1
     * }
     */
    public static int VK_EXT_ycbcr_2plane_444_formats() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_YCBCR_2PLANE_444_FORMATS_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_YCBCR_2PLANE_444_FORMATS_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_fragment_density_map2 1
     * }
     */
    public static int VK_EXT_fragment_density_map2() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_FRAGMENT_DENSITY_MAP_2_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_FRAGMENT_DENSITY_MAP_2_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_QCOM_rotated_copy_commands 1
     * }
     */
    public static int VK_QCOM_rotated_copy_commands() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_QCOM_ROTATED_COPY_COMMANDS_SPEC_VERSION 1
     * }
     */
    public static int VK_QCOM_ROTATED_COPY_COMMANDS_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_image_robustness 1
     * }
     */
    public static int VK_EXT_image_robustness() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_IMAGE_ROBUSTNESS_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_IMAGE_ROBUSTNESS_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_image_compression_control 1
     * }
     */
    public static int VK_EXT_image_compression_control() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_IMAGE_COMPRESSION_CONTROL_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_IMAGE_COMPRESSION_CONTROL_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_attachment_feedback_loop_layout 1
     * }
     */
    public static int VK_EXT_attachment_feedback_loop_layout() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_ATTACHMENT_FEEDBACK_LOOP_LAYOUT_SPEC_VERSION 2
     * }
     */
    public static int VK_EXT_ATTACHMENT_FEEDBACK_LOOP_LAYOUT_SPEC_VERSION() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_4444_formats 1
     * }
     */
    public static int VK_EXT_4444_formats() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_4444_FORMATS_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_4444_FORMATS_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_device_fault 1
     * }
     */
    public static int VK_EXT_device_fault() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_DEVICE_FAULT_SPEC_VERSION 2
     * }
     */
    public static int VK_EXT_DEVICE_FAULT_SPEC_VERSION() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define VK_ARM_rasterization_order_attachment_access 1
     * }
     */
    public static int VK_ARM_rasterization_order_attachment_access() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_ARM_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_SPEC_VERSION 1
     * }
     */
    public static int VK_ARM_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_rgba10x6_formats 1
     * }
     */
    public static int VK_EXT_rgba10x6_formats() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_RGBA10X6_FORMATS_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_RGBA10X6_FORMATS_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_VALVE_mutable_descriptor_type 1
     * }
     */
    public static int VK_VALVE_mutable_descriptor_type() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_VALVE_MUTABLE_DESCRIPTOR_TYPE_SPEC_VERSION 1
     * }
     */
    public static int VK_VALVE_MUTABLE_DESCRIPTOR_TYPE_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_vertex_input_dynamic_state 1
     * }
     */
    public static int VK_EXT_vertex_input_dynamic_state() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_VERTEX_INPUT_DYNAMIC_STATE_SPEC_VERSION 2
     * }
     */
    public static int VK_EXT_VERTEX_INPUT_DYNAMIC_STATE_SPEC_VERSION() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_physical_device_drm 1
     * }
     */
    public static int VK_EXT_physical_device_drm() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_PHYSICAL_DEVICE_DRM_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_PHYSICAL_DEVICE_DRM_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_device_address_binding_report 1
     * }
     */
    public static int VK_EXT_device_address_binding_report() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_DEVICE_ADDRESS_BINDING_REPORT_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_DEVICE_ADDRESS_BINDING_REPORT_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_depth_clip_control 1
     * }
     */
    public static int VK_EXT_depth_clip_control() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_DEPTH_CLIP_CONTROL_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_DEPTH_CLIP_CONTROL_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_primitive_topology_list_restart 1
     * }
     */
    public static int VK_EXT_primitive_topology_list_restart() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_PRIMITIVE_TOPOLOGY_LIST_RESTART_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_PRIMITIVE_TOPOLOGY_LIST_RESTART_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_HUAWEI_subpass_shading 1
     * }
     */
    public static int VK_HUAWEI_subpass_shading() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_HUAWEI_SUBPASS_SHADING_SPEC_VERSION 2
     * }
     */
    public static int VK_HUAWEI_SUBPASS_SHADING_SPEC_VERSION() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define VK_HUAWEI_invocation_mask 1
     * }
     */
    public static int VK_HUAWEI_invocation_mask() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_HUAWEI_INVOCATION_MASK_SPEC_VERSION 1
     * }
     */
    public static int VK_HUAWEI_INVOCATION_MASK_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_external_memory_rdma 1
     * }
     */
    public static int VK_NV_external_memory_rdma() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_EXTERNAL_MEMORY_RDMA_SPEC_VERSION 1
     * }
     */
    public static int VK_NV_EXTERNAL_MEMORY_RDMA_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_pipeline_properties 1
     * }
     */
    public static int VK_EXT_pipeline_properties() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_PIPELINE_PROPERTIES_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_PIPELINE_PROPERTIES_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_multisampled_render_to_single_sampled 1
     * }
     */
    public static int VK_EXT_multisampled_render_to_single_sampled() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_MULTISAMPLED_RENDER_TO_SINGLE_SAMPLED_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_MULTISAMPLED_RENDER_TO_SINGLE_SAMPLED_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_extended_dynamic_state2 1
     * }
     */
    public static int VK_EXT_extended_dynamic_state2() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_EXTENDED_DYNAMIC_STATE_2_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_EXTENDED_DYNAMIC_STATE_2_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_color_write_enable 1
     * }
     */
    public static int VK_EXT_color_write_enable() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_COLOR_WRITE_ENABLE_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_COLOR_WRITE_ENABLE_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_primitives_generated_query 1
     * }
     */
    public static int VK_EXT_primitives_generated_query() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_PRIMITIVES_GENERATED_QUERY_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_PRIMITIVES_GENERATED_QUERY_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_global_priority_query 1
     * }
     */
    public static int VK_EXT_global_priority_query() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_GLOBAL_PRIORITY_QUERY_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_GLOBAL_PRIORITY_QUERY_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_image_view_min_lod 1
     * }
     */
    public static int VK_EXT_image_view_min_lod() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_IMAGE_VIEW_MIN_LOD_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_IMAGE_VIEW_MIN_LOD_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_multi_draw 1
     * }
     */
    public static int VK_EXT_multi_draw() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_MULTI_DRAW_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_MULTI_DRAW_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_image_2d_view_of_3d 1
     * }
     */
    public static int VK_EXT_image_2d_view_of_3d() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_IMAGE_2D_VIEW_OF_3D_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_IMAGE_2D_VIEW_OF_3D_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_shader_tile_image 1
     * }
     */
    public static int VK_EXT_shader_tile_image() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_SHADER_TILE_IMAGE_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_SHADER_TILE_IMAGE_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_opacity_micromap 1
     * }
     */
    public static int VK_EXT_opacity_micromap() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_OPACITY_MICROMAP_SPEC_VERSION 2
     * }
     */
    public static int VK_EXT_OPACITY_MICROMAP_SPEC_VERSION() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_load_store_op_none 1
     * }
     */
    public static int VK_EXT_load_store_op_none() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_LOAD_STORE_OP_NONE_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_LOAD_STORE_OP_NONE_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_HUAWEI_cluster_culling_shader 1
     * }
     */
    public static int VK_HUAWEI_cluster_culling_shader() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_HUAWEI_CLUSTER_CULLING_SHADER_SPEC_VERSION 2
     * }
     */
    public static int VK_HUAWEI_CLUSTER_CULLING_SHADER_SPEC_VERSION() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_border_color_swizzle 1
     * }
     */
    public static int VK_EXT_border_color_swizzle() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_BORDER_COLOR_SWIZZLE_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_BORDER_COLOR_SWIZZLE_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_pageable_device_local_memory 1
     * }
     */
    public static int VK_EXT_pageable_device_local_memory() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_PAGEABLE_DEVICE_LOCAL_MEMORY_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_PAGEABLE_DEVICE_LOCAL_MEMORY_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_ARM_shader_core_properties 1
     * }
     */
    public static int VK_ARM_shader_core_properties() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_ARM_SHADER_CORE_PROPERTIES_SPEC_VERSION 1
     * }
     */
    public static int VK_ARM_SHADER_CORE_PROPERTIES_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_image_sliced_view_of_3d 1
     * }
     */
    public static int VK_EXT_image_sliced_view_of_3d() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_IMAGE_SLICED_VIEW_OF_3D_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_IMAGE_SLICED_VIEW_OF_3D_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_VALVE_descriptor_set_host_mapping 1
     * }
     */
    public static int VK_VALVE_descriptor_set_host_mapping() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_VALVE_DESCRIPTOR_SET_HOST_MAPPING_SPEC_VERSION 1
     * }
     */
    public static int VK_VALVE_DESCRIPTOR_SET_HOST_MAPPING_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_depth_clamp_zero_one 1
     * }
     */
    public static int VK_EXT_depth_clamp_zero_one() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_DEPTH_CLAMP_ZERO_ONE_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_DEPTH_CLAMP_ZERO_ONE_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_non_seamless_cube_map 1
     * }
     */
    public static int VK_EXT_non_seamless_cube_map() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_NON_SEAMLESS_CUBE_MAP_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_NON_SEAMLESS_CUBE_MAP_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_QCOM_fragment_density_map_offset 1
     * }
     */
    public static int VK_QCOM_fragment_density_map_offset() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_QCOM_FRAGMENT_DENSITY_MAP_OFFSET_SPEC_VERSION 1
     * }
     */
    public static int VK_QCOM_FRAGMENT_DENSITY_MAP_OFFSET_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_copy_memory_indirect 1
     * }
     */
    public static int VK_NV_copy_memory_indirect() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_COPY_MEMORY_INDIRECT_SPEC_VERSION 1
     * }
     */
    public static int VK_NV_COPY_MEMORY_INDIRECT_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_memory_decompression 1
     * }
     */
    public static int VK_NV_memory_decompression() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_MEMORY_DECOMPRESSION_SPEC_VERSION 1
     * }
     */
    public static int VK_NV_MEMORY_DECOMPRESSION_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_linear_color_attachment 1
     * }
     */
    public static int VK_NV_linear_color_attachment() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_LINEAR_COLOR_ATTACHMENT_SPEC_VERSION 1
     * }
     */
    public static int VK_NV_LINEAR_COLOR_ATTACHMENT_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_GOOGLE_surfaceless_query 1
     * }
     */
    public static int VK_GOOGLE_surfaceless_query() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_GOOGLE_SURFACELESS_QUERY_SPEC_VERSION 2
     * }
     */
    public static int VK_GOOGLE_SURFACELESS_QUERY_SPEC_VERSION() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_image_compression_control_swapchain 1
     * }
     */
    public static int VK_EXT_image_compression_control_swapchain() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_IMAGE_COMPRESSION_CONTROL_SWAPCHAIN_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_IMAGE_COMPRESSION_CONTROL_SWAPCHAIN_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_QCOM_image_processing 1
     * }
     */
    public static int VK_QCOM_image_processing() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_QCOM_IMAGE_PROCESSING_SPEC_VERSION 1
     * }
     */
    public static int VK_QCOM_IMAGE_PROCESSING_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_extended_dynamic_state3 1
     * }
     */
    public static int VK_EXT_extended_dynamic_state3() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_EXTENDED_DYNAMIC_STATE_3_SPEC_VERSION 2
     * }
     */
    public static int VK_EXT_EXTENDED_DYNAMIC_STATE_3_SPEC_VERSION() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_subpass_merge_feedback 1
     * }
     */
    public static int VK_EXT_subpass_merge_feedback() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_SUBPASS_MERGE_FEEDBACK_SPEC_VERSION 2
     * }
     */
    public static int VK_EXT_SUBPASS_MERGE_FEEDBACK_SPEC_VERSION() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define VK_LUNARG_direct_driver_loading 1
     * }
     */
    public static int VK_LUNARG_direct_driver_loading() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_LUNARG_DIRECT_DRIVER_LOADING_SPEC_VERSION 1
     * }
     */
    public static int VK_LUNARG_DIRECT_DRIVER_LOADING_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_shader_module_identifier 1
     * }
     */
    public static int VK_EXT_shader_module_identifier() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_SHADER_MODULE_IDENTIFIER_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_SHADER_MODULE_IDENTIFIER_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_rasterization_order_attachment_access 1
     * }
     */
    public static int VK_EXT_rasterization_order_attachment_access() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_optical_flow 1
     * }
     */
    public static int VK_NV_optical_flow() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_OPTICAL_FLOW_SPEC_VERSION 1
     * }
     */
    public static int VK_NV_OPTICAL_FLOW_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_legacy_dithering 1
     * }
     */
    public static int VK_EXT_legacy_dithering() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_LEGACY_DITHERING_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_LEGACY_DITHERING_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_pipeline_protected_access 1
     * }
     */
    public static int VK_EXT_pipeline_protected_access() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_PIPELINE_PROTECTED_ACCESS_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_PIPELINE_PROTECTED_ACCESS_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_shader_object 1
     * }
     */
    public static int VK_EXT_shader_object() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_SHADER_OBJECT_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_SHADER_OBJECT_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_QCOM_tile_properties 1
     * }
     */
    public static int VK_QCOM_tile_properties() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_QCOM_TILE_PROPERTIES_SPEC_VERSION 1
     * }
     */
    public static int VK_QCOM_TILE_PROPERTIES_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_SEC_amigo_profiling 1
     * }
     */
    public static int VK_SEC_amigo_profiling() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_SEC_AMIGO_PROFILING_SPEC_VERSION 1
     * }
     */
    public static int VK_SEC_AMIGO_PROFILING_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_QCOM_multiview_per_view_viewports 1
     * }
     */
    public static int VK_QCOM_multiview_per_view_viewports() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_QCOM_MULTIVIEW_PER_VIEW_VIEWPORTS_SPEC_VERSION 1
     * }
     */
    public static int VK_QCOM_MULTIVIEW_PER_VIEW_VIEWPORTS_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_ray_tracing_invocation_reorder 1
     * }
     */
    public static int VK_NV_ray_tracing_invocation_reorder() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_RAY_TRACING_INVOCATION_REORDER_SPEC_VERSION 1
     * }
     */
    public static int VK_NV_RAY_TRACING_INVOCATION_REORDER_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_mutable_descriptor_type 1
     * }
     */
    public static int VK_EXT_mutable_descriptor_type() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_MUTABLE_DESCRIPTOR_TYPE_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_MUTABLE_DESCRIPTOR_TYPE_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_ARM_shader_core_builtins 1
     * }
     */
    public static int VK_ARM_shader_core_builtins() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_ARM_SHADER_CORE_BUILTINS_SPEC_VERSION 2
     * }
     */
    public static int VK_ARM_SHADER_CORE_BUILTINS_SPEC_VERSION() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_pipeline_library_group_handles 1
     * }
     */
    public static int VK_EXT_pipeline_library_group_handles() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_PIPELINE_LIBRARY_GROUP_HANDLES_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_PIPELINE_LIBRARY_GROUP_HANDLES_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_QCOM_multiview_per_view_render_areas 1
     * }
     */
    public static int VK_QCOM_multiview_per_view_render_areas() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_QCOM_MULTIVIEW_PER_VIEW_RENDER_AREAS_SPEC_VERSION 1
     * }
     */
    public static int VK_QCOM_MULTIVIEW_PER_VIEW_RENDER_AREAS_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_attachment_feedback_loop_dynamic_state 1
     * }
     */
    public static int VK_EXT_attachment_feedback_loop_dynamic_state() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_ATTACHMENT_FEEDBACK_LOOP_DYNAMIC_STATE_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_ATTACHMENT_FEEDBACK_LOOP_DYNAMIC_STATE_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_acceleration_structure 1
     * }
     */
    public static int VK_KHR_acceleration_structure() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_ACCELERATION_STRUCTURE_SPEC_VERSION 13
     * }
     */
    public static int VK_KHR_ACCELERATION_STRUCTURE_SPEC_VERSION() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_ray_tracing_pipeline 1
     * }
     */
    public static int VK_KHR_ray_tracing_pipeline() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_RAY_TRACING_PIPELINE_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_RAY_TRACING_PIPELINE_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_ray_query 1
     * }
     */
    public static int VK_KHR_ray_query() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_RAY_QUERY_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_RAY_QUERY_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_mesh_shader 1
     * }
     */
    public static int VK_EXT_mesh_shader() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_MESH_SHADER_SPEC_VERSION 1
     * }
     */
    public static int VK_EXT_MESH_SHADER_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define WINAPI_FAMILY_PC_APP 2
     * }
     */
    public static int WINAPI_FAMILY_PC_APP() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define WINAPI_FAMILY_PHONE_APP 3
     * }
     */
    public static int WINAPI_FAMILY_PHONE_APP() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define WINAPI_FAMILY_SYSTEM 4
     * }
     */
    public static int WINAPI_FAMILY_SYSTEM() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define WINAPI_FAMILY_SERVER 5
     * }
     */
    public static int WINAPI_FAMILY_SERVER() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * #define WINAPI_FAMILY_GAMES 6
     * }
     */
    public static int WINAPI_FAMILY_GAMES() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * #define WINAPI_FAMILY_DESKTOP_APP 100
     * }
     */
    public static int WINAPI_FAMILY_DESKTOP_APP() {
        return (int)100L;
    }
    /**
     * {@snippet :
     * #define GL_VERSION_1_1 1
     * }
     */
    public static int GL_VERSION_1_1() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define GL_ACCUM 256
     * }
     */
    public static int GL_ACCUM() {
        return (int)256L;
    }
    /**
     * {@snippet :
     * #define GL_LOAD 257
     * }
     */
    public static int GL_LOAD() {
        return (int)257L;
    }
    /**
     * {@snippet :
     * #define GL_RETURN 258
     * }
     */
    public static int GL_RETURN() {
        return (int)258L;
    }
    /**
     * {@snippet :
     * #define GL_MULT 259
     * }
     */
    public static int GL_MULT() {
        return (int)259L;
    }
    /**
     * {@snippet :
     * #define GL_ADD 260
     * }
     */
    public static int GL_ADD() {
        return (int)260L;
    }
    /**
     * {@snippet :
     * #define GL_NEVER 512
     * }
     */
    public static int GL_NEVER() {
        return (int)512L;
    }
    /**
     * {@snippet :
     * #define GL_LESS 513
     * }
     */
    public static int GL_LESS() {
        return (int)513L;
    }
    /**
     * {@snippet :
     * #define GL_EQUAL 514
     * }
     */
    public static int GL_EQUAL() {
        return (int)514L;
    }
    /**
     * {@snippet :
     * #define GL_LEQUAL 515
     * }
     */
    public static int GL_LEQUAL() {
        return (int)515L;
    }
    /**
     * {@snippet :
     * #define GL_GREATER 516
     * }
     */
    public static int GL_GREATER() {
        return (int)516L;
    }
    /**
     * {@snippet :
     * #define GL_NOTEQUAL 517
     * }
     */
    public static int GL_NOTEQUAL() {
        return (int)517L;
    }
    /**
     * {@snippet :
     * #define GL_GEQUAL 518
     * }
     */
    public static int GL_GEQUAL() {
        return (int)518L;
    }
    /**
     * {@snippet :
     * #define GL_ALWAYS 519
     * }
     */
    public static int GL_ALWAYS() {
        return (int)519L;
    }
    /**
     * {@snippet :
     * #define GL_CURRENT_BIT 1
     * }
     */
    public static int GL_CURRENT_BIT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define GL_POINT_BIT 2
     * }
     */
    public static int GL_POINT_BIT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define GL_LINE_BIT 4
     * }
     */
    public static int GL_LINE_BIT() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define GL_POLYGON_BIT 8
     * }
     */
    public static int GL_POLYGON_BIT() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define GL_POLYGON_STIPPLE_BIT 16
     * }
     */
    public static int GL_POLYGON_STIPPLE_BIT() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define GL_PIXEL_MODE_BIT 32
     * }
     */
    public static int GL_PIXEL_MODE_BIT() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * #define GL_LIGHTING_BIT 64
     * }
     */
    public static int GL_LIGHTING_BIT() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * #define GL_FOG_BIT 128
     * }
     */
    public static int GL_FOG_BIT() {
        return (int)128L;
    }
    /**
     * {@snippet :
     * #define GL_DEPTH_BUFFER_BIT 256
     * }
     */
    public static int GL_DEPTH_BUFFER_BIT() {
        return (int)256L;
    }
    /**
     * {@snippet :
     * #define GL_ACCUM_BUFFER_BIT 512
     * }
     */
    public static int GL_ACCUM_BUFFER_BIT() {
        return (int)512L;
    }
    /**
     * {@snippet :
     * #define GL_STENCIL_BUFFER_BIT 1024
     * }
     */
    public static int GL_STENCIL_BUFFER_BIT() {
        return (int)1024L;
    }
    /**
     * {@snippet :
     * #define GL_VIEWPORT_BIT 2048
     * }
     */
    public static int GL_VIEWPORT_BIT() {
        return (int)2048L;
    }
    /**
     * {@snippet :
     * #define GL_TRANSFORM_BIT 4096
     * }
     */
    public static int GL_TRANSFORM_BIT() {
        return (int)4096L;
    }
    /**
     * {@snippet :
     * #define GL_ENABLE_BIT 8192
     * }
     */
    public static int GL_ENABLE_BIT() {
        return (int)8192L;
    }
    /**
     * {@snippet :
     * #define GL_COLOR_BUFFER_BIT 16384
     * }
     */
    public static int GL_COLOR_BUFFER_BIT() {
        return (int)16384L;
    }
    /**
     * {@snippet :
     * #define GL_HINT_BIT 32768
     * }
     */
    public static int GL_HINT_BIT() {
        return (int)32768L;
    }
    /**
     * {@snippet :
     * #define GL_EVAL_BIT 65536
     * }
     */
    public static int GL_EVAL_BIT() {
        return (int)65536L;
    }
    /**
     * {@snippet :
     * #define GL_LIST_BIT 131072
     * }
     */
    public static int GL_LIST_BIT() {
        return (int)131072L;
    }
    /**
     * {@snippet :
     * #define GL_TEXTURE_BIT 262144
     * }
     */
    public static int GL_TEXTURE_BIT() {
        return (int)262144L;
    }
    /**
     * {@snippet :
     * #define GL_SCISSOR_BIT 524288
     * }
     */
    public static int GL_SCISSOR_BIT() {
        return (int)524288L;
    }
    /**
     * {@snippet :
     * #define GL_ALL_ATTRIB_BITS 1048575
     * }
     */
    public static int GL_ALL_ATTRIB_BITS() {
        return (int)1048575L;
    }
    /**
     * {@snippet :
     * #define GL_POINTS 0
     * }
     */
    public static int GL_POINTS() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define GL_LINES 1
     * }
     */
    public static int GL_LINES() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define GL_LINE_LOOP 2
     * }
     */
    public static int GL_LINE_LOOP() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define GL_LINE_STRIP 3
     * }
     */
    public static int GL_LINE_STRIP() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define GL_TRIANGLES 4
     * }
     */
    public static int GL_TRIANGLES() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define GL_TRIANGLE_STRIP 5
     * }
     */
    public static int GL_TRIANGLE_STRIP() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * #define GL_TRIANGLE_FAN 6
     * }
     */
    public static int GL_TRIANGLE_FAN() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * #define GL_QUADS 7
     * }
     */
    public static int GL_QUADS() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * #define GL_QUAD_STRIP 8
     * }
     */
    public static int GL_QUAD_STRIP() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define GL_POLYGON 9
     * }
     */
    public static int GL_POLYGON() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * #define GL_ZERO 0
     * }
     */
    public static int GL_ZERO() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define GL_ONE 1
     * }
     */
    public static int GL_ONE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define GL_SRC_COLOR 768
     * }
     */
    public static int GL_SRC_COLOR() {
        return (int)768L;
    }
    /**
     * {@snippet :
     * #define GL_ONE_MINUS_SRC_COLOR 769
     * }
     */
    public static int GL_ONE_MINUS_SRC_COLOR() {
        return (int)769L;
    }
    /**
     * {@snippet :
     * #define GL_SRC_ALPHA 770
     * }
     */
    public static int GL_SRC_ALPHA() {
        return (int)770L;
    }
    /**
     * {@snippet :
     * #define GL_ONE_MINUS_SRC_ALPHA 771
     * }
     */
    public static int GL_ONE_MINUS_SRC_ALPHA() {
        return (int)771L;
    }
    /**
     * {@snippet :
     * #define GL_DST_ALPHA 772
     * }
     */
    public static int GL_DST_ALPHA() {
        return (int)772L;
    }
    /**
     * {@snippet :
     * #define GL_ONE_MINUS_DST_ALPHA 773
     * }
     */
    public static int GL_ONE_MINUS_DST_ALPHA() {
        return (int)773L;
    }
    /**
     * {@snippet :
     * #define GL_DST_COLOR 774
     * }
     */
    public static int GL_DST_COLOR() {
        return (int)774L;
    }
    /**
     * {@snippet :
     * #define GL_ONE_MINUS_DST_COLOR 775
     * }
     */
    public static int GL_ONE_MINUS_DST_COLOR() {
        return (int)775L;
    }
    /**
     * {@snippet :
     * #define GL_SRC_ALPHA_SATURATE 776
     * }
     */
    public static int GL_SRC_ALPHA_SATURATE() {
        return (int)776L;
    }
    /**
     * {@snippet :
     * #define GL_TRUE 1
     * }
     */
    public static int GL_TRUE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define GL_FALSE 0
     * }
     */
    public static int GL_FALSE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define GL_CLIP_PLANE0 12288
     * }
     */
    public static int GL_CLIP_PLANE0() {
        return (int)12288L;
    }
    /**
     * {@snippet :
     * #define GL_CLIP_PLANE1 12289
     * }
     */
    public static int GL_CLIP_PLANE1() {
        return (int)12289L;
    }
    /**
     * {@snippet :
     * #define GL_CLIP_PLANE2 12290
     * }
     */
    public static int GL_CLIP_PLANE2() {
        return (int)12290L;
    }
    /**
     * {@snippet :
     * #define GL_CLIP_PLANE3 12291
     * }
     */
    public static int GL_CLIP_PLANE3() {
        return (int)12291L;
    }
    /**
     * {@snippet :
     * #define GL_CLIP_PLANE4 12292
     * }
     */
    public static int GL_CLIP_PLANE4() {
        return (int)12292L;
    }
    /**
     * {@snippet :
     * #define GL_CLIP_PLANE5 12293
     * }
     */
    public static int GL_CLIP_PLANE5() {
        return (int)12293L;
    }
    /**
     * {@snippet :
     * #define GL_BYTE 5120
     * }
     */
    public static int GL_BYTE() {
        return (int)5120L;
    }
    /**
     * {@snippet :
     * #define GL_UNSIGNED_BYTE 5121
     * }
     */
    public static int GL_UNSIGNED_BYTE() {
        return (int)5121L;
    }
    /**
     * {@snippet :
     * #define GL_SHORT 5122
     * }
     */
    public static int GL_SHORT() {
        return (int)5122L;
    }
    /**
     * {@snippet :
     * #define GL_UNSIGNED_SHORT 5123
     * }
     */
    public static int GL_UNSIGNED_SHORT() {
        return (int)5123L;
    }
    /**
     * {@snippet :
     * #define GL_INT 5124
     * }
     */
    public static int GL_INT() {
        return (int)5124L;
    }
    /**
     * {@snippet :
     * #define GL_UNSIGNED_INT 5125
     * }
     */
    public static int GL_UNSIGNED_INT() {
        return (int)5125L;
    }
    /**
     * {@snippet :
     * #define GL_FLOAT 5126
     * }
     */
    public static int GL_FLOAT() {
        return (int)5126L;
    }
    /**
     * {@snippet :
     * #define GL_2_BYTES 5127
     * }
     */
    public static int GL_2_BYTES() {
        return (int)5127L;
    }
    /**
     * {@snippet :
     * #define GL_3_BYTES 5128
     * }
     */
    public static int GL_3_BYTES() {
        return (int)5128L;
    }
    /**
     * {@snippet :
     * #define GL_4_BYTES 5129
     * }
     */
    public static int GL_4_BYTES() {
        return (int)5129L;
    }
    /**
     * {@snippet :
     * #define GL_DOUBLE 5130
     * }
     */
    public static int GL_DOUBLE() {
        return (int)5130L;
    }
    /**
     * {@snippet :
     * #define GL_NONE 0
     * }
     */
    public static int GL_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define GL_FRONT_LEFT 1024
     * }
     */
    public static int GL_FRONT_LEFT() {
        return (int)1024L;
    }
    /**
     * {@snippet :
     * #define GL_FRONT_RIGHT 1025
     * }
     */
    public static int GL_FRONT_RIGHT() {
        return (int)1025L;
    }
    /**
     * {@snippet :
     * #define GL_BACK_LEFT 1026
     * }
     */
    public static int GL_BACK_LEFT() {
        return (int)1026L;
    }
    /**
     * {@snippet :
     * #define GL_BACK_RIGHT 1027
     * }
     */
    public static int GL_BACK_RIGHT() {
        return (int)1027L;
    }
    /**
     * {@snippet :
     * #define GL_FRONT 1028
     * }
     */
    public static int GL_FRONT() {
        return (int)1028L;
    }
    /**
     * {@snippet :
     * #define GL_BACK 1029
     * }
     */
    public static int GL_BACK() {
        return (int)1029L;
    }
    /**
     * {@snippet :
     * #define GL_LEFT 1030
     * }
     */
    public static int GL_LEFT() {
        return (int)1030L;
    }
    /**
     * {@snippet :
     * #define GL_RIGHT 1031
     * }
     */
    public static int GL_RIGHT() {
        return (int)1031L;
    }
    /**
     * {@snippet :
     * #define GL_FRONT_AND_BACK 1032
     * }
     */
    public static int GL_FRONT_AND_BACK() {
        return (int)1032L;
    }
    /**
     * {@snippet :
     * #define GL_AUX0 1033
     * }
     */
    public static int GL_AUX0() {
        return (int)1033L;
    }
    /**
     * {@snippet :
     * #define GL_AUX1 1034
     * }
     */
    public static int GL_AUX1() {
        return (int)1034L;
    }
    /**
     * {@snippet :
     * #define GL_AUX2 1035
     * }
     */
    public static int GL_AUX2() {
        return (int)1035L;
    }
    /**
     * {@snippet :
     * #define GL_AUX3 1036
     * }
     */
    public static int GL_AUX3() {
        return (int)1036L;
    }
    /**
     * {@snippet :
     * #define GL_NO_ERROR 0
     * }
     */
    public static int GL_NO_ERROR() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define GL_INVALID_ENUM 1280
     * }
     */
    public static int GL_INVALID_ENUM() {
        return (int)1280L;
    }
    /**
     * {@snippet :
     * #define GL_INVALID_VALUE 1281
     * }
     */
    public static int GL_INVALID_VALUE() {
        return (int)1281L;
    }
    /**
     * {@snippet :
     * #define GL_INVALID_OPERATION 1282
     * }
     */
    public static int GL_INVALID_OPERATION() {
        return (int)1282L;
    }
    /**
     * {@snippet :
     * #define GL_STACK_OVERFLOW 1283
     * }
     */
    public static int GL_STACK_OVERFLOW() {
        return (int)1283L;
    }
    /**
     * {@snippet :
     * #define GL_STACK_UNDERFLOW 1284
     * }
     */
    public static int GL_STACK_UNDERFLOW() {
        return (int)1284L;
    }
    /**
     * {@snippet :
     * #define GL_OUT_OF_MEMORY 1285
     * }
     */
    public static int GL_OUT_OF_MEMORY() {
        return (int)1285L;
    }
    /**
     * {@snippet :
     * #define GL_2D 1536
     * }
     */
    public static int GL_2D() {
        return (int)1536L;
    }
    /**
     * {@snippet :
     * #define GL_3D 1537
     * }
     */
    public static int GL_3D() {
        return (int)1537L;
    }
    /**
     * {@snippet :
     * #define GL_3D_COLOR 1538
     * }
     */
    public static int GL_3D_COLOR() {
        return (int)1538L;
    }
    /**
     * {@snippet :
     * #define GL_3D_COLOR_TEXTURE 1539
     * }
     */
    public static int GL_3D_COLOR_TEXTURE() {
        return (int)1539L;
    }
    /**
     * {@snippet :
     * #define GL_4D_COLOR_TEXTURE 1540
     * }
     */
    public static int GL_4D_COLOR_TEXTURE() {
        return (int)1540L;
    }
    /**
     * {@snippet :
     * #define GL_PASS_THROUGH_TOKEN 1792
     * }
     */
    public static int GL_PASS_THROUGH_TOKEN() {
        return (int)1792L;
    }
    /**
     * {@snippet :
     * #define GL_POINT_TOKEN 1793
     * }
     */
    public static int GL_POINT_TOKEN() {
        return (int)1793L;
    }
    /**
     * {@snippet :
     * #define GL_LINE_TOKEN 1794
     * }
     */
    public static int GL_LINE_TOKEN() {
        return (int)1794L;
    }
    /**
     * {@snippet :
     * #define GL_POLYGON_TOKEN 1795
     * }
     */
    public static int GL_POLYGON_TOKEN() {
        return (int)1795L;
    }
    /**
     * {@snippet :
     * #define GL_BITMAP_TOKEN 1796
     * }
     */
    public static int GL_BITMAP_TOKEN() {
        return (int)1796L;
    }
    /**
     * {@snippet :
     * #define GL_DRAW_PIXEL_TOKEN 1797
     * }
     */
    public static int GL_DRAW_PIXEL_TOKEN() {
        return (int)1797L;
    }
    /**
     * {@snippet :
     * #define GL_COPY_PIXEL_TOKEN 1798
     * }
     */
    public static int GL_COPY_PIXEL_TOKEN() {
        return (int)1798L;
    }
    /**
     * {@snippet :
     * #define GL_LINE_RESET_TOKEN 1799
     * }
     */
    public static int GL_LINE_RESET_TOKEN() {
        return (int)1799L;
    }
    /**
     * {@snippet :
     * #define GL_EXP 2048
     * }
     */
    public static int GL_EXP() {
        return (int)2048L;
    }
    /**
     * {@snippet :
     * #define GL_EXP2 2049
     * }
     */
    public static int GL_EXP2() {
        return (int)2049L;
    }
    /**
     * {@snippet :
     * #define GL_CW 2304
     * }
     */
    public static int GL_CW() {
        return (int)2304L;
    }
    /**
     * {@snippet :
     * #define GL_CCW 2305
     * }
     */
    public static int GL_CCW() {
        return (int)2305L;
    }
    /**
     * {@snippet :
     * #define GL_COEFF 2560
     * }
     */
    public static int GL_COEFF() {
        return (int)2560L;
    }
    /**
     * {@snippet :
     * #define GL_ORDER 2561
     * }
     */
    public static int GL_ORDER() {
        return (int)2561L;
    }
    /**
     * {@snippet :
     * #define GL_DOMAIN 2562
     * }
     */
    public static int GL_DOMAIN() {
        return (int)2562L;
    }
    /**
     * {@snippet :
     * #define GL_CURRENT_COLOR 2816
     * }
     */
    public static int GL_CURRENT_COLOR() {
        return (int)2816L;
    }
    /**
     * {@snippet :
     * #define GL_CURRENT_INDEX 2817
     * }
     */
    public static int GL_CURRENT_INDEX() {
        return (int)2817L;
    }
    /**
     * {@snippet :
     * #define GL_CURRENT_NORMAL 2818
     * }
     */
    public static int GL_CURRENT_NORMAL() {
        return (int)2818L;
    }
    /**
     * {@snippet :
     * #define GL_CURRENT_TEXTURE_COORDS 2819
     * }
     */
    public static int GL_CURRENT_TEXTURE_COORDS() {
        return (int)2819L;
    }
    /**
     * {@snippet :
     * #define GL_CURRENT_RASTER_COLOR 2820
     * }
     */
    public static int GL_CURRENT_RASTER_COLOR() {
        return (int)2820L;
    }
    /**
     * {@snippet :
     * #define GL_CURRENT_RASTER_INDEX 2821
     * }
     */
    public static int GL_CURRENT_RASTER_INDEX() {
        return (int)2821L;
    }
    /**
     * {@snippet :
     * #define GL_CURRENT_RASTER_TEXTURE_COORDS 2822
     * }
     */
    public static int GL_CURRENT_RASTER_TEXTURE_COORDS() {
        return (int)2822L;
    }
    /**
     * {@snippet :
     * #define GL_CURRENT_RASTER_POSITION 2823
     * }
     */
    public static int GL_CURRENT_RASTER_POSITION() {
        return (int)2823L;
    }
    /**
     * {@snippet :
     * #define GL_CURRENT_RASTER_POSITION_VALID 2824
     * }
     */
    public static int GL_CURRENT_RASTER_POSITION_VALID() {
        return (int)2824L;
    }
    /**
     * {@snippet :
     * #define GL_CURRENT_RASTER_DISTANCE 2825
     * }
     */
    public static int GL_CURRENT_RASTER_DISTANCE() {
        return (int)2825L;
    }
    /**
     * {@snippet :
     * #define GL_POINT_SMOOTH 2832
     * }
     */
    public static int GL_POINT_SMOOTH() {
        return (int)2832L;
    }
    /**
     * {@snippet :
     * #define GL_POINT_SIZE 2833
     * }
     */
    public static int GL_POINT_SIZE() {
        return (int)2833L;
    }
    /**
     * {@snippet :
     * #define GL_POINT_SIZE_RANGE 2834
     * }
     */
    public static int GL_POINT_SIZE_RANGE() {
        return (int)2834L;
    }
    /**
     * {@snippet :
     * #define GL_POINT_SIZE_GRANULARITY 2835
     * }
     */
    public static int GL_POINT_SIZE_GRANULARITY() {
        return (int)2835L;
    }
    /**
     * {@snippet :
     * #define GL_LINE_SMOOTH 2848
     * }
     */
    public static int GL_LINE_SMOOTH() {
        return (int)2848L;
    }
    /**
     * {@snippet :
     * #define GL_LINE_WIDTH 2849
     * }
     */
    public static int GL_LINE_WIDTH() {
        return (int)2849L;
    }
    /**
     * {@snippet :
     * #define GL_LINE_WIDTH_RANGE 2850
     * }
     */
    public static int GL_LINE_WIDTH_RANGE() {
        return (int)2850L;
    }
    /**
     * {@snippet :
     * #define GL_LINE_WIDTH_GRANULARITY 2851
     * }
     */
    public static int GL_LINE_WIDTH_GRANULARITY() {
        return (int)2851L;
    }
    /**
     * {@snippet :
     * #define GL_LINE_STIPPLE 2852
     * }
     */
    public static int GL_LINE_STIPPLE() {
        return (int)2852L;
    }
    /**
     * {@snippet :
     * #define GL_LINE_STIPPLE_PATTERN 2853
     * }
     */
    public static int GL_LINE_STIPPLE_PATTERN() {
        return (int)2853L;
    }
    /**
     * {@snippet :
     * #define GL_LINE_STIPPLE_REPEAT 2854
     * }
     */
    public static int GL_LINE_STIPPLE_REPEAT() {
        return (int)2854L;
    }
    /**
     * {@snippet :
     * #define GL_LIST_MODE 2864
     * }
     */
    public static int GL_LIST_MODE() {
        return (int)2864L;
    }
    /**
     * {@snippet :
     * #define GL_MAX_LIST_NESTING 2865
     * }
     */
    public static int GL_MAX_LIST_NESTING() {
        return (int)2865L;
    }
    /**
     * {@snippet :
     * #define GL_LIST_BASE 2866
     * }
     */
    public static int GL_LIST_BASE() {
        return (int)2866L;
    }
    /**
     * {@snippet :
     * #define GL_LIST_INDEX 2867
     * }
     */
    public static int GL_LIST_INDEX() {
        return (int)2867L;
    }
    /**
     * {@snippet :
     * #define GL_POLYGON_MODE 2880
     * }
     */
    public static int GL_POLYGON_MODE() {
        return (int)2880L;
    }
    /**
     * {@snippet :
     * #define GL_POLYGON_SMOOTH 2881
     * }
     */
    public static int GL_POLYGON_SMOOTH() {
        return (int)2881L;
    }
    /**
     * {@snippet :
     * #define GL_POLYGON_STIPPLE 2882
     * }
     */
    public static int GL_POLYGON_STIPPLE() {
        return (int)2882L;
    }
    /**
     * {@snippet :
     * #define GL_EDGE_FLAG 2883
     * }
     */
    public static int GL_EDGE_FLAG() {
        return (int)2883L;
    }
    /**
     * {@snippet :
     * #define GL_CULL_FACE 2884
     * }
     */
    public static int GL_CULL_FACE() {
        return (int)2884L;
    }
    /**
     * {@snippet :
     * #define GL_CULL_FACE_MODE 2885
     * }
     */
    public static int GL_CULL_FACE_MODE() {
        return (int)2885L;
    }
    /**
     * {@snippet :
     * #define GL_FRONT_FACE 2886
     * }
     */
    public static int GL_FRONT_FACE() {
        return (int)2886L;
    }
    /**
     * {@snippet :
     * #define GL_LIGHTING 2896
     * }
     */
    public static int GL_LIGHTING() {
        return (int)2896L;
    }
    /**
     * {@snippet :
     * #define GL_LIGHT_MODEL_LOCAL_VIEWER 2897
     * }
     */
    public static int GL_LIGHT_MODEL_LOCAL_VIEWER() {
        return (int)2897L;
    }
    /**
     * {@snippet :
     * #define GL_LIGHT_MODEL_TWO_SIDE 2898
     * }
     */
    public static int GL_LIGHT_MODEL_TWO_SIDE() {
        return (int)2898L;
    }
    /**
     * {@snippet :
     * #define GL_LIGHT_MODEL_AMBIENT 2899
     * }
     */
    public static int GL_LIGHT_MODEL_AMBIENT() {
        return (int)2899L;
    }
    /**
     * {@snippet :
     * #define GL_SHADE_MODEL 2900
     * }
     */
    public static int GL_SHADE_MODEL() {
        return (int)2900L;
    }
    /**
     * {@snippet :
     * #define GL_COLOR_MATERIAL_FACE 2901
     * }
     */
    public static int GL_COLOR_MATERIAL_FACE() {
        return (int)2901L;
    }
    /**
     * {@snippet :
     * #define GL_COLOR_MATERIAL_PARAMETER 2902
     * }
     */
    public static int GL_COLOR_MATERIAL_PARAMETER() {
        return (int)2902L;
    }
    /**
     * {@snippet :
     * #define GL_COLOR_MATERIAL 2903
     * }
     */
    public static int GL_COLOR_MATERIAL() {
        return (int)2903L;
    }
    /**
     * {@snippet :
     * #define GL_FOG 2912
     * }
     */
    public static int GL_FOG() {
        return (int)2912L;
    }
    /**
     * {@snippet :
     * #define GL_FOG_INDEX 2913
     * }
     */
    public static int GL_FOG_INDEX() {
        return (int)2913L;
    }
    /**
     * {@snippet :
     * #define GL_FOG_DENSITY 2914
     * }
     */
    public static int GL_FOG_DENSITY() {
        return (int)2914L;
    }
    /**
     * {@snippet :
     * #define GL_FOG_START 2915
     * }
     */
    public static int GL_FOG_START() {
        return (int)2915L;
    }
    /**
     * {@snippet :
     * #define GL_FOG_END 2916
     * }
     */
    public static int GL_FOG_END() {
        return (int)2916L;
    }
    /**
     * {@snippet :
     * #define GL_FOG_MODE 2917
     * }
     */
    public static int GL_FOG_MODE() {
        return (int)2917L;
    }
    /**
     * {@snippet :
     * #define GL_FOG_COLOR 2918
     * }
     */
    public static int GL_FOG_COLOR() {
        return (int)2918L;
    }
    /**
     * {@snippet :
     * #define GL_DEPTH_RANGE 2928
     * }
     */
    public static int GL_DEPTH_RANGE() {
        return (int)2928L;
    }
    /**
     * {@snippet :
     * #define GL_DEPTH_TEST 2929
     * }
     */
    public static int GL_DEPTH_TEST() {
        return (int)2929L;
    }
    /**
     * {@snippet :
     * #define GL_DEPTH_WRITEMASK 2930
     * }
     */
    public static int GL_DEPTH_WRITEMASK() {
        return (int)2930L;
    }
    /**
     * {@snippet :
     * #define GL_DEPTH_CLEAR_VALUE 2931
     * }
     */
    public static int GL_DEPTH_CLEAR_VALUE() {
        return (int)2931L;
    }
    /**
     * {@snippet :
     * #define GL_DEPTH_FUNC 2932
     * }
     */
    public static int GL_DEPTH_FUNC() {
        return (int)2932L;
    }
    /**
     * {@snippet :
     * #define GL_ACCUM_CLEAR_VALUE 2944
     * }
     */
    public static int GL_ACCUM_CLEAR_VALUE() {
        return (int)2944L;
    }
    /**
     * {@snippet :
     * #define GL_STENCIL_TEST 2960
     * }
     */
    public static int GL_STENCIL_TEST() {
        return (int)2960L;
    }
    /**
     * {@snippet :
     * #define GL_STENCIL_CLEAR_VALUE 2961
     * }
     */
    public static int GL_STENCIL_CLEAR_VALUE() {
        return (int)2961L;
    }
    /**
     * {@snippet :
     * #define GL_STENCIL_FUNC 2962
     * }
     */
    public static int GL_STENCIL_FUNC() {
        return (int)2962L;
    }
    /**
     * {@snippet :
     * #define GL_STENCIL_VALUE_MASK 2963
     * }
     */
    public static int GL_STENCIL_VALUE_MASK() {
        return (int)2963L;
    }
    /**
     * {@snippet :
     * #define GL_STENCIL_FAIL 2964
     * }
     */
    public static int GL_STENCIL_FAIL() {
        return (int)2964L;
    }
    /**
     * {@snippet :
     * #define GL_STENCIL_PASS_DEPTH_FAIL 2965
     * }
     */
    public static int GL_STENCIL_PASS_DEPTH_FAIL() {
        return (int)2965L;
    }
    /**
     * {@snippet :
     * #define GL_STENCIL_PASS_DEPTH_PASS 2966
     * }
     */
    public static int GL_STENCIL_PASS_DEPTH_PASS() {
        return (int)2966L;
    }
    /**
     * {@snippet :
     * #define GL_STENCIL_REF 2967
     * }
     */
    public static int GL_STENCIL_REF() {
        return (int)2967L;
    }
    /**
     * {@snippet :
     * #define GL_STENCIL_WRITEMASK 2968
     * }
     */
    public static int GL_STENCIL_WRITEMASK() {
        return (int)2968L;
    }
    /**
     * {@snippet :
     * #define GL_MATRIX_MODE 2976
     * }
     */
    public static int GL_MATRIX_MODE() {
        return (int)2976L;
    }
    /**
     * {@snippet :
     * #define GL_NORMALIZE 2977
     * }
     */
    public static int GL_NORMALIZE() {
        return (int)2977L;
    }
    /**
     * {@snippet :
     * #define GL_VIEWPORT 2978
     * }
     */
    public static int GL_VIEWPORT() {
        return (int)2978L;
    }
    /**
     * {@snippet :
     * #define GL_MODELVIEW_STACK_DEPTH 2979
     * }
     */
    public static int GL_MODELVIEW_STACK_DEPTH() {
        return (int)2979L;
    }
    /**
     * {@snippet :
     * #define GL_PROJECTION_STACK_DEPTH 2980
     * }
     */
    public static int GL_PROJECTION_STACK_DEPTH() {
        return (int)2980L;
    }
    /**
     * {@snippet :
     * #define GL_TEXTURE_STACK_DEPTH 2981
     * }
     */
    public static int GL_TEXTURE_STACK_DEPTH() {
        return (int)2981L;
    }
    /**
     * {@snippet :
     * #define GL_MODELVIEW_MATRIX 2982
     * }
     */
    public static int GL_MODELVIEW_MATRIX() {
        return (int)2982L;
    }
    /**
     * {@snippet :
     * #define GL_PROJECTION_MATRIX 2983
     * }
     */
    public static int GL_PROJECTION_MATRIX() {
        return (int)2983L;
    }
    /**
     * {@snippet :
     * #define GL_TEXTURE_MATRIX 2984
     * }
     */
    public static int GL_TEXTURE_MATRIX() {
        return (int)2984L;
    }
    /**
     * {@snippet :
     * #define GL_ATTRIB_STACK_DEPTH 2992
     * }
     */
    public static int GL_ATTRIB_STACK_DEPTH() {
        return (int)2992L;
    }
    /**
     * {@snippet :
     * #define GL_CLIENT_ATTRIB_STACK_DEPTH 2993
     * }
     */
    public static int GL_CLIENT_ATTRIB_STACK_DEPTH() {
        return (int)2993L;
    }
    /**
     * {@snippet :
     * #define GL_ALPHA_TEST 3008
     * }
     */
    public static int GL_ALPHA_TEST() {
        return (int)3008L;
    }
    /**
     * {@snippet :
     * #define GL_ALPHA_TEST_FUNC 3009
     * }
     */
    public static int GL_ALPHA_TEST_FUNC() {
        return (int)3009L;
    }
    /**
     * {@snippet :
     * #define GL_ALPHA_TEST_REF 3010
     * }
     */
    public static int GL_ALPHA_TEST_REF() {
        return (int)3010L;
    }
    /**
     * {@snippet :
     * #define GL_DITHER 3024
     * }
     */
    public static int GL_DITHER() {
        return (int)3024L;
    }
    /**
     * {@snippet :
     * #define GL_BLEND_DST 3040
     * }
     */
    public static int GL_BLEND_DST() {
        return (int)3040L;
    }
    /**
     * {@snippet :
     * #define GL_BLEND_SRC 3041
     * }
     */
    public static int GL_BLEND_SRC() {
        return (int)3041L;
    }
    /**
     * {@snippet :
     * #define GL_BLEND 3042
     * }
     */
    public static int GL_BLEND() {
        return (int)3042L;
    }
    /**
     * {@snippet :
     * #define GL_LOGIC_OP_MODE 3056
     * }
     */
    public static int GL_LOGIC_OP_MODE() {
        return (int)3056L;
    }
    /**
     * {@snippet :
     * #define GL_INDEX_LOGIC_OP 3057
     * }
     */
    public static int GL_INDEX_LOGIC_OP() {
        return (int)3057L;
    }
    /**
     * {@snippet :
     * #define GL_COLOR_LOGIC_OP 3058
     * }
     */
    public static int GL_COLOR_LOGIC_OP() {
        return (int)3058L;
    }
    /**
     * {@snippet :
     * #define GL_AUX_BUFFERS 3072
     * }
     */
    public static int GL_AUX_BUFFERS() {
        return (int)3072L;
    }
    /**
     * {@snippet :
     * #define GL_DRAW_BUFFER 3073
     * }
     */
    public static int GL_DRAW_BUFFER() {
        return (int)3073L;
    }
    /**
     * {@snippet :
     * #define GL_READ_BUFFER 3074
     * }
     */
    public static int GL_READ_BUFFER() {
        return (int)3074L;
    }
    /**
     * {@snippet :
     * #define GL_SCISSOR_BOX 3088
     * }
     */
    public static int GL_SCISSOR_BOX() {
        return (int)3088L;
    }
    /**
     * {@snippet :
     * #define GL_SCISSOR_TEST 3089
     * }
     */
    public static int GL_SCISSOR_TEST() {
        return (int)3089L;
    }
    /**
     * {@snippet :
     * #define GL_INDEX_CLEAR_VALUE 3104
     * }
     */
    public static int GL_INDEX_CLEAR_VALUE() {
        return (int)3104L;
    }
    /**
     * {@snippet :
     * #define GL_INDEX_WRITEMASK 3105
     * }
     */
    public static int GL_INDEX_WRITEMASK() {
        return (int)3105L;
    }
    /**
     * {@snippet :
     * #define GL_COLOR_CLEAR_VALUE 3106
     * }
     */
    public static int GL_COLOR_CLEAR_VALUE() {
        return (int)3106L;
    }
    /**
     * {@snippet :
     * #define GL_COLOR_WRITEMASK 3107
     * }
     */
    public static int GL_COLOR_WRITEMASK() {
        return (int)3107L;
    }
    /**
     * {@snippet :
     * #define GL_INDEX_MODE 3120
     * }
     */
    public static int GL_INDEX_MODE() {
        return (int)3120L;
    }
    /**
     * {@snippet :
     * #define GL_RGBA_MODE 3121
     * }
     */
    public static int GL_RGBA_MODE() {
        return (int)3121L;
    }
    /**
     * {@snippet :
     * #define GL_DOUBLEBUFFER 3122
     * }
     */
    public static int GL_DOUBLEBUFFER() {
        return (int)3122L;
    }
    /**
     * {@snippet :
     * #define GL_STEREO 3123
     * }
     */
    public static int GL_STEREO() {
        return (int)3123L;
    }
    /**
     * {@snippet :
     * #define GL_RENDER_MODE 3136
     * }
     */
    public static int GL_RENDER_MODE() {
        return (int)3136L;
    }
    /**
     * {@snippet :
     * #define GL_PERSPECTIVE_CORRECTION_HINT 3152
     * }
     */
    public static int GL_PERSPECTIVE_CORRECTION_HINT() {
        return (int)3152L;
    }
    /**
     * {@snippet :
     * #define GL_POINT_SMOOTH_HINT 3153
     * }
     */
    public static int GL_POINT_SMOOTH_HINT() {
        return (int)3153L;
    }
    /**
     * {@snippet :
     * #define GL_LINE_SMOOTH_HINT 3154
     * }
     */
    public static int GL_LINE_SMOOTH_HINT() {
        return (int)3154L;
    }
    /**
     * {@snippet :
     * #define GL_POLYGON_SMOOTH_HINT 3155
     * }
     */
    public static int GL_POLYGON_SMOOTH_HINT() {
        return (int)3155L;
    }
    /**
     * {@snippet :
     * #define GL_FOG_HINT 3156
     * }
     */
    public static int GL_FOG_HINT() {
        return (int)3156L;
    }
    /**
     * {@snippet :
     * #define GL_TEXTURE_GEN_S 3168
     * }
     */
    public static int GL_TEXTURE_GEN_S() {
        return (int)3168L;
    }
    /**
     * {@snippet :
     * #define GL_TEXTURE_GEN_T 3169
     * }
     */
    public static int GL_TEXTURE_GEN_T() {
        return (int)3169L;
    }
    /**
     * {@snippet :
     * #define GL_TEXTURE_GEN_R 3170
     * }
     */
    public static int GL_TEXTURE_GEN_R() {
        return (int)3170L;
    }
    /**
     * {@snippet :
     * #define GL_TEXTURE_GEN_Q 3171
     * }
     */
    public static int GL_TEXTURE_GEN_Q() {
        return (int)3171L;
    }
    /**
     * {@snippet :
     * #define GL_PIXEL_MAP_I_TO_I 3184
     * }
     */
    public static int GL_PIXEL_MAP_I_TO_I() {
        return (int)3184L;
    }
    /**
     * {@snippet :
     * #define GL_PIXEL_MAP_S_TO_S 3185
     * }
     */
    public static int GL_PIXEL_MAP_S_TO_S() {
        return (int)3185L;
    }
    /**
     * {@snippet :
     * #define GL_PIXEL_MAP_I_TO_R 3186
     * }
     */
    public static int GL_PIXEL_MAP_I_TO_R() {
        return (int)3186L;
    }
    /**
     * {@snippet :
     * #define GL_PIXEL_MAP_I_TO_G 3187
     * }
     */
    public static int GL_PIXEL_MAP_I_TO_G() {
        return (int)3187L;
    }
    /**
     * {@snippet :
     * #define GL_PIXEL_MAP_I_TO_B 3188
     * }
     */
    public static int GL_PIXEL_MAP_I_TO_B() {
        return (int)3188L;
    }
    /**
     * {@snippet :
     * #define GL_PIXEL_MAP_I_TO_A 3189
     * }
     */
    public static int GL_PIXEL_MAP_I_TO_A() {
        return (int)3189L;
    }
    /**
     * {@snippet :
     * #define GL_PIXEL_MAP_R_TO_R 3190
     * }
     */
    public static int GL_PIXEL_MAP_R_TO_R() {
        return (int)3190L;
    }
    /**
     * {@snippet :
     * #define GL_PIXEL_MAP_G_TO_G 3191
     * }
     */
    public static int GL_PIXEL_MAP_G_TO_G() {
        return (int)3191L;
    }
    /**
     * {@snippet :
     * #define GL_PIXEL_MAP_B_TO_B 3192
     * }
     */
    public static int GL_PIXEL_MAP_B_TO_B() {
        return (int)3192L;
    }
    /**
     * {@snippet :
     * #define GL_PIXEL_MAP_A_TO_A 3193
     * }
     */
    public static int GL_PIXEL_MAP_A_TO_A() {
        return (int)3193L;
    }
    /**
     * {@snippet :
     * #define GL_PIXEL_MAP_I_TO_I_SIZE 3248
     * }
     */
    public static int GL_PIXEL_MAP_I_TO_I_SIZE() {
        return (int)3248L;
    }
    /**
     * {@snippet :
     * #define GL_PIXEL_MAP_S_TO_S_SIZE 3249
     * }
     */
    public static int GL_PIXEL_MAP_S_TO_S_SIZE() {
        return (int)3249L;
    }
    /**
     * {@snippet :
     * #define GL_PIXEL_MAP_I_TO_R_SIZE 3250
     * }
     */
    public static int GL_PIXEL_MAP_I_TO_R_SIZE() {
        return (int)3250L;
    }
    /**
     * {@snippet :
     * #define GL_PIXEL_MAP_I_TO_G_SIZE 3251
     * }
     */
    public static int GL_PIXEL_MAP_I_TO_G_SIZE() {
        return (int)3251L;
    }
    /**
     * {@snippet :
     * #define GL_PIXEL_MAP_I_TO_B_SIZE 3252
     * }
     */
    public static int GL_PIXEL_MAP_I_TO_B_SIZE() {
        return (int)3252L;
    }
    /**
     * {@snippet :
     * #define GL_PIXEL_MAP_I_TO_A_SIZE 3253
     * }
     */
    public static int GL_PIXEL_MAP_I_TO_A_SIZE() {
        return (int)3253L;
    }
    /**
     * {@snippet :
     * #define GL_PIXEL_MAP_R_TO_R_SIZE 3254
     * }
     */
    public static int GL_PIXEL_MAP_R_TO_R_SIZE() {
        return (int)3254L;
    }
    /**
     * {@snippet :
     * #define GL_PIXEL_MAP_G_TO_G_SIZE 3255
     * }
     */
    public static int GL_PIXEL_MAP_G_TO_G_SIZE() {
        return (int)3255L;
    }
    /**
     * {@snippet :
     * #define GL_PIXEL_MAP_B_TO_B_SIZE 3256
     * }
     */
    public static int GL_PIXEL_MAP_B_TO_B_SIZE() {
        return (int)3256L;
    }
    /**
     * {@snippet :
     * #define GL_PIXEL_MAP_A_TO_A_SIZE 3257
     * }
     */
    public static int GL_PIXEL_MAP_A_TO_A_SIZE() {
        return (int)3257L;
    }
    /**
     * {@snippet :
     * #define GL_UNPACK_SWAP_BYTES 3312
     * }
     */
    public static int GL_UNPACK_SWAP_BYTES() {
        return (int)3312L;
    }
    /**
     * {@snippet :
     * #define GL_UNPACK_LSB_FIRST 3313
     * }
     */
    public static int GL_UNPACK_LSB_FIRST() {
        return (int)3313L;
    }
    /**
     * {@snippet :
     * #define GL_UNPACK_ROW_LENGTH 3314
     * }
     */
    public static int GL_UNPACK_ROW_LENGTH() {
        return (int)3314L;
    }
    /**
     * {@snippet :
     * #define GL_UNPACK_SKIP_ROWS 3315
     * }
     */
    public static int GL_UNPACK_SKIP_ROWS() {
        return (int)3315L;
    }
    /**
     * {@snippet :
     * #define GL_UNPACK_SKIP_PIXELS 3316
     * }
     */
    public static int GL_UNPACK_SKIP_PIXELS() {
        return (int)3316L;
    }
    /**
     * {@snippet :
     * #define GL_UNPACK_ALIGNMENT 3317
     * }
     */
    public static int GL_UNPACK_ALIGNMENT() {
        return (int)3317L;
    }
    /**
     * {@snippet :
     * #define GL_PACK_SWAP_BYTES 3328
     * }
     */
    public static int GL_PACK_SWAP_BYTES() {
        return (int)3328L;
    }
    /**
     * {@snippet :
     * #define GL_PACK_LSB_FIRST 3329
     * }
     */
    public static int GL_PACK_LSB_FIRST() {
        return (int)3329L;
    }
    /**
     * {@snippet :
     * #define GL_PACK_ROW_LENGTH 3330
     * }
     */
    public static int GL_PACK_ROW_LENGTH() {
        return (int)3330L;
    }
    /**
     * {@snippet :
     * #define GL_PACK_SKIP_ROWS 3331
     * }
     */
    public static int GL_PACK_SKIP_ROWS() {
        return (int)3331L;
    }
    /**
     * {@snippet :
     * #define GL_PACK_SKIP_PIXELS 3332
     * }
     */
    public static int GL_PACK_SKIP_PIXELS() {
        return (int)3332L;
    }
    /**
     * {@snippet :
     * #define GL_PACK_ALIGNMENT 3333
     * }
     */
    public static int GL_PACK_ALIGNMENT() {
        return (int)3333L;
    }
    /**
     * {@snippet :
     * #define GL_MAP_COLOR 3344
     * }
     */
    public static int GL_MAP_COLOR() {
        return (int)3344L;
    }
    /**
     * {@snippet :
     * #define GL_MAP_STENCIL 3345
     * }
     */
    public static int GL_MAP_STENCIL() {
        return (int)3345L;
    }
    /**
     * {@snippet :
     * #define GL_INDEX_SHIFT 3346
     * }
     */
    public static int GL_INDEX_SHIFT() {
        return (int)3346L;
    }
    /**
     * {@snippet :
     * #define GL_INDEX_OFFSET 3347
     * }
     */
    public static int GL_INDEX_OFFSET() {
        return (int)3347L;
    }
    /**
     * {@snippet :
     * #define GL_RED_SCALE 3348
     * }
     */
    public static int GL_RED_SCALE() {
        return (int)3348L;
    }
    /**
     * {@snippet :
     * #define GL_RED_BIAS 3349
     * }
     */
    public static int GL_RED_BIAS() {
        return (int)3349L;
    }
    /**
     * {@snippet :
     * #define GL_ZOOM_X 3350
     * }
     */
    public static int GL_ZOOM_X() {
        return (int)3350L;
    }
    /**
     * {@snippet :
     * #define GL_ZOOM_Y 3351
     * }
     */
    public static int GL_ZOOM_Y() {
        return (int)3351L;
    }
    /**
     * {@snippet :
     * #define GL_GREEN_SCALE 3352
     * }
     */
    public static int GL_GREEN_SCALE() {
        return (int)3352L;
    }
    /**
     * {@snippet :
     * #define GL_GREEN_BIAS 3353
     * }
     */
    public static int GL_GREEN_BIAS() {
        return (int)3353L;
    }
    /**
     * {@snippet :
     * #define GL_BLUE_SCALE 3354
     * }
     */
    public static int GL_BLUE_SCALE() {
        return (int)3354L;
    }
    /**
     * {@snippet :
     * #define GL_BLUE_BIAS 3355
     * }
     */
    public static int GL_BLUE_BIAS() {
        return (int)3355L;
    }
    /**
     * {@snippet :
     * #define GL_ALPHA_SCALE 3356
     * }
     */
    public static int GL_ALPHA_SCALE() {
        return (int)3356L;
    }
    /**
     * {@snippet :
     * #define GL_ALPHA_BIAS 3357
     * }
     */
    public static int GL_ALPHA_BIAS() {
        return (int)3357L;
    }
    /**
     * {@snippet :
     * #define GL_DEPTH_SCALE 3358
     * }
     */
    public static int GL_DEPTH_SCALE() {
        return (int)3358L;
    }
    /**
     * {@snippet :
     * #define GL_DEPTH_BIAS 3359
     * }
     */
    public static int GL_DEPTH_BIAS() {
        return (int)3359L;
    }
    /**
     * {@snippet :
     * #define GL_MAX_EVAL_ORDER 3376
     * }
     */
    public static int GL_MAX_EVAL_ORDER() {
        return (int)3376L;
    }
    /**
     * {@snippet :
     * #define GL_MAX_LIGHTS 3377
     * }
     */
    public static int GL_MAX_LIGHTS() {
        return (int)3377L;
    }
    /**
     * {@snippet :
     * #define GL_MAX_CLIP_PLANES 3378
     * }
     */
    public static int GL_MAX_CLIP_PLANES() {
        return (int)3378L;
    }
    /**
     * {@snippet :
     * #define GL_MAX_TEXTURE_SIZE 3379
     * }
     */
    public static int GL_MAX_TEXTURE_SIZE() {
        return (int)3379L;
    }
    /**
     * {@snippet :
     * #define GL_MAX_PIXEL_MAP_TABLE 3380
     * }
     */
    public static int GL_MAX_PIXEL_MAP_TABLE() {
        return (int)3380L;
    }
    /**
     * {@snippet :
     * #define GL_MAX_ATTRIB_STACK_DEPTH 3381
     * }
     */
    public static int GL_MAX_ATTRIB_STACK_DEPTH() {
        return (int)3381L;
    }
    /**
     * {@snippet :
     * #define GL_MAX_MODELVIEW_STACK_DEPTH 3382
     * }
     */
    public static int GL_MAX_MODELVIEW_STACK_DEPTH() {
        return (int)3382L;
    }
    /**
     * {@snippet :
     * #define GL_MAX_NAME_STACK_DEPTH 3383
     * }
     */
    public static int GL_MAX_NAME_STACK_DEPTH() {
        return (int)3383L;
    }
    /**
     * {@snippet :
     * #define GL_MAX_PROJECTION_STACK_DEPTH 3384
     * }
     */
    public static int GL_MAX_PROJECTION_STACK_DEPTH() {
        return (int)3384L;
    }
    /**
     * {@snippet :
     * #define GL_MAX_TEXTURE_STACK_DEPTH 3385
     * }
     */
    public static int GL_MAX_TEXTURE_STACK_DEPTH() {
        return (int)3385L;
    }
    /**
     * {@snippet :
     * #define GL_MAX_VIEWPORT_DIMS 3386
     * }
     */
    public static int GL_MAX_VIEWPORT_DIMS() {
        return (int)3386L;
    }
    /**
     * {@snippet :
     * #define GL_MAX_CLIENT_ATTRIB_STACK_DEPTH 3387
     * }
     */
    public static int GL_MAX_CLIENT_ATTRIB_STACK_DEPTH() {
        return (int)3387L;
    }
    /**
     * {@snippet :
     * #define GL_SUBPIXEL_BITS 3408
     * }
     */
    public static int GL_SUBPIXEL_BITS() {
        return (int)3408L;
    }
    /**
     * {@snippet :
     * #define GL_INDEX_BITS 3409
     * }
     */
    public static int GL_INDEX_BITS() {
        return (int)3409L;
    }
    /**
     * {@snippet :
     * #define GL_RED_BITS 3410
     * }
     */
    public static int GL_RED_BITS() {
        return (int)3410L;
    }
    /**
     * {@snippet :
     * #define GL_GREEN_BITS 3411
     * }
     */
    public static int GL_GREEN_BITS() {
        return (int)3411L;
    }
    /**
     * {@snippet :
     * #define GL_BLUE_BITS 3412
     * }
     */
    public static int GL_BLUE_BITS() {
        return (int)3412L;
    }
    /**
     * {@snippet :
     * #define GL_ALPHA_BITS 3413
     * }
     */
    public static int GL_ALPHA_BITS() {
        return (int)3413L;
    }
    /**
     * {@snippet :
     * #define GL_DEPTH_BITS 3414
     * }
     */
    public static int GL_DEPTH_BITS() {
        return (int)3414L;
    }
    /**
     * {@snippet :
     * #define GL_STENCIL_BITS 3415
     * }
     */
    public static int GL_STENCIL_BITS() {
        return (int)3415L;
    }
    /**
     * {@snippet :
     * #define GL_ACCUM_RED_BITS 3416
     * }
     */
    public static int GL_ACCUM_RED_BITS() {
        return (int)3416L;
    }
    /**
     * {@snippet :
     * #define GL_ACCUM_GREEN_BITS 3417
     * }
     */
    public static int GL_ACCUM_GREEN_BITS() {
        return (int)3417L;
    }
    /**
     * {@snippet :
     * #define GL_ACCUM_BLUE_BITS 3418
     * }
     */
    public static int GL_ACCUM_BLUE_BITS() {
        return (int)3418L;
    }
    /**
     * {@snippet :
     * #define GL_ACCUM_ALPHA_BITS 3419
     * }
     */
    public static int GL_ACCUM_ALPHA_BITS() {
        return (int)3419L;
    }
    /**
     * {@snippet :
     * #define GL_NAME_STACK_DEPTH 3440
     * }
     */
    public static int GL_NAME_STACK_DEPTH() {
        return (int)3440L;
    }
    /**
     * {@snippet :
     * #define GL_AUTO_NORMAL 3456
     * }
     */
    public static int GL_AUTO_NORMAL() {
        return (int)3456L;
    }
    /**
     * {@snippet :
     * #define GL_MAP1_COLOR_4 3472
     * }
     */
    public static int GL_MAP1_COLOR_4() {
        return (int)3472L;
    }
    /**
     * {@snippet :
     * #define GL_MAP1_INDEX 3473
     * }
     */
    public static int GL_MAP1_INDEX() {
        return (int)3473L;
    }
    /**
     * {@snippet :
     * #define GL_MAP1_NORMAL 3474
     * }
     */
    public static int GL_MAP1_NORMAL() {
        return (int)3474L;
    }
    /**
     * {@snippet :
     * #define GL_MAP1_TEXTURE_COORD_1 3475
     * }
     */
    public static int GL_MAP1_TEXTURE_COORD_1() {
        return (int)3475L;
    }
    /**
     * {@snippet :
     * #define GL_MAP1_TEXTURE_COORD_2 3476
     * }
     */
    public static int GL_MAP1_TEXTURE_COORD_2() {
        return (int)3476L;
    }
    /**
     * {@snippet :
     * #define GL_MAP1_TEXTURE_COORD_3 3477
     * }
     */
    public static int GL_MAP1_TEXTURE_COORD_3() {
        return (int)3477L;
    }
    /**
     * {@snippet :
     * #define GL_MAP1_TEXTURE_COORD_4 3478
     * }
     */
    public static int GL_MAP1_TEXTURE_COORD_4() {
        return (int)3478L;
    }
    /**
     * {@snippet :
     * #define GL_MAP1_VERTEX_3 3479
     * }
     */
    public static int GL_MAP1_VERTEX_3() {
        return (int)3479L;
    }
    /**
     * {@snippet :
     * #define GL_MAP1_VERTEX_4 3480
     * }
     */
    public static int GL_MAP1_VERTEX_4() {
        return (int)3480L;
    }
    /**
     * {@snippet :
     * #define GL_MAP2_COLOR_4 3504
     * }
     */
    public static int GL_MAP2_COLOR_4() {
        return (int)3504L;
    }
    /**
     * {@snippet :
     * #define GL_MAP2_INDEX 3505
     * }
     */
    public static int GL_MAP2_INDEX() {
        return (int)3505L;
    }
    /**
     * {@snippet :
     * #define GL_MAP2_NORMAL 3506
     * }
     */
    public static int GL_MAP2_NORMAL() {
        return (int)3506L;
    }
    /**
     * {@snippet :
     * #define GL_MAP2_TEXTURE_COORD_1 3507
     * }
     */
    public static int GL_MAP2_TEXTURE_COORD_1() {
        return (int)3507L;
    }
    /**
     * {@snippet :
     * #define GL_MAP2_TEXTURE_COORD_2 3508
     * }
     */
    public static int GL_MAP2_TEXTURE_COORD_2() {
        return (int)3508L;
    }
    /**
     * {@snippet :
     * #define GL_MAP2_TEXTURE_COORD_3 3509
     * }
     */
    public static int GL_MAP2_TEXTURE_COORD_3() {
        return (int)3509L;
    }
    /**
     * {@snippet :
     * #define GL_MAP2_TEXTURE_COORD_4 3510
     * }
     */
    public static int GL_MAP2_TEXTURE_COORD_4() {
        return (int)3510L;
    }
    /**
     * {@snippet :
     * #define GL_MAP2_VERTEX_3 3511
     * }
     */
    public static int GL_MAP2_VERTEX_3() {
        return (int)3511L;
    }
    /**
     * {@snippet :
     * #define GL_MAP2_VERTEX_4 3512
     * }
     */
    public static int GL_MAP2_VERTEX_4() {
        return (int)3512L;
    }
    /**
     * {@snippet :
     * #define GL_MAP1_GRID_DOMAIN 3536
     * }
     */
    public static int GL_MAP1_GRID_DOMAIN() {
        return (int)3536L;
    }
    /**
     * {@snippet :
     * #define GL_MAP1_GRID_SEGMENTS 3537
     * }
     */
    public static int GL_MAP1_GRID_SEGMENTS() {
        return (int)3537L;
    }
    /**
     * {@snippet :
     * #define GL_MAP2_GRID_DOMAIN 3538
     * }
     */
    public static int GL_MAP2_GRID_DOMAIN() {
        return (int)3538L;
    }
    /**
     * {@snippet :
     * #define GL_MAP2_GRID_SEGMENTS 3539
     * }
     */
    public static int GL_MAP2_GRID_SEGMENTS() {
        return (int)3539L;
    }
    /**
     * {@snippet :
     * #define GL_TEXTURE_1D 3552
     * }
     */
    public static int GL_TEXTURE_1D() {
        return (int)3552L;
    }
    /**
     * {@snippet :
     * #define GL_TEXTURE_2D 3553
     * }
     */
    public static int GL_TEXTURE_2D() {
        return (int)3553L;
    }
    /**
     * {@snippet :
     * #define GL_FEEDBACK_BUFFER_POINTER 3568
     * }
     */
    public static int GL_FEEDBACK_BUFFER_POINTER() {
        return (int)3568L;
    }
    /**
     * {@snippet :
     * #define GL_FEEDBACK_BUFFER_SIZE 3569
     * }
     */
    public static int GL_FEEDBACK_BUFFER_SIZE() {
        return (int)3569L;
    }
    /**
     * {@snippet :
     * #define GL_FEEDBACK_BUFFER_TYPE 3570
     * }
     */
    public static int GL_FEEDBACK_BUFFER_TYPE() {
        return (int)3570L;
    }
    /**
     * {@snippet :
     * #define GL_SELECTION_BUFFER_POINTER 3571
     * }
     */
    public static int GL_SELECTION_BUFFER_POINTER() {
        return (int)3571L;
    }
    /**
     * {@snippet :
     * #define GL_SELECTION_BUFFER_SIZE 3572
     * }
     */
    public static int GL_SELECTION_BUFFER_SIZE() {
        return (int)3572L;
    }
    /**
     * {@snippet :
     * #define GL_TEXTURE_WIDTH 4096
     * }
     */
    public static int GL_TEXTURE_WIDTH() {
        return (int)4096L;
    }
    /**
     * {@snippet :
     * #define GL_TEXTURE_HEIGHT 4097
     * }
     */
    public static int GL_TEXTURE_HEIGHT() {
        return (int)4097L;
    }
    /**
     * {@snippet :
     * #define GL_TEXTURE_INTERNAL_FORMAT 4099
     * }
     */
    public static int GL_TEXTURE_INTERNAL_FORMAT() {
        return (int)4099L;
    }
    /**
     * {@snippet :
     * #define GL_TEXTURE_BORDER_COLOR 4100
     * }
     */
    public static int GL_TEXTURE_BORDER_COLOR() {
        return (int)4100L;
    }
    /**
     * {@snippet :
     * #define GL_TEXTURE_BORDER 4101
     * }
     */
    public static int GL_TEXTURE_BORDER() {
        return (int)4101L;
    }
    /**
     * {@snippet :
     * #define GL_DONT_CARE 4352
     * }
     */
    public static int GL_DONT_CARE() {
        return (int)4352L;
    }
    /**
     * {@snippet :
     * #define GL_FASTEST 4353
     * }
     */
    public static int GL_FASTEST() {
        return (int)4353L;
    }
    /**
     * {@snippet :
     * #define GL_NICEST 4354
     * }
     */
    public static int GL_NICEST() {
        return (int)4354L;
    }
    /**
     * {@snippet :
     * #define GL_LIGHT0 16384
     * }
     */
    public static int GL_LIGHT0() {
        return (int)16384L;
    }
    /**
     * {@snippet :
     * #define GL_LIGHT1 16385
     * }
     */
    public static int GL_LIGHT1() {
        return (int)16385L;
    }
    /**
     * {@snippet :
     * #define GL_LIGHT2 16386
     * }
     */
    public static int GL_LIGHT2() {
        return (int)16386L;
    }
    /**
     * {@snippet :
     * #define GL_LIGHT3 16387
     * }
     */
    public static int GL_LIGHT3() {
        return (int)16387L;
    }
    /**
     * {@snippet :
     * #define GL_LIGHT4 16388
     * }
     */
    public static int GL_LIGHT4() {
        return (int)16388L;
    }
    /**
     * {@snippet :
     * #define GL_LIGHT5 16389
     * }
     */
    public static int GL_LIGHT5() {
        return (int)16389L;
    }
    /**
     * {@snippet :
     * #define GL_LIGHT6 16390
     * }
     */
    public static int GL_LIGHT6() {
        return (int)16390L;
    }
    /**
     * {@snippet :
     * #define GL_LIGHT7 16391
     * }
     */
    public static int GL_LIGHT7() {
        return (int)16391L;
    }
    /**
     * {@snippet :
     * #define GL_AMBIENT 4608
     * }
     */
    public static int GL_AMBIENT() {
        return (int)4608L;
    }
    /**
     * {@snippet :
     * #define GL_DIFFUSE 4609
     * }
     */
    public static int GL_DIFFUSE() {
        return (int)4609L;
    }
    /**
     * {@snippet :
     * #define GL_SPECULAR 4610
     * }
     */
    public static int GL_SPECULAR() {
        return (int)4610L;
    }
    /**
     * {@snippet :
     * #define GL_POSITION 4611
     * }
     */
    public static int GL_POSITION() {
        return (int)4611L;
    }
    /**
     * {@snippet :
     * #define GL_SPOT_DIRECTION 4612
     * }
     */
    public static int GL_SPOT_DIRECTION() {
        return (int)4612L;
    }
}


