// Generated by jextract

package com.icuxika.kv.jextract.glfw;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct StdVideoH264SequenceParameterSet {
 *     StdVideoH264SpsFlags flags;
 *     StdVideoH264ProfileIdc profile_idc;
 *     StdVideoH264LevelIdc level_idc;
 *     StdVideoH264ChromaFormatIdc chroma_format_idc;
 *     uint8_t seq_parameter_set_id;
 *     uint8_t bit_depth_luma_minus8;
 *     uint8_t bit_depth_chroma_minus8;
 *     uint8_t log2_max_frame_num_minus4;
 *     StdVideoH264PocType pic_order_cnt_type;
 *     int32_t offset_for_non_ref_pic;
 *     int32_t offset_for_top_to_bottom_field;
 *     uint8_t log2_max_pic_order_cnt_lsb_minus4;
 *     uint8_t num_ref_frames_in_pic_order_cnt_cycle;
 *     uint8_t max_num_ref_frames;
 *     uint8_t reserved1;
 *     uint32_t pic_width_in_mbs_minus1;
 *     uint32_t pic_height_in_map_units_minus1;
 *     uint32_t frame_crop_left_offset;
 *     uint32_t frame_crop_right_offset;
 *     uint32_t frame_crop_top_offset;
 *     uint32_t frame_crop_bottom_offset;
 *     uint32_t reserved2;
 *     const int32_t* pOffsetForRefFrame;
 *     const StdVideoH264ScalingLists* pScalingLists;
 *     const StdVideoH264SequenceParameterSetVui* pSequenceParameterSetVui;
 * };
 * }
 */
public class StdVideoH264SequenceParameterSet {

    public static MemoryLayout $LAYOUT() {
        return constants$482.const$1;
    }
    public static MemorySegment flags$slice(MemorySegment seg) {
        return seg.asSlice(0, 4);
    }
    public static VarHandle profile_idc$VH() {
        return constants$482.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * StdVideoH264ProfileIdc profile_idc;
     * }
     */
    public static int profile_idc$get(MemorySegment seg) {
        return (int)constants$482.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * StdVideoH264ProfileIdc profile_idc;
     * }
     */
    public static void profile_idc$set(MemorySegment seg, int x) {
        constants$482.const$2.set(seg, x);
    }
    public static int profile_idc$get(MemorySegment seg, long index) {
        return (int)constants$482.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void profile_idc$set(MemorySegment seg, long index, int x) {
        constants$482.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle level_idc$VH() {
        return constants$482.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * StdVideoH264LevelIdc level_idc;
     * }
     */
    public static int level_idc$get(MemorySegment seg) {
        return (int)constants$482.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * StdVideoH264LevelIdc level_idc;
     * }
     */
    public static void level_idc$set(MemorySegment seg, int x) {
        constants$482.const$3.set(seg, x);
    }
    public static int level_idc$get(MemorySegment seg, long index) {
        return (int)constants$482.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void level_idc$set(MemorySegment seg, long index, int x) {
        constants$482.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle chroma_format_idc$VH() {
        return constants$482.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * StdVideoH264ChromaFormatIdc chroma_format_idc;
     * }
     */
    public static int chroma_format_idc$get(MemorySegment seg) {
        return (int)constants$482.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * StdVideoH264ChromaFormatIdc chroma_format_idc;
     * }
     */
    public static void chroma_format_idc$set(MemorySegment seg, int x) {
        constants$482.const$4.set(seg, x);
    }
    public static int chroma_format_idc$get(MemorySegment seg, long index) {
        return (int)constants$482.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void chroma_format_idc$set(MemorySegment seg, long index, int x) {
        constants$482.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle seq_parameter_set_id$VH() {
        return constants$482.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint8_t seq_parameter_set_id;
     * }
     */
    public static byte seq_parameter_set_id$get(MemorySegment seg) {
        return (byte)constants$482.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint8_t seq_parameter_set_id;
     * }
     */
    public static void seq_parameter_set_id$set(MemorySegment seg, byte x) {
        constants$482.const$5.set(seg, x);
    }
    public static byte seq_parameter_set_id$get(MemorySegment seg, long index) {
        return (byte)constants$482.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void seq_parameter_set_id$set(MemorySegment seg, long index, byte x) {
        constants$482.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle bit_depth_luma_minus8$VH() {
        return constants$483.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint8_t bit_depth_luma_minus8;
     * }
     */
    public static byte bit_depth_luma_minus8$get(MemorySegment seg) {
        return (byte)constants$483.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint8_t bit_depth_luma_minus8;
     * }
     */
    public static void bit_depth_luma_minus8$set(MemorySegment seg, byte x) {
        constants$483.const$0.set(seg, x);
    }
    public static byte bit_depth_luma_minus8$get(MemorySegment seg, long index) {
        return (byte)constants$483.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void bit_depth_luma_minus8$set(MemorySegment seg, long index, byte x) {
        constants$483.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle bit_depth_chroma_minus8$VH() {
        return constants$483.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint8_t bit_depth_chroma_minus8;
     * }
     */
    public static byte bit_depth_chroma_minus8$get(MemorySegment seg) {
        return (byte)constants$483.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint8_t bit_depth_chroma_minus8;
     * }
     */
    public static void bit_depth_chroma_minus8$set(MemorySegment seg, byte x) {
        constants$483.const$1.set(seg, x);
    }
    public static byte bit_depth_chroma_minus8$get(MemorySegment seg, long index) {
        return (byte)constants$483.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void bit_depth_chroma_minus8$set(MemorySegment seg, long index, byte x) {
        constants$483.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle log2_max_frame_num_minus4$VH() {
        return constants$483.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint8_t log2_max_frame_num_minus4;
     * }
     */
    public static byte log2_max_frame_num_minus4$get(MemorySegment seg) {
        return (byte)constants$483.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint8_t log2_max_frame_num_minus4;
     * }
     */
    public static void log2_max_frame_num_minus4$set(MemorySegment seg, byte x) {
        constants$483.const$2.set(seg, x);
    }
    public static byte log2_max_frame_num_minus4$get(MemorySegment seg, long index) {
        return (byte)constants$483.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void log2_max_frame_num_minus4$set(MemorySegment seg, long index, byte x) {
        constants$483.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pic_order_cnt_type$VH() {
        return constants$483.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * StdVideoH264PocType pic_order_cnt_type;
     * }
     */
    public static int pic_order_cnt_type$get(MemorySegment seg) {
        return (int)constants$483.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * StdVideoH264PocType pic_order_cnt_type;
     * }
     */
    public static void pic_order_cnt_type$set(MemorySegment seg, int x) {
        constants$483.const$3.set(seg, x);
    }
    public static int pic_order_cnt_type$get(MemorySegment seg, long index) {
        return (int)constants$483.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void pic_order_cnt_type$set(MemorySegment seg, long index, int x) {
        constants$483.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle offset_for_non_ref_pic$VH() {
        return constants$483.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int32_t offset_for_non_ref_pic;
     * }
     */
    public static int offset_for_non_ref_pic$get(MemorySegment seg) {
        return (int)constants$483.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int32_t offset_for_non_ref_pic;
     * }
     */
    public static void offset_for_non_ref_pic$set(MemorySegment seg, int x) {
        constants$483.const$4.set(seg, x);
    }
    public static int offset_for_non_ref_pic$get(MemorySegment seg, long index) {
        return (int)constants$483.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void offset_for_non_ref_pic$set(MemorySegment seg, long index, int x) {
        constants$483.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle offset_for_top_to_bottom_field$VH() {
        return constants$483.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int32_t offset_for_top_to_bottom_field;
     * }
     */
    public static int offset_for_top_to_bottom_field$get(MemorySegment seg) {
        return (int)constants$483.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int32_t offset_for_top_to_bottom_field;
     * }
     */
    public static void offset_for_top_to_bottom_field$set(MemorySegment seg, int x) {
        constants$483.const$5.set(seg, x);
    }
    public static int offset_for_top_to_bottom_field$get(MemorySegment seg, long index) {
        return (int)constants$483.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void offset_for_top_to_bottom_field$set(MemorySegment seg, long index, int x) {
        constants$483.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle log2_max_pic_order_cnt_lsb_minus4$VH() {
        return constants$484.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint8_t log2_max_pic_order_cnt_lsb_minus4;
     * }
     */
    public static byte log2_max_pic_order_cnt_lsb_minus4$get(MemorySegment seg) {
        return (byte)constants$484.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint8_t log2_max_pic_order_cnt_lsb_minus4;
     * }
     */
    public static void log2_max_pic_order_cnt_lsb_minus4$set(MemorySegment seg, byte x) {
        constants$484.const$0.set(seg, x);
    }
    public static byte log2_max_pic_order_cnt_lsb_minus4$get(MemorySegment seg, long index) {
        return (byte)constants$484.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void log2_max_pic_order_cnt_lsb_minus4$set(MemorySegment seg, long index, byte x) {
        constants$484.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle num_ref_frames_in_pic_order_cnt_cycle$VH() {
        return constants$484.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint8_t num_ref_frames_in_pic_order_cnt_cycle;
     * }
     */
    public static byte num_ref_frames_in_pic_order_cnt_cycle$get(MemorySegment seg) {
        return (byte)constants$484.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint8_t num_ref_frames_in_pic_order_cnt_cycle;
     * }
     */
    public static void num_ref_frames_in_pic_order_cnt_cycle$set(MemorySegment seg, byte x) {
        constants$484.const$1.set(seg, x);
    }
    public static byte num_ref_frames_in_pic_order_cnt_cycle$get(MemorySegment seg, long index) {
        return (byte)constants$484.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void num_ref_frames_in_pic_order_cnt_cycle$set(MemorySegment seg, long index, byte x) {
        constants$484.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle max_num_ref_frames$VH() {
        return constants$484.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint8_t max_num_ref_frames;
     * }
     */
    public static byte max_num_ref_frames$get(MemorySegment seg) {
        return (byte)constants$484.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint8_t max_num_ref_frames;
     * }
     */
    public static void max_num_ref_frames$set(MemorySegment seg, byte x) {
        constants$484.const$2.set(seg, x);
    }
    public static byte max_num_ref_frames$get(MemorySegment seg, long index) {
        return (byte)constants$484.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void max_num_ref_frames$set(MemorySegment seg, long index, byte x) {
        constants$484.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle reserved1$VH() {
        return constants$484.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint8_t reserved1;
     * }
     */
    public static byte reserved1$get(MemorySegment seg) {
        return (byte)constants$484.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint8_t reserved1;
     * }
     */
    public static void reserved1$set(MemorySegment seg, byte x) {
        constants$484.const$3.set(seg, x);
    }
    public static byte reserved1$get(MemorySegment seg, long index) {
        return (byte)constants$484.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void reserved1$set(MemorySegment seg, long index, byte x) {
        constants$484.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pic_width_in_mbs_minus1$VH() {
        return constants$484.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint32_t pic_width_in_mbs_minus1;
     * }
     */
    public static int pic_width_in_mbs_minus1$get(MemorySegment seg) {
        return (int)constants$484.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint32_t pic_width_in_mbs_minus1;
     * }
     */
    public static void pic_width_in_mbs_minus1$set(MemorySegment seg, int x) {
        constants$484.const$4.set(seg, x);
    }
    public static int pic_width_in_mbs_minus1$get(MemorySegment seg, long index) {
        return (int)constants$484.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void pic_width_in_mbs_minus1$set(MemorySegment seg, long index, int x) {
        constants$484.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pic_height_in_map_units_minus1$VH() {
        return constants$484.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint32_t pic_height_in_map_units_minus1;
     * }
     */
    public static int pic_height_in_map_units_minus1$get(MemorySegment seg) {
        return (int)constants$484.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint32_t pic_height_in_map_units_minus1;
     * }
     */
    public static void pic_height_in_map_units_minus1$set(MemorySegment seg, int x) {
        constants$484.const$5.set(seg, x);
    }
    public static int pic_height_in_map_units_minus1$get(MemorySegment seg, long index) {
        return (int)constants$484.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void pic_height_in_map_units_minus1$set(MemorySegment seg, long index, int x) {
        constants$484.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle frame_crop_left_offset$VH() {
        return constants$485.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint32_t frame_crop_left_offset;
     * }
     */
    public static int frame_crop_left_offset$get(MemorySegment seg) {
        return (int)constants$485.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint32_t frame_crop_left_offset;
     * }
     */
    public static void frame_crop_left_offset$set(MemorySegment seg, int x) {
        constants$485.const$0.set(seg, x);
    }
    public static int frame_crop_left_offset$get(MemorySegment seg, long index) {
        return (int)constants$485.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void frame_crop_left_offset$set(MemorySegment seg, long index, int x) {
        constants$485.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle frame_crop_right_offset$VH() {
        return constants$485.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint32_t frame_crop_right_offset;
     * }
     */
    public static int frame_crop_right_offset$get(MemorySegment seg) {
        return (int)constants$485.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint32_t frame_crop_right_offset;
     * }
     */
    public static void frame_crop_right_offset$set(MemorySegment seg, int x) {
        constants$485.const$1.set(seg, x);
    }
    public static int frame_crop_right_offset$get(MemorySegment seg, long index) {
        return (int)constants$485.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void frame_crop_right_offset$set(MemorySegment seg, long index, int x) {
        constants$485.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle frame_crop_top_offset$VH() {
        return constants$485.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint32_t frame_crop_top_offset;
     * }
     */
    public static int frame_crop_top_offset$get(MemorySegment seg) {
        return (int)constants$485.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint32_t frame_crop_top_offset;
     * }
     */
    public static void frame_crop_top_offset$set(MemorySegment seg, int x) {
        constants$485.const$2.set(seg, x);
    }
    public static int frame_crop_top_offset$get(MemorySegment seg, long index) {
        return (int)constants$485.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void frame_crop_top_offset$set(MemorySegment seg, long index, int x) {
        constants$485.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle frame_crop_bottom_offset$VH() {
        return constants$485.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint32_t frame_crop_bottom_offset;
     * }
     */
    public static int frame_crop_bottom_offset$get(MemorySegment seg) {
        return (int)constants$485.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint32_t frame_crop_bottom_offset;
     * }
     */
    public static void frame_crop_bottom_offset$set(MemorySegment seg, int x) {
        constants$485.const$3.set(seg, x);
    }
    public static int frame_crop_bottom_offset$get(MemorySegment seg, long index) {
        return (int)constants$485.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void frame_crop_bottom_offset$set(MemorySegment seg, long index, int x) {
        constants$485.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle reserved2$VH() {
        return constants$485.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint32_t reserved2;
     * }
     */
    public static int reserved2$get(MemorySegment seg) {
        return (int)constants$485.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint32_t reserved2;
     * }
     */
    public static void reserved2$set(MemorySegment seg, int x) {
        constants$485.const$4.set(seg, x);
    }
    public static int reserved2$get(MemorySegment seg, long index) {
        return (int)constants$485.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void reserved2$set(MemorySegment seg, long index, int x) {
        constants$485.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pOffsetForRefFrame$VH() {
        return constants$485.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * const int32_t* pOffsetForRefFrame;
     * }
     */
    public static MemorySegment pOffsetForRefFrame$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$485.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * const int32_t* pOffsetForRefFrame;
     * }
     */
    public static void pOffsetForRefFrame$set(MemorySegment seg, MemorySegment x) {
        constants$485.const$5.set(seg, x);
    }
    public static MemorySegment pOffsetForRefFrame$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$485.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void pOffsetForRefFrame$set(MemorySegment seg, long index, MemorySegment x) {
        constants$485.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pScalingLists$VH() {
        return constants$486.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * const StdVideoH264ScalingLists* pScalingLists;
     * }
     */
    public static MemorySegment pScalingLists$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$486.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * const StdVideoH264ScalingLists* pScalingLists;
     * }
     */
    public static void pScalingLists$set(MemorySegment seg, MemorySegment x) {
        constants$486.const$0.set(seg, x);
    }
    public static MemorySegment pScalingLists$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$486.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void pScalingLists$set(MemorySegment seg, long index, MemorySegment x) {
        constants$486.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pSequenceParameterSetVui$VH() {
        return constants$486.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * const StdVideoH264SequenceParameterSetVui* pSequenceParameterSetVui;
     * }
     */
    public static MemorySegment pSequenceParameterSetVui$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$486.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * const StdVideoH264SequenceParameterSetVui* pSequenceParameterSetVui;
     * }
     */
    public static void pSequenceParameterSetVui$set(MemorySegment seg, MemorySegment x) {
        constants$486.const$1.set(seg, x);
    }
    public static MemorySegment pSequenceParameterSetVui$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$486.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void pSequenceParameterSetVui$set(MemorySegment seg, long index, MemorySegment x) {
        constants$486.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


