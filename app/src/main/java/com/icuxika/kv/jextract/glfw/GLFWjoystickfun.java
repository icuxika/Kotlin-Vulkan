// Generated by jextract

package com.icuxika.kv.jextract.glfw;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * void (*GLFWjoystickfun)(int jid,int event);
 * }
 */
public interface GLFWjoystickfun {

    void apply(int jid, int event);
    static MemorySegment allocate(GLFWjoystickfun fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$1154.const$2, fi, constants$1083.const$1, scope);
    }
    static GLFWjoystickfun ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (int _jid, int _event) -> {
            try {
                constants$1154.const$3.invokeExact(symbol, _jid, _event);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


