// Generated by jextract

package com.icuxika.kv.jextract.glfw;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class jextract_h_6 extends jextract_h_5 {

    public static MethodHandle glfwWindowShouldClose$MH() {
        return RuntimeHelper.requireNonNull(constants$1163.const$5,"glfwWindowShouldClose");
    }
    /**
     * {@snippet :
     * int glfwWindowShouldClose(GLFWwindow* window);
     * }
     */
    public static int glfwWindowShouldClose(MemorySegment window) {
        var mh$ = glfwWindowShouldClose$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwSetWindowShouldClose$MH() {
        return RuntimeHelper.requireNonNull(constants$1164.const$0,"glfwSetWindowShouldClose");
    }
    /**
     * {@snippet :
     * void glfwSetWindowShouldClose(GLFWwindow* window, int value);
     * }
     */
    public static void glfwSetWindowShouldClose(MemorySegment window, int value) {
        var mh$ = glfwSetWindowShouldClose$MH();
        try {
            mh$.invokeExact(window, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwGetWindowTitle$MH() {
        return RuntimeHelper.requireNonNull(constants$1164.const$1,"glfwGetWindowTitle");
    }
    /**
     * {@snippet :
     * char* glfwGetWindowTitle(GLFWwindow* window);
     * }
     */
    public static MemorySegment glfwGetWindowTitle(MemorySegment window) {
        var mh$ = glfwGetWindowTitle$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwSetWindowTitle$MH() {
        return RuntimeHelper.requireNonNull(constants$1164.const$2,"glfwSetWindowTitle");
    }
    /**
     * {@snippet :
     * void glfwSetWindowTitle(GLFWwindow* window, char* title);
     * }
     */
    public static void glfwSetWindowTitle(MemorySegment window, MemorySegment title) {
        var mh$ = glfwSetWindowTitle$MH();
        try {
            mh$.invokeExact(window, title);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwSetWindowIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$1164.const$3,"glfwSetWindowIcon");
    }
    /**
     * {@snippet :
     * void glfwSetWindowIcon(GLFWwindow* window, int count, const GLFWimage* images);
     * }
     */
    public static void glfwSetWindowIcon(MemorySegment window, int count, MemorySegment images) {
        var mh$ = glfwSetWindowIcon$MH();
        try {
            mh$.invokeExact(window, count, images);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwGetWindowPos$MH() {
        return RuntimeHelper.requireNonNull(constants$1164.const$4,"glfwGetWindowPos");
    }
    /**
     * {@snippet :
     * void glfwGetWindowPos(GLFWwindow* window, int* xpos, int* ypos);
     * }
     */
    public static void glfwGetWindowPos(MemorySegment window, MemorySegment xpos, MemorySegment ypos) {
        var mh$ = glfwGetWindowPos$MH();
        try {
            mh$.invokeExact(window, xpos, ypos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwSetWindowPos$MH() {
        return RuntimeHelper.requireNonNull(constants$1164.const$5,"glfwSetWindowPos");
    }
    /**
     * {@snippet :
     * void glfwSetWindowPos(GLFWwindow* window, int xpos, int ypos);
     * }
     */
    public static void glfwSetWindowPos(MemorySegment window, int xpos, int ypos) {
        var mh$ = glfwSetWindowPos$MH();
        try {
            mh$.invokeExact(window, xpos, ypos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwGetWindowSize$MH() {
        return RuntimeHelper.requireNonNull(constants$1165.const$0,"glfwGetWindowSize");
    }
    /**
     * {@snippet :
     * void glfwGetWindowSize(GLFWwindow* window, int* width, int* height);
     * }
     */
    public static void glfwGetWindowSize(MemorySegment window, MemorySegment width, MemorySegment height) {
        var mh$ = glfwGetWindowSize$MH();
        try {
            mh$.invokeExact(window, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwSetWindowSizeLimits$MH() {
        return RuntimeHelper.requireNonNull(constants$1165.const$1,"glfwSetWindowSizeLimits");
    }
    /**
     * {@snippet :
     * void glfwSetWindowSizeLimits(GLFWwindow* window, int minwidth, int minheight, int maxwidth, int maxheight);
     * }
     */
    public static void glfwSetWindowSizeLimits(MemorySegment window, int minwidth, int minheight, int maxwidth, int maxheight) {
        var mh$ = glfwSetWindowSizeLimits$MH();
        try {
            mh$.invokeExact(window, minwidth, minheight, maxwidth, maxheight);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwSetWindowAspectRatio$MH() {
        return RuntimeHelper.requireNonNull(constants$1165.const$2,"glfwSetWindowAspectRatio");
    }
    /**
     * {@snippet :
     * void glfwSetWindowAspectRatio(GLFWwindow* window, int numer, int denom);
     * }
     */
    public static void glfwSetWindowAspectRatio(MemorySegment window, int numer, int denom) {
        var mh$ = glfwSetWindowAspectRatio$MH();
        try {
            mh$.invokeExact(window, numer, denom);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwSetWindowSize$MH() {
        return RuntimeHelper.requireNonNull(constants$1165.const$3,"glfwSetWindowSize");
    }
    /**
     * {@snippet :
     * void glfwSetWindowSize(GLFWwindow* window, int width, int height);
     * }
     */
    public static void glfwSetWindowSize(MemorySegment window, int width, int height) {
        var mh$ = glfwSetWindowSize$MH();
        try {
            mh$.invokeExact(window, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwGetFramebufferSize$MH() {
        return RuntimeHelper.requireNonNull(constants$1165.const$4,"glfwGetFramebufferSize");
    }
    /**
     * {@snippet :
     * void glfwGetFramebufferSize(GLFWwindow* window, int* width, int* height);
     * }
     */
    public static void glfwGetFramebufferSize(MemorySegment window, MemorySegment width, MemorySegment height) {
        var mh$ = glfwGetFramebufferSize$MH();
        try {
            mh$.invokeExact(window, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwGetWindowFrameSize$MH() {
        return RuntimeHelper.requireNonNull(constants$1165.const$5,"glfwGetWindowFrameSize");
    }
    /**
     * {@snippet :
     * void glfwGetWindowFrameSize(GLFWwindow* window, int* left, int* top, int* right, int* bottom);
     * }
     */
    public static void glfwGetWindowFrameSize(MemorySegment window, MemorySegment left, MemorySegment top, MemorySegment right, MemorySegment bottom) {
        var mh$ = glfwGetWindowFrameSize$MH();
        try {
            mh$.invokeExact(window, left, top, right, bottom);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwGetWindowContentScale$MH() {
        return RuntimeHelper.requireNonNull(constants$1166.const$0,"glfwGetWindowContentScale");
    }
    /**
     * {@snippet :
     * void glfwGetWindowContentScale(GLFWwindow* window, float* xscale, float* yscale);
     * }
     */
    public static void glfwGetWindowContentScale(MemorySegment window, MemorySegment xscale, MemorySegment yscale) {
        var mh$ = glfwGetWindowContentScale$MH();
        try {
            mh$.invokeExact(window, xscale, yscale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwGetWindowOpacity$MH() {
        return RuntimeHelper.requireNonNull(constants$1166.const$2,"glfwGetWindowOpacity");
    }
    /**
     * {@snippet :
     * float glfwGetWindowOpacity(GLFWwindow* window);
     * }
     */
    public static float glfwGetWindowOpacity(MemorySegment window) {
        var mh$ = glfwGetWindowOpacity$MH();
        try {
            return (float)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwSetWindowOpacity$MH() {
        return RuntimeHelper.requireNonNull(constants$1166.const$3,"glfwSetWindowOpacity");
    }
    /**
     * {@snippet :
     * void glfwSetWindowOpacity(GLFWwindow* window, float opacity);
     * }
     */
    public static void glfwSetWindowOpacity(MemorySegment window, float opacity) {
        var mh$ = glfwSetWindowOpacity$MH();
        try {
            mh$.invokeExact(window, opacity);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwIconifyWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$1166.const$4,"glfwIconifyWindow");
    }
    /**
     * {@snippet :
     * void glfwIconifyWindow(GLFWwindow* window);
     * }
     */
    public static void glfwIconifyWindow(MemorySegment window) {
        var mh$ = glfwIconifyWindow$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwRestoreWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$1166.const$5,"glfwRestoreWindow");
    }
    /**
     * {@snippet :
     * void glfwRestoreWindow(GLFWwindow* window);
     * }
     */
    public static void glfwRestoreWindow(MemorySegment window) {
        var mh$ = glfwRestoreWindow$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwMaximizeWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$1167.const$0,"glfwMaximizeWindow");
    }
    /**
     * {@snippet :
     * void glfwMaximizeWindow(GLFWwindow* window);
     * }
     */
    public static void glfwMaximizeWindow(MemorySegment window) {
        var mh$ = glfwMaximizeWindow$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwShowWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$1167.const$1,"glfwShowWindow");
    }
    /**
     * {@snippet :
     * void glfwShowWindow(GLFWwindow* window);
     * }
     */
    public static void glfwShowWindow(MemorySegment window) {
        var mh$ = glfwShowWindow$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwHideWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$1167.const$2,"glfwHideWindow");
    }
    /**
     * {@snippet :
     * void glfwHideWindow(GLFWwindow* window);
     * }
     */
    public static void glfwHideWindow(MemorySegment window) {
        var mh$ = glfwHideWindow$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwFocusWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$1167.const$3,"glfwFocusWindow");
    }
    /**
     * {@snippet :
     * void glfwFocusWindow(GLFWwindow* window);
     * }
     */
    public static void glfwFocusWindow(MemorySegment window) {
        var mh$ = glfwFocusWindow$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwRequestWindowAttention$MH() {
        return RuntimeHelper.requireNonNull(constants$1167.const$4,"glfwRequestWindowAttention");
    }
    /**
     * {@snippet :
     * void glfwRequestWindowAttention(GLFWwindow* window);
     * }
     */
    public static void glfwRequestWindowAttention(MemorySegment window) {
        var mh$ = glfwRequestWindowAttention$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwGetWindowMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$1167.const$5,"glfwGetWindowMonitor");
    }
    /**
     * {@snippet :
     * GLFWmonitor* glfwGetWindowMonitor(GLFWwindow* window);
     * }
     */
    public static MemorySegment glfwGetWindowMonitor(MemorySegment window) {
        var mh$ = glfwGetWindowMonitor$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwSetWindowMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$1168.const$1,"glfwSetWindowMonitor");
    }
    /**
     * {@snippet :
     * void glfwSetWindowMonitor(GLFWwindow* window, GLFWmonitor* monitor, int xpos, int ypos, int width, int height, int refreshRate);
     * }
     */
    public static void glfwSetWindowMonitor(MemorySegment window, MemorySegment monitor, int xpos, int ypos, int width, int height, int refreshRate) {
        var mh$ = glfwSetWindowMonitor$MH();
        try {
            mh$.invokeExact(window, monitor, xpos, ypos, width, height, refreshRate);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwGetWindowAttrib$MH() {
        return RuntimeHelper.requireNonNull(constants$1168.const$2,"glfwGetWindowAttrib");
    }
    /**
     * {@snippet :
     * int glfwGetWindowAttrib(GLFWwindow* window, int attrib);
     * }
     */
    public static int glfwGetWindowAttrib(MemorySegment window, int attrib) {
        var mh$ = glfwGetWindowAttrib$MH();
        try {
            return (int)mh$.invokeExact(window, attrib);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwSetWindowAttrib$MH() {
        return RuntimeHelper.requireNonNull(constants$1168.const$3,"glfwSetWindowAttrib");
    }
    /**
     * {@snippet :
     * void glfwSetWindowAttrib(GLFWwindow* window, int attrib, int value);
     * }
     */
    public static void glfwSetWindowAttrib(MemorySegment window, int attrib, int value) {
        var mh$ = glfwSetWindowAttrib$MH();
        try {
            mh$.invokeExact(window, attrib, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwSetWindowUserPointer$MH() {
        return RuntimeHelper.requireNonNull(constants$1168.const$4,"glfwSetWindowUserPointer");
    }
    /**
     * {@snippet :
     * void glfwSetWindowUserPointer(GLFWwindow* window, void* pointer);
     * }
     */
    public static void glfwSetWindowUserPointer(MemorySegment window, MemorySegment pointer) {
        var mh$ = glfwSetWindowUserPointer$MH();
        try {
            mh$.invokeExact(window, pointer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwGetWindowUserPointer$MH() {
        return RuntimeHelper.requireNonNull(constants$1168.const$5,"glfwGetWindowUserPointer");
    }
    /**
     * {@snippet :
     * void* glfwGetWindowUserPointer(GLFWwindow* window);
     * }
     */
    public static MemorySegment glfwGetWindowUserPointer(MemorySegment window) {
        var mh$ = glfwGetWindowUserPointer$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwSetWindowPosCallback$MH() {
        return RuntimeHelper.requireNonNull(constants$1169.const$0,"glfwSetWindowPosCallback");
    }
    /**
     * {@snippet :
     * GLFWwindowposfun glfwSetWindowPosCallback(GLFWwindow* window, GLFWwindowposfun callback);
     * }
     */
    public static MemorySegment glfwSetWindowPosCallback(MemorySegment window, MemorySegment callback) {
        var mh$ = glfwSetWindowPosCallback$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window, callback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwSetWindowSizeCallback$MH() {
        return RuntimeHelper.requireNonNull(constants$1169.const$1,"glfwSetWindowSizeCallback");
    }
    /**
     * {@snippet :
     * GLFWwindowsizefun glfwSetWindowSizeCallback(GLFWwindow* window, GLFWwindowsizefun callback);
     * }
     */
    public static MemorySegment glfwSetWindowSizeCallback(MemorySegment window, MemorySegment callback) {
        var mh$ = glfwSetWindowSizeCallback$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window, callback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwSetWindowCloseCallback$MH() {
        return RuntimeHelper.requireNonNull(constants$1169.const$2,"glfwSetWindowCloseCallback");
    }
    /**
     * {@snippet :
     * GLFWwindowclosefun glfwSetWindowCloseCallback(GLFWwindow* window, GLFWwindowclosefun callback);
     * }
     */
    public static MemorySegment glfwSetWindowCloseCallback(MemorySegment window, MemorySegment callback) {
        var mh$ = glfwSetWindowCloseCallback$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window, callback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwSetWindowRefreshCallback$MH() {
        return RuntimeHelper.requireNonNull(constants$1169.const$3,"glfwSetWindowRefreshCallback");
    }
    /**
     * {@snippet :
     * GLFWwindowrefreshfun glfwSetWindowRefreshCallback(GLFWwindow* window, GLFWwindowrefreshfun callback);
     * }
     */
    public static MemorySegment glfwSetWindowRefreshCallback(MemorySegment window, MemorySegment callback) {
        var mh$ = glfwSetWindowRefreshCallback$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window, callback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwSetWindowFocusCallback$MH() {
        return RuntimeHelper.requireNonNull(constants$1169.const$4,"glfwSetWindowFocusCallback");
    }
    /**
     * {@snippet :
     * GLFWwindowfocusfun glfwSetWindowFocusCallback(GLFWwindow* window, GLFWwindowfocusfun callback);
     * }
     */
    public static MemorySegment glfwSetWindowFocusCallback(MemorySegment window, MemorySegment callback) {
        var mh$ = glfwSetWindowFocusCallback$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window, callback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwSetWindowIconifyCallback$MH() {
        return RuntimeHelper.requireNonNull(constants$1169.const$5,"glfwSetWindowIconifyCallback");
    }
    /**
     * {@snippet :
     * GLFWwindowiconifyfun glfwSetWindowIconifyCallback(GLFWwindow* window, GLFWwindowiconifyfun callback);
     * }
     */
    public static MemorySegment glfwSetWindowIconifyCallback(MemorySegment window, MemorySegment callback) {
        var mh$ = glfwSetWindowIconifyCallback$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window, callback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwSetWindowMaximizeCallback$MH() {
        return RuntimeHelper.requireNonNull(constants$1170.const$0,"glfwSetWindowMaximizeCallback");
    }
    /**
     * {@snippet :
     * GLFWwindowmaximizefun glfwSetWindowMaximizeCallback(GLFWwindow* window, GLFWwindowmaximizefun callback);
     * }
     */
    public static MemorySegment glfwSetWindowMaximizeCallback(MemorySegment window, MemorySegment callback) {
        var mh$ = glfwSetWindowMaximizeCallback$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window, callback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwSetFramebufferSizeCallback$MH() {
        return RuntimeHelper.requireNonNull(constants$1170.const$1,"glfwSetFramebufferSizeCallback");
    }
    /**
     * {@snippet :
     * GLFWframebuffersizefun glfwSetFramebufferSizeCallback(GLFWwindow* window, GLFWframebuffersizefun callback);
     * }
     */
    public static MemorySegment glfwSetFramebufferSizeCallback(MemorySegment window, MemorySegment callback) {
        var mh$ = glfwSetFramebufferSizeCallback$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window, callback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwSetWindowContentScaleCallback$MH() {
        return RuntimeHelper.requireNonNull(constants$1170.const$2,"glfwSetWindowContentScaleCallback");
    }
    /**
     * {@snippet :
     * GLFWwindowcontentscalefun glfwSetWindowContentScaleCallback(GLFWwindow* window, GLFWwindowcontentscalefun callback);
     * }
     */
    public static MemorySegment glfwSetWindowContentScaleCallback(MemorySegment window, MemorySegment callback) {
        var mh$ = glfwSetWindowContentScaleCallback$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window, callback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwPollEvents$MH() {
        return RuntimeHelper.requireNonNull(constants$1170.const$3,"glfwPollEvents");
    }
    /**
     * {@snippet :
     * void glfwPollEvents();
     * }
     */
    public static void glfwPollEvents() {
        var mh$ = glfwPollEvents$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwWaitEvents$MH() {
        return RuntimeHelper.requireNonNull(constants$1170.const$4,"glfwWaitEvents");
    }
    /**
     * {@snippet :
     * void glfwWaitEvents();
     * }
     */
    public static void glfwWaitEvents() {
        var mh$ = glfwWaitEvents$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwWaitEventsTimeout$MH() {
        return RuntimeHelper.requireNonNull(constants$1170.const$5,"glfwWaitEventsTimeout");
    }
    /**
     * {@snippet :
     * void glfwWaitEventsTimeout(double timeout);
     * }
     */
    public static void glfwWaitEventsTimeout(double timeout) {
        var mh$ = glfwWaitEventsTimeout$MH();
        try {
            mh$.invokeExact(timeout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwPostEmptyEvent$MH() {
        return RuntimeHelper.requireNonNull(constants$1171.const$0,"glfwPostEmptyEvent");
    }
    /**
     * {@snippet :
     * void glfwPostEmptyEvent();
     * }
     */
    public static void glfwPostEmptyEvent() {
        var mh$ = glfwPostEmptyEvent$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwGetInputMode$MH() {
        return RuntimeHelper.requireNonNull(constants$1171.const$1,"glfwGetInputMode");
    }
    /**
     * {@snippet :
     * int glfwGetInputMode(GLFWwindow* window, int mode);
     * }
     */
    public static int glfwGetInputMode(MemorySegment window, int mode) {
        var mh$ = glfwGetInputMode$MH();
        try {
            return (int)mh$.invokeExact(window, mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwSetInputMode$MH() {
        return RuntimeHelper.requireNonNull(constants$1171.const$2,"glfwSetInputMode");
    }
    /**
     * {@snippet :
     * void glfwSetInputMode(GLFWwindow* window, int mode, int value);
     * }
     */
    public static void glfwSetInputMode(MemorySegment window, int mode, int value) {
        var mh$ = glfwSetInputMode$MH();
        try {
            mh$.invokeExact(window, mode, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwRawMouseMotionSupported$MH() {
        return RuntimeHelper.requireNonNull(constants$1171.const$3,"glfwRawMouseMotionSupported");
    }
    /**
     * {@snippet :
     * int glfwRawMouseMotionSupported();
     * }
     */
    public static int glfwRawMouseMotionSupported() {
        var mh$ = glfwRawMouseMotionSupported$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwGetKeyName$MH() {
        return RuntimeHelper.requireNonNull(constants$1171.const$5,"glfwGetKeyName");
    }
    /**
     * {@snippet :
     * char* glfwGetKeyName(int key, int scancode);
     * }
     */
    public static MemorySegment glfwGetKeyName(int key, int scancode) {
        var mh$ = glfwGetKeyName$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(key, scancode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwGetKeyScancode$MH() {
        return RuntimeHelper.requireNonNull(constants$1172.const$0,"glfwGetKeyScancode");
    }
    /**
     * {@snippet :
     * int glfwGetKeyScancode(int key);
     * }
     */
    public static int glfwGetKeyScancode(int key) {
        var mh$ = glfwGetKeyScancode$MH();
        try {
            return (int)mh$.invokeExact(key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwGetKey$MH() {
        return RuntimeHelper.requireNonNull(constants$1172.const$1,"glfwGetKey");
    }
    /**
     * {@snippet :
     * int glfwGetKey(GLFWwindow* window, int key);
     * }
     */
    public static int glfwGetKey(MemorySegment window, int key) {
        var mh$ = glfwGetKey$MH();
        try {
            return (int)mh$.invokeExact(window, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwGetMouseButton$MH() {
        return RuntimeHelper.requireNonNull(constants$1172.const$2,"glfwGetMouseButton");
    }
    /**
     * {@snippet :
     * int glfwGetMouseButton(GLFWwindow* window, int button);
     * }
     */
    public static int glfwGetMouseButton(MemorySegment window, int button) {
        var mh$ = glfwGetMouseButton$MH();
        try {
            return (int)mh$.invokeExact(window, button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwGetCursorPos$MH() {
        return RuntimeHelper.requireNonNull(constants$1172.const$3,"glfwGetCursorPos");
    }
    /**
     * {@snippet :
     * void glfwGetCursorPos(GLFWwindow* window, double* xpos, double* ypos);
     * }
     */
    public static void glfwGetCursorPos(MemorySegment window, MemorySegment xpos, MemorySegment ypos) {
        var mh$ = glfwGetCursorPos$MH();
        try {
            mh$.invokeExact(window, xpos, ypos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwSetCursorPos$MH() {
        return RuntimeHelper.requireNonNull(constants$1172.const$4,"glfwSetCursorPos");
    }
    /**
     * {@snippet :
     * void glfwSetCursorPos(GLFWwindow* window, double xpos, double ypos);
     * }
     */
    public static void glfwSetCursorPos(MemorySegment window, double xpos, double ypos) {
        var mh$ = glfwSetCursorPos$MH();
        try {
            mh$.invokeExact(window, xpos, ypos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwCreateCursor$MH() {
        return RuntimeHelper.requireNonNull(constants$1172.const$6,"glfwCreateCursor");
    }
    /**
     * {@snippet :
     * GLFWcursor* glfwCreateCursor(const GLFWimage* image, int xhot, int yhot);
     * }
     */
    public static MemorySegment glfwCreateCursor(MemorySegment image, int xhot, int yhot) {
        var mh$ = glfwCreateCursor$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(image, xhot, yhot);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwCreateStandardCursor$MH() {
        return RuntimeHelper.requireNonNull(constants$1173.const$0,"glfwCreateStandardCursor");
    }
    /**
     * {@snippet :
     * GLFWcursor* glfwCreateStandardCursor(int shape);
     * }
     */
    public static MemorySegment glfwCreateStandardCursor(int shape) {
        var mh$ = glfwCreateStandardCursor$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(shape);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwDestroyCursor$MH() {
        return RuntimeHelper.requireNonNull(constants$1173.const$1,"glfwDestroyCursor");
    }
    /**
     * {@snippet :
     * void glfwDestroyCursor(GLFWcursor* cursor);
     * }
     */
    public static void glfwDestroyCursor(MemorySegment cursor) {
        var mh$ = glfwDestroyCursor$MH();
        try {
            mh$.invokeExact(cursor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwSetCursor$MH() {
        return RuntimeHelper.requireNonNull(constants$1173.const$2,"glfwSetCursor");
    }
    /**
     * {@snippet :
     * void glfwSetCursor(GLFWwindow* window, GLFWcursor* cursor);
     * }
     */
    public static void glfwSetCursor(MemorySegment window, MemorySegment cursor) {
        var mh$ = glfwSetCursor$MH();
        try {
            mh$.invokeExact(window, cursor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwSetKeyCallback$MH() {
        return RuntimeHelper.requireNonNull(constants$1173.const$3,"glfwSetKeyCallback");
    }
    /**
     * {@snippet :
     * GLFWkeyfun glfwSetKeyCallback(GLFWwindow* window, GLFWkeyfun callback);
     * }
     */
    public static MemorySegment glfwSetKeyCallback(MemorySegment window, MemorySegment callback) {
        var mh$ = glfwSetKeyCallback$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window, callback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwSetCharCallback$MH() {
        return RuntimeHelper.requireNonNull(constants$1173.const$4,"glfwSetCharCallback");
    }
    /**
     * {@snippet :
     * GLFWcharfun glfwSetCharCallback(GLFWwindow* window, GLFWcharfun callback);
     * }
     */
    public static MemorySegment glfwSetCharCallback(MemorySegment window, MemorySegment callback) {
        var mh$ = glfwSetCharCallback$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window, callback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwSetCharModsCallback$MH() {
        return RuntimeHelper.requireNonNull(constants$1173.const$5,"glfwSetCharModsCallback");
    }
    /**
     * {@snippet :
     * GLFWcharmodsfun glfwSetCharModsCallback(GLFWwindow* window, GLFWcharmodsfun callback);
     * }
     */
    public static MemorySegment glfwSetCharModsCallback(MemorySegment window, MemorySegment callback) {
        var mh$ = glfwSetCharModsCallback$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window, callback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwSetMouseButtonCallback$MH() {
        return RuntimeHelper.requireNonNull(constants$1174.const$0,"glfwSetMouseButtonCallback");
    }
    /**
     * {@snippet :
     * GLFWmousebuttonfun glfwSetMouseButtonCallback(GLFWwindow* window, GLFWmousebuttonfun callback);
     * }
     */
    public static MemorySegment glfwSetMouseButtonCallback(MemorySegment window, MemorySegment callback) {
        var mh$ = glfwSetMouseButtonCallback$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window, callback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwSetCursorPosCallback$MH() {
        return RuntimeHelper.requireNonNull(constants$1174.const$1,"glfwSetCursorPosCallback");
    }
    /**
     * {@snippet :
     * GLFWcursorposfun glfwSetCursorPosCallback(GLFWwindow* window, GLFWcursorposfun callback);
     * }
     */
    public static MemorySegment glfwSetCursorPosCallback(MemorySegment window, MemorySegment callback) {
        var mh$ = glfwSetCursorPosCallback$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window, callback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwSetCursorEnterCallback$MH() {
        return RuntimeHelper.requireNonNull(constants$1174.const$2,"glfwSetCursorEnterCallback");
    }
    /**
     * {@snippet :
     * GLFWcursorenterfun glfwSetCursorEnterCallback(GLFWwindow* window, GLFWcursorenterfun callback);
     * }
     */
    public static MemorySegment glfwSetCursorEnterCallback(MemorySegment window, MemorySegment callback) {
        var mh$ = glfwSetCursorEnterCallback$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window, callback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwSetScrollCallback$MH() {
        return RuntimeHelper.requireNonNull(constants$1174.const$3,"glfwSetScrollCallback");
    }
    /**
     * {@snippet :
     * GLFWscrollfun glfwSetScrollCallback(GLFWwindow* window, GLFWscrollfun callback);
     * }
     */
    public static MemorySegment glfwSetScrollCallback(MemorySegment window, MemorySegment callback) {
        var mh$ = glfwSetScrollCallback$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window, callback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwSetDropCallback$MH() {
        return RuntimeHelper.requireNonNull(constants$1174.const$4,"glfwSetDropCallback");
    }
    /**
     * {@snippet :
     * GLFWdropfun glfwSetDropCallback(GLFWwindow* window, GLFWdropfun callback);
     * }
     */
    public static MemorySegment glfwSetDropCallback(MemorySegment window, MemorySegment callback) {
        var mh$ = glfwSetDropCallback$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window, callback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwJoystickPresent$MH() {
        return RuntimeHelper.requireNonNull(constants$1174.const$5,"glfwJoystickPresent");
    }
    /**
     * {@snippet :
     * int glfwJoystickPresent(int jid);
     * }
     */
    public static int glfwJoystickPresent(int jid) {
        var mh$ = glfwJoystickPresent$MH();
        try {
            return (int)mh$.invokeExact(jid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwGetJoystickAxes$MH() {
        return RuntimeHelper.requireNonNull(constants$1175.const$1,"glfwGetJoystickAxes");
    }
    /**
     * {@snippet :
     * float* glfwGetJoystickAxes(int jid, int* count);
     * }
     */
    public static MemorySegment glfwGetJoystickAxes(int jid, MemorySegment count) {
        var mh$ = glfwGetJoystickAxes$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(jid, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwGetJoystickButtons$MH() {
        return RuntimeHelper.requireNonNull(constants$1175.const$2,"glfwGetJoystickButtons");
    }
    /**
     * {@snippet :
     * unsigned char* glfwGetJoystickButtons(int jid, int* count);
     * }
     */
    public static MemorySegment glfwGetJoystickButtons(int jid, MemorySegment count) {
        var mh$ = glfwGetJoystickButtons$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(jid, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwGetJoystickHats$MH() {
        return RuntimeHelper.requireNonNull(constants$1175.const$3,"glfwGetJoystickHats");
    }
    /**
     * {@snippet :
     * unsigned char* glfwGetJoystickHats(int jid, int* count);
     * }
     */
    public static MemorySegment glfwGetJoystickHats(int jid, MemorySegment count) {
        var mh$ = glfwGetJoystickHats$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(jid, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwGetJoystickName$MH() {
        return RuntimeHelper.requireNonNull(constants$1175.const$4,"glfwGetJoystickName");
    }
    /**
     * {@snippet :
     * char* glfwGetJoystickName(int jid);
     * }
     */
    public static MemorySegment glfwGetJoystickName(int jid) {
        var mh$ = glfwGetJoystickName$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(jid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwGetJoystickGUID$MH() {
        return RuntimeHelper.requireNonNull(constants$1175.const$5,"glfwGetJoystickGUID");
    }
    /**
     * {@snippet :
     * char* glfwGetJoystickGUID(int jid);
     * }
     */
    public static MemorySegment glfwGetJoystickGUID(int jid) {
        var mh$ = glfwGetJoystickGUID$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(jid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwSetJoystickUserPointer$MH() {
        return RuntimeHelper.requireNonNull(constants$1176.const$0,"glfwSetJoystickUserPointer");
    }
    /**
     * {@snippet :
     * void glfwSetJoystickUserPointer(int jid, void* pointer);
     * }
     */
    public static void glfwSetJoystickUserPointer(int jid, MemorySegment pointer) {
        var mh$ = glfwSetJoystickUserPointer$MH();
        try {
            mh$.invokeExact(jid, pointer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwGetJoystickUserPointer$MH() {
        return RuntimeHelper.requireNonNull(constants$1176.const$1,"glfwGetJoystickUserPointer");
    }
    /**
     * {@snippet :
     * void* glfwGetJoystickUserPointer(int jid);
     * }
     */
    public static MemorySegment glfwGetJoystickUserPointer(int jid) {
        var mh$ = glfwGetJoystickUserPointer$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(jid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwJoystickIsGamepad$MH() {
        return RuntimeHelper.requireNonNull(constants$1176.const$2,"glfwJoystickIsGamepad");
    }
    /**
     * {@snippet :
     * int glfwJoystickIsGamepad(int jid);
     * }
     */
    public static int glfwJoystickIsGamepad(int jid) {
        var mh$ = glfwJoystickIsGamepad$MH();
        try {
            return (int)mh$.invokeExact(jid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwSetJoystickCallback$MH() {
        return RuntimeHelper.requireNonNull(constants$1176.const$3,"glfwSetJoystickCallback");
    }
    /**
     * {@snippet :
     * GLFWjoystickfun glfwSetJoystickCallback(GLFWjoystickfun callback);
     * }
     */
    public static MemorySegment glfwSetJoystickCallback(MemorySegment callback) {
        var mh$ = glfwSetJoystickCallback$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(callback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwUpdateGamepadMappings$MH() {
        return RuntimeHelper.requireNonNull(constants$1176.const$4,"glfwUpdateGamepadMappings");
    }
    /**
     * {@snippet :
     * int glfwUpdateGamepadMappings(char* string);
     * }
     */
    public static int glfwUpdateGamepadMappings(MemorySegment string) {
        var mh$ = glfwUpdateGamepadMappings$MH();
        try {
            return (int)mh$.invokeExact(string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwGetGamepadName$MH() {
        return RuntimeHelper.requireNonNull(constants$1176.const$5,"glfwGetGamepadName");
    }
    /**
     * {@snippet :
     * char* glfwGetGamepadName(int jid);
     * }
     */
    public static MemorySegment glfwGetGamepadName(int jid) {
        var mh$ = glfwGetGamepadName$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(jid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwGetGamepadState$MH() {
        return RuntimeHelper.requireNonNull(constants$1177.const$1,"glfwGetGamepadState");
    }
    /**
     * {@snippet :
     * int glfwGetGamepadState(int jid, GLFWgamepadstate* state);
     * }
     */
    public static int glfwGetGamepadState(int jid, MemorySegment state) {
        var mh$ = glfwGetGamepadState$MH();
        try {
            return (int)mh$.invokeExact(jid, state);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwSetClipboardString$MH() {
        return RuntimeHelper.requireNonNull(constants$1177.const$2,"glfwSetClipboardString");
    }
    /**
     * {@snippet :
     * void glfwSetClipboardString(GLFWwindow* window, char* string);
     * }
     */
    public static void glfwSetClipboardString(MemorySegment window, MemorySegment string) {
        var mh$ = glfwSetClipboardString$MH();
        try {
            mh$.invokeExact(window, string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwGetClipboardString$MH() {
        return RuntimeHelper.requireNonNull(constants$1177.const$3,"glfwGetClipboardString");
    }
    /**
     * {@snippet :
     * char* glfwGetClipboardString(GLFWwindow* window);
     * }
     */
    public static MemorySegment glfwGetClipboardString(MemorySegment window) {
        var mh$ = glfwGetClipboardString$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwGetTime$MH() {
        return RuntimeHelper.requireNonNull(constants$1177.const$5,"glfwGetTime");
    }
    /**
     * {@snippet :
     * double glfwGetTime();
     * }
     */
    public static double glfwGetTime() {
        var mh$ = glfwGetTime$MH();
        try {
            return (double)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwSetTime$MH() {
        return RuntimeHelper.requireNonNull(constants$1178.const$0,"glfwSetTime");
    }
    /**
     * {@snippet :
     * void glfwSetTime(double time);
     * }
     */
    public static void glfwSetTime(double time) {
        var mh$ = glfwSetTime$MH();
        try {
            mh$.invokeExact(time);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwGetTimerValue$MH() {
        return RuntimeHelper.requireNonNull(constants$1178.const$2,"glfwGetTimerValue");
    }
    /**
     * {@snippet :
     * uint64_t glfwGetTimerValue();
     * }
     */
    public static long glfwGetTimerValue() {
        var mh$ = glfwGetTimerValue$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwGetTimerFrequency$MH() {
        return RuntimeHelper.requireNonNull(constants$1178.const$3,"glfwGetTimerFrequency");
    }
    /**
     * {@snippet :
     * uint64_t glfwGetTimerFrequency();
     * }
     */
    public static long glfwGetTimerFrequency() {
        var mh$ = glfwGetTimerFrequency$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwMakeContextCurrent$MH() {
        return RuntimeHelper.requireNonNull(constants$1178.const$4,"glfwMakeContextCurrent");
    }
    /**
     * {@snippet :
     * void glfwMakeContextCurrent(GLFWwindow* window);
     * }
     */
    public static void glfwMakeContextCurrent(MemorySegment window) {
        var mh$ = glfwMakeContextCurrent$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwGetCurrentContext$MH() {
        return RuntimeHelper.requireNonNull(constants$1178.const$5,"glfwGetCurrentContext");
    }
    /**
     * {@snippet :
     * GLFWwindow* glfwGetCurrentContext();
     * }
     */
    public static MemorySegment glfwGetCurrentContext() {
        var mh$ = glfwGetCurrentContext$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwSwapBuffers$MH() {
        return RuntimeHelper.requireNonNull(constants$1179.const$0,"glfwSwapBuffers");
    }
    /**
     * {@snippet :
     * void glfwSwapBuffers(GLFWwindow* window);
     * }
     */
    public static void glfwSwapBuffers(MemorySegment window) {
        var mh$ = glfwSwapBuffers$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwSwapInterval$MH() {
        return RuntimeHelper.requireNonNull(constants$1179.const$1,"glfwSwapInterval");
    }
    /**
     * {@snippet :
     * void glfwSwapInterval(int interval);
     * }
     */
    public static void glfwSwapInterval(int interval) {
        var mh$ = glfwSwapInterval$MH();
        try {
            mh$.invokeExact(interval);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwExtensionSupported$MH() {
        return RuntimeHelper.requireNonNull(constants$1179.const$2,"glfwExtensionSupported");
    }
    /**
     * {@snippet :
     * int glfwExtensionSupported(char* extension);
     * }
     */
    public static int glfwExtensionSupported(MemorySegment extension) {
        var mh$ = glfwExtensionSupported$MH();
        try {
            return (int)mh$.invokeExact(extension);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwGetProcAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$1179.const$3,"glfwGetProcAddress");
    }
    /**
     * {@snippet :
     * GLFWglproc glfwGetProcAddress(char* procname);
     * }
     */
    public static MemorySegment glfwGetProcAddress(MemorySegment procname) {
        var mh$ = glfwGetProcAddress$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(procname);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwVulkanSupported$MH() {
        return RuntimeHelper.requireNonNull(constants$1179.const$4,"glfwVulkanSupported");
    }
    /**
     * {@snippet :
     * int glfwVulkanSupported();
     * }
     */
    public static int glfwVulkanSupported() {
        var mh$ = glfwVulkanSupported$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwGetRequiredInstanceExtensions$MH() {
        return RuntimeHelper.requireNonNull(constants$1179.const$5,"glfwGetRequiredInstanceExtensions");
    }
    /**
     * {@snippet :
     * char** glfwGetRequiredInstanceExtensions(uint32_t* count);
     * }
     */
    public static MemorySegment glfwGetRequiredInstanceExtensions(MemorySegment count) {
        var mh$ = glfwGetRequiredInstanceExtensions$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwGetInstanceProcAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$1180.const$0,"glfwGetInstanceProcAddress");
    }
    /**
     * {@snippet :
     * GLFWvkproc glfwGetInstanceProcAddress(VkInstance instance, char* procname);
     * }
     */
    public static MemorySegment glfwGetInstanceProcAddress(MemorySegment instance, MemorySegment procname) {
        var mh$ = glfwGetInstanceProcAddress$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(instance, procname);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwGetPhysicalDevicePresentationSupport$MH() {
        return RuntimeHelper.requireNonNull(constants$1180.const$1,"glfwGetPhysicalDevicePresentationSupport");
    }
    /**
     * {@snippet :
     * int glfwGetPhysicalDevicePresentationSupport(VkInstance instance, VkPhysicalDevice device, uint32_t queuefamily);
     * }
     */
    public static int glfwGetPhysicalDevicePresentationSupport(MemorySegment instance, MemorySegment device, int queuefamily) {
        var mh$ = glfwGetPhysicalDevicePresentationSupport$MH();
        try {
            return (int)mh$.invokeExact(instance, device, queuefamily);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glfwCreateWindowSurface$MH() {
        return RuntimeHelper.requireNonNull(constants$1180.const$2,"glfwCreateWindowSurface");
    }
    /**
     * {@snippet :
     * VkResult glfwCreateWindowSurface(VkInstance instance, GLFWwindow* window, const VkAllocationCallbacks* allocator, VkSurfaceKHR* surface);
     * }
     */
    public static int glfwCreateWindowSurface(MemorySegment instance, MemorySegment window, MemorySegment allocator, MemorySegment surface) {
        var mh$ = glfwCreateWindowSurface$MH();
        try {
            return (int)mh$.invokeExact(instance, window, allocator, surface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * #define NULL 0
     * }
     */
    public static MemorySegment NULL() {
        return constants$1180.const$3;
    }
    /**
     * {@snippet :
     * #define _VCRUNTIME_DISABLED_WARNINGS 4514
     * }
     */
    public static int _VCRUNTIME_DISABLED_WARNINGS() {
        return (int)4514L;
    }
    /**
     * {@snippet :
     * #define INT8_MIN -128
     * }
     */
    public static int INT8_MIN() {
        return (int)-128L;
    }
    /**
     * {@snippet :
     * #define INT16_MIN -32768
     * }
     */
    public static int INT16_MIN() {
        return (int)-32768L;
    }
    /**
     * {@snippet :
     * #define INT32_MIN -2147483648
     * }
     */
    public static int INT32_MIN() {
        return (int)-2147483648L;
    }
    /**
     * {@snippet :
     * #define INT64_MIN -9223372036854775808
     * }
     */
    public static long INT64_MIN() {
        return -9223372036854775808L;
    }
    /**
     * {@snippet :
     * #define INT8_MAX 127
     * }
     */
    public static byte INT8_MAX() {
        return (byte)127L;
    }
    /**
     * {@snippet :
     * #define INT16_MAX 32767
     * }
     */
    public static short INT16_MAX() {
        return (short)32767L;
    }
    /**
     * {@snippet :
     * #define INT32_MAX 2147483647
     * }
     */
    public static int INT32_MAX() {
        return (int)2147483647L;
    }
    /**
     * {@snippet :
     * #define INT64_MAX 9223372036854775807
     * }
     */
    public static long INT64_MAX() {
        return 9223372036854775807L;
    }
    /**
     * {@snippet :
     * #define UINT8_MAX 255
     * }
     */
    public static byte UINT8_MAX() {
        return (byte)255L;
    }
    /**
     * {@snippet :
     * #define UINT16_MAX 65535
     * }
     */
    public static short UINT16_MAX() {
        return (short)65535L;
    }
    /**
     * {@snippet :
     * #define UINT32_MAX 4294967295
     * }
     */
    public static int UINT32_MAX() {
        return (int)4294967295L;
    }
    /**
     * {@snippet :
     * #define UINT64_MAX -1
     * }
     */
    public static long UINT64_MAX() {
        return -1L;
    }
    /**
     * {@snippet :
     * #define INT_LEAST8_MIN -128
     * }
     */
    public static int INT_LEAST8_MIN() {
        return (int)-128L;
    }
    /**
     * {@snippet :
     * #define INT_LEAST16_MIN -32768
     * }
     */
    public static int INT_LEAST16_MIN() {
        return (int)-32768L;
    }
    /**
     * {@snippet :
     * #define INT_LEAST32_MIN -2147483648
     * }
     */
    public static int INT_LEAST32_MIN() {
        return (int)-2147483648L;
    }
    /**
     * {@snippet :
     * #define INT_LEAST64_MIN -9223372036854775808
     * }
     */
    public static long INT_LEAST64_MIN() {
        return -9223372036854775808L;
    }
    /**
     * {@snippet :
     * #define INT_LEAST8_MAX 127
     * }
     */
    public static byte INT_LEAST8_MAX() {
        return (byte)127L;
    }
    /**
     * {@snippet :
     * #define INT_LEAST16_MAX 32767
     * }
     */
    public static short INT_LEAST16_MAX() {
        return (short)32767L;
    }
    /**
     * {@snippet :
     * #define INT_LEAST32_MAX 2147483647
     * }
     */
    public static int INT_LEAST32_MAX() {
        return (int)2147483647L;
    }
    /**
     * {@snippet :
     * #define INT_LEAST64_MAX 9223372036854775807
     * }
     */
    public static long INT_LEAST64_MAX() {
        return 9223372036854775807L;
    }
    /**
     * {@snippet :
     * #define UINT_LEAST8_MAX 255
     * }
     */
    public static byte UINT_LEAST8_MAX() {
        return (byte)255L;
    }
    /**
     * {@snippet :
     * #define UINT_LEAST16_MAX 65535
     * }
     */
    public static short UINT_LEAST16_MAX() {
        return (short)65535L;
    }
    /**
     * {@snippet :
     * #define UINT_LEAST32_MAX 4294967295
     * }
     */
    public static int UINT_LEAST32_MAX() {
        return (int)4294967295L;
    }
    /**
     * {@snippet :
     * #define UINT_LEAST64_MAX -1
     * }
     */
    public static long UINT_LEAST64_MAX() {
        return -1L;
    }
    /**
     * {@snippet :
     * #define INT_FAST8_MIN -128
     * }
     */
    public static int INT_FAST8_MIN() {
        return (int)-128L;
    }
    /**
     * {@snippet :
     * #define INT_FAST16_MIN -2147483648
     * }
     */
    public static int INT_FAST16_MIN() {
        return (int)-2147483648L;
    }
    /**
     * {@snippet :
     * #define INT_FAST32_MIN -2147483648
     * }
     */
    public static int INT_FAST32_MIN() {
        return (int)-2147483648L;
    }
    /**
     * {@snippet :
     * #define INT_FAST64_MIN -9223372036854775808
     * }
     */
    public static long INT_FAST64_MIN() {
        return -9223372036854775808L;
    }
    /**
     * {@snippet :
     * #define INT_FAST8_MAX 127
     * }
     */
    public static byte INT_FAST8_MAX() {
        return (byte)127L;
    }
    /**
     * {@snippet :
     * #define INT_FAST16_MAX 2147483647
     * }
     */
    public static int INT_FAST16_MAX() {
        return (int)2147483647L;
    }
    /**
     * {@snippet :
     * #define INT_FAST32_MAX 2147483647
     * }
     */
    public static int INT_FAST32_MAX() {
        return (int)2147483647L;
    }
    /**
     * {@snippet :
     * #define INT_FAST64_MAX 9223372036854775807
     * }
     */
    public static long INT_FAST64_MAX() {
        return 9223372036854775807L;
    }
    /**
     * {@snippet :
     * #define UINT_FAST8_MAX 255
     * }
     */
    public static byte UINT_FAST8_MAX() {
        return (byte)255L;
    }
    /**
     * {@snippet :
     * #define UINT_FAST16_MAX 4294967295
     * }
     */
    public static int UINT_FAST16_MAX() {
        return (int)4294967295L;
    }
    /**
     * {@snippet :
     * #define UINT_FAST32_MAX 4294967295
     * }
     */
    public static int UINT_FAST32_MAX() {
        return (int)4294967295L;
    }
    /**
     * {@snippet :
     * #define UINT_FAST64_MAX -1
     * }
     */
    public static long UINT_FAST64_MAX() {
        return -1L;
    }
    /**
     * {@snippet :
     * #define INTPTR_MIN -9223372036854775808
     * }
     */
    public static long INTPTR_MIN() {
        return -9223372036854775808L;
    }
    /**
     * {@snippet :
     * #define INTPTR_MAX 9223372036854775807
     * }
     */
    public static long INTPTR_MAX() {
        return 9223372036854775807L;
    }
    /**
     * {@snippet :
     * #define UINTPTR_MAX -1
     * }
     */
    public static long UINTPTR_MAX() {
        return -1L;
    }
    /**
     * {@snippet :
     * #define INTMAX_MIN -9223372036854775808
     * }
     */
    public static long INTMAX_MIN() {
        return -9223372036854775808L;
    }
    /**
     * {@snippet :
     * #define INTMAX_MAX 9223372036854775807
     * }
     */
    public static long INTMAX_MAX() {
        return 9223372036854775807L;
    }
    /**
     * {@snippet :
     * #define UINTMAX_MAX -1
     * }
     */
    public static long UINTMAX_MAX() {
        return -1L;
    }
    /**
     * {@snippet :
     * #define PTRDIFF_MIN -9223372036854775808
     * }
     */
    public static long PTRDIFF_MIN() {
        return -9223372036854775808L;
    }
    /**
     * {@snippet :
     * #define PTRDIFF_MAX 9223372036854775807
     * }
     */
    public static long PTRDIFF_MAX() {
        return 9223372036854775807L;
    }
    /**
     * {@snippet :
     * #define SIZE_MAX -1
     * }
     */
    public static long SIZE_MAX() {
        return -1L;
    }
    /**
     * {@snippet :
     * #define SIG_ATOMIC_MIN -2147483648
     * }
     */
    public static int SIG_ATOMIC_MIN() {
        return (int)-2147483648L;
    }
    /**
     * {@snippet :
     * #define SIG_ATOMIC_MAX 2147483647
     * }
     */
    public static int SIG_ATOMIC_MAX() {
        return (int)2147483647L;
    }
    /**
     * {@snippet :
     * #define VK_NULL_HANDLE 0
     * }
     */
    public static MemorySegment VK_NULL_HANDLE() {
        return constants$1180.const$3;
    }
    /**
     * {@snippet :
     * #define VK_API_VERSION_1_0 4194304
     * }
     */
    public static int VK_API_VERSION_1_0() {
        return (int)4194304L;
    }
    /**
     * {@snippet :
     * #define VK_HEADER_VERSION_COMPLETE 4206842
     * }
     */
    public static int VK_HEADER_VERSION_COMPLETE() {
        return (int)4206842L;
    }
    /**
     * {@snippet :
     * #define VK_ATTACHMENT_UNUSED 4294967295
     * }
     */
    public static int VK_ATTACHMENT_UNUSED() {
        return (int)4294967295L;
    }
    /**
     * {@snippet :
     * #define VK_FALSE 0
     * }
     */
    public static int VK_FALSE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define VK_LOD_CLAMP_NONE 1000.0
     * }
     */
    public static float VK_LOD_CLAMP_NONE() {
        return 1000.0f;
    }
    /**
     * {@snippet :
     * #define VK_QUEUE_FAMILY_IGNORED 4294967295
     * }
     */
    public static int VK_QUEUE_FAMILY_IGNORED() {
        return (int)4294967295L;
    }
    /**
     * {@snippet :
     * #define VK_REMAINING_ARRAY_LAYERS 4294967295
     * }
     */
    public static int VK_REMAINING_ARRAY_LAYERS() {
        return (int)4294967295L;
    }
    /**
     * {@snippet :
     * #define VK_REMAINING_MIP_LEVELS 4294967295
     * }
     */
    public static int VK_REMAINING_MIP_LEVELS() {
        return (int)4294967295L;
    }
    /**
     * {@snippet :
     * #define VK_SUBPASS_EXTERNAL 4294967295
     * }
     */
    public static int VK_SUBPASS_EXTERNAL() {
        return (int)4294967295L;
    }
    /**
     * {@snippet :
     * #define VK_TRUE 1
     * }
     */
    public static int VK_TRUE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_WHOLE_SIZE -1
     * }
     */
    public static long VK_WHOLE_SIZE() {
        return -1L;
    }
    /**
     * {@snippet :
     * #define VK_MAX_MEMORY_TYPES 32
     * }
     */
    public static int VK_MAX_MEMORY_TYPES() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * #define VK_MAX_PHYSICAL_DEVICE_NAME_SIZE 256
     * }
     */
    public static int VK_MAX_PHYSICAL_DEVICE_NAME_SIZE() {
        return (int)256L;
    }
    /**
     * {@snippet :
     * #define VK_UUID_SIZE 16
     * }
     */
    public static int VK_UUID_SIZE() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define VK_MAX_EXTENSION_NAME_SIZE 256
     * }
     */
    public static int VK_MAX_EXTENSION_NAME_SIZE() {
        return (int)256L;
    }
    /**
     * {@snippet :
     * #define VK_MAX_DESCRIPTION_SIZE 256
     * }
     */
    public static int VK_MAX_DESCRIPTION_SIZE() {
        return (int)256L;
    }
    /**
     * {@snippet :
     * #define VK_MAX_MEMORY_HEAPS 16
     * }
     */
    public static int VK_MAX_MEMORY_HEAPS() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define VK_API_VERSION_1_1 4198400
     * }
     */
    public static int VK_API_VERSION_1_1() {
        return (int)4198400L;
    }
    /**
     * {@snippet :
     * #define VK_MAX_DEVICE_GROUP_SIZE 32
     * }
     */
    public static int VK_MAX_DEVICE_GROUP_SIZE() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * #define VK_LUID_SIZE 8
     * }
     */
    public static int VK_LUID_SIZE() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define VK_QUEUE_FAMILY_EXTERNAL 4294967294
     * }
     */
    public static int VK_QUEUE_FAMILY_EXTERNAL() {
        return (int)4294967294L;
    }
    /**
     * {@snippet :
     * #define VK_API_VERSION_1_2 4202496
     * }
     */
    public static int VK_API_VERSION_1_2() {
        return (int)4202496L;
    }
    /**
     * {@snippet :
     * #define VK_MAX_DRIVER_NAME_SIZE 256
     * }
     */
    public static int VK_MAX_DRIVER_NAME_SIZE() {
        return (int)256L;
    }
    /**
     * {@snippet :
     * #define VK_MAX_DRIVER_INFO_SIZE 256
     * }
     */
    public static int VK_MAX_DRIVER_INFO_SIZE() {
        return (int)256L;
    }
    /**
     * {@snippet :
     * #define VK_API_VERSION_1_3 4206592
     * }
     */
    public static int VK_API_VERSION_1_3() {
        return (int)4206592L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_SURFACE_EXTENSION_NAME "VK_KHR_surface"
     * }
     */
    public static MemorySegment VK_KHR_SURFACE_EXTENSION_NAME() {
        return constants$1180.const$4;
    }
    /**
     * {@snippet :
     * #define VK_KHR_SWAPCHAIN_EXTENSION_NAME "VK_KHR_swapchain"
     * }
     */
    public static MemorySegment VK_KHR_SWAPCHAIN_EXTENSION_NAME() {
        return constants$1180.const$5;
    }
    /**
     * {@snippet :
     * #define VK_KHR_DISPLAY_EXTENSION_NAME "VK_KHR_display"
     * }
     */
    public static MemorySegment VK_KHR_DISPLAY_EXTENSION_NAME() {
        return constants$1181.const$0;
    }
    /**
     * {@snippet :
     * #define VK_KHR_DISPLAY_SWAPCHAIN_EXTENSION_NAME "VK_KHR_display_swapchain"
     * }
     */
    public static MemorySegment VK_KHR_DISPLAY_SWAPCHAIN_EXTENSION_NAME() {
        return constants$1181.const$1;
    }
    /**
     * {@snippet :
     * #define VK_KHR_SAMPLER_MIRROR_CLAMP_TO_EDGE_EXTENSION_NAME "VK_KHR_sampler_mirror_clamp_to_edge"
     * }
     */
    public static MemorySegment VK_KHR_SAMPLER_MIRROR_CLAMP_TO_EDGE_EXTENSION_NAME() {
        return constants$1181.const$2;
    }
    /**
     * {@snippet :
     * #define VK_KHR_VIDEO_QUEUE_EXTENSION_NAME "VK_KHR_video_queue"
     * }
     */
    public static MemorySegment VK_KHR_VIDEO_QUEUE_EXTENSION_NAME() {
        return constants$1181.const$3;
    }
    /**
     * {@snippet :
     * #define VK_KHR_VIDEO_DECODE_QUEUE_EXTENSION_NAME "VK_KHR_video_decode_queue"
     * }
     */
    public static MemorySegment VK_KHR_VIDEO_DECODE_QUEUE_EXTENSION_NAME() {
        return constants$1181.const$4;
    }
    /**
     * {@snippet :
     * #define VK_STD_VULKAN_VIDEO_CODEC_H264_DECODE_EXTENSION_NAME "VK_STD_vulkan_video_codec_h264_decode"
     * }
     */
    public static MemorySegment VK_STD_VULKAN_VIDEO_CODEC_H264_DECODE_EXTENSION_NAME() {
        return constants$1181.const$5;
    }
    /**
     * {@snippet :
     * #define VK_KHR_VIDEO_DECODE_H264_EXTENSION_NAME "VK_KHR_video_decode_h264"
     * }
     */
    public static MemorySegment VK_KHR_VIDEO_DECODE_H264_EXTENSION_NAME() {
        return constants$1182.const$0;
    }
    /**
     * {@snippet :
     * #define VK_KHR_DYNAMIC_RENDERING_EXTENSION_NAME "VK_KHR_dynamic_rendering"
     * }
     */
    public static MemorySegment VK_KHR_DYNAMIC_RENDERING_EXTENSION_NAME() {
        return constants$1182.const$1;
    }
    /**
     * {@snippet :
     * #define VK_KHR_MULTIVIEW_EXTENSION_NAME "VK_KHR_multiview"
     * }
     */
    public static MemorySegment VK_KHR_MULTIVIEW_EXTENSION_NAME() {
        return constants$1182.const$2;
    }
    /**
     * {@snippet :
     * #define VK_KHR_GET_PHYSICAL_DEVICE_PROPERTIES_2_EXTENSION_NAME "VK_KHR_get_physical_device_properties2"
     * }
     */
    public static MemorySegment VK_KHR_GET_PHYSICAL_DEVICE_PROPERTIES_2_EXTENSION_NAME() {
        return constants$1182.const$3;
    }
    /**
     * {@snippet :
     * #define VK_KHR_DEVICE_GROUP_EXTENSION_NAME "VK_KHR_device_group"
     * }
     */
    public static MemorySegment VK_KHR_DEVICE_GROUP_EXTENSION_NAME() {
        return constants$1182.const$4;
    }
    /**
     * {@snippet :
     * #define VK_KHR_SHADER_DRAW_PARAMETERS_EXTENSION_NAME "VK_KHR_shader_draw_parameters"
     * }
     */
    public static MemorySegment VK_KHR_SHADER_DRAW_PARAMETERS_EXTENSION_NAME() {
        return constants$1182.const$5;
    }
    /**
     * {@snippet :
     * #define VK_KHR_MAINTENANCE_1_EXTENSION_NAME "VK_KHR_maintenance1"
     * }
     */
    public static MemorySegment VK_KHR_MAINTENANCE_1_EXTENSION_NAME() {
        return constants$1183.const$0;
    }
    /**
     * {@snippet :
     * #define VK_KHR_MAINTENANCE1_SPEC_VERSION 2
     * }
     */
    public static int VK_KHR_MAINTENANCE1_SPEC_VERSION() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_MAINTENANCE1_EXTENSION_NAME "VK_KHR_maintenance1"
     * }
     */
    public static MemorySegment VK_KHR_MAINTENANCE1_EXTENSION_NAME() {
        return constants$1183.const$0;
    }
    /**
     * {@snippet :
     * #define VK_KHR_DEVICE_GROUP_CREATION_EXTENSION_NAME "VK_KHR_device_group_creation"
     * }
     */
    public static MemorySegment VK_KHR_DEVICE_GROUP_CREATION_EXTENSION_NAME() {
        return constants$1183.const$1;
    }
    /**
     * {@snippet :
     * #define VK_MAX_DEVICE_GROUP_SIZE_KHR 32
     * }
     */
    public static int VK_MAX_DEVICE_GROUP_SIZE_KHR() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_EXTERNAL_MEMORY_CAPABILITIES_EXTENSION_NAME "VK_KHR_external_memory_capabilities"
     * }
     */
    public static MemorySegment VK_KHR_EXTERNAL_MEMORY_CAPABILITIES_EXTENSION_NAME() {
        return constants$1183.const$2;
    }
    /**
     * {@snippet :
     * #define VK_LUID_SIZE_KHR 8
     * }
     */
    public static int VK_LUID_SIZE_KHR() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_EXTERNAL_MEMORY_EXTENSION_NAME "VK_KHR_external_memory"
     * }
     */
    public static MemorySegment VK_KHR_EXTERNAL_MEMORY_EXTENSION_NAME() {
        return constants$1183.const$3;
    }
    /**
     * {@snippet :
     * #define VK_QUEUE_FAMILY_EXTERNAL_KHR 4294967294
     * }
     */
    public static int VK_QUEUE_FAMILY_EXTERNAL_KHR() {
        return (int)4294967294L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_EXTERNAL_MEMORY_FD_EXTENSION_NAME "VK_KHR_external_memory_fd"
     * }
     */
    public static MemorySegment VK_KHR_EXTERNAL_MEMORY_FD_EXTENSION_NAME() {
        return constants$1183.const$4;
    }
    /**
     * {@snippet :
     * #define VK_KHR_EXTERNAL_SEMAPHORE_CAPABILITIES_EXTENSION_NAME "VK_KHR_external_semaphore_capabilities"
     * }
     */
    public static MemorySegment VK_KHR_EXTERNAL_SEMAPHORE_CAPABILITIES_EXTENSION_NAME() {
        return constants$1183.const$5;
    }
    /**
     * {@snippet :
     * #define VK_KHR_EXTERNAL_SEMAPHORE_EXTENSION_NAME "VK_KHR_external_semaphore"
     * }
     */
    public static MemorySegment VK_KHR_EXTERNAL_SEMAPHORE_EXTENSION_NAME() {
        return constants$1184.const$0;
    }
    /**
     * {@snippet :
     * #define VK_KHR_EXTERNAL_SEMAPHORE_FD_EXTENSION_NAME "VK_KHR_external_semaphore_fd"
     * }
     */
    public static MemorySegment VK_KHR_EXTERNAL_SEMAPHORE_FD_EXTENSION_NAME() {
        return constants$1184.const$1;
    }
    /**
     * {@snippet :
     * #define VK_KHR_PUSH_DESCRIPTOR_EXTENSION_NAME "VK_KHR_push_descriptor"
     * }
     */
    public static MemorySegment VK_KHR_PUSH_DESCRIPTOR_EXTENSION_NAME() {
        return constants$1184.const$2;
    }
    /**
     * {@snippet :
     * #define VK_KHR_SHADER_FLOAT16_INT8_EXTENSION_NAME "VK_KHR_shader_float16_int8"
     * }
     */
    public static MemorySegment VK_KHR_SHADER_FLOAT16_INT8_EXTENSION_NAME() {
        return constants$1184.const$3;
    }
    /**
     * {@snippet :
     * #define VK_KHR_16BIT_STORAGE_EXTENSION_NAME "VK_KHR_16bit_storage"
     * }
     */
    public static MemorySegment VK_KHR_16BIT_STORAGE_EXTENSION_NAME() {
        return constants$1184.const$4;
    }
    /**
     * {@snippet :
     * #define VK_KHR_INCREMENTAL_PRESENT_EXTENSION_NAME "VK_KHR_incremental_present"
     * }
     */
    public static MemorySegment VK_KHR_INCREMENTAL_PRESENT_EXTENSION_NAME() {
        return constants$1184.const$5;
    }
    /**
     * {@snippet :
     * #define VK_KHR_DESCRIPTOR_UPDATE_TEMPLATE_EXTENSION_NAME "VK_KHR_descriptor_update_template"
     * }
     */
    public static MemorySegment VK_KHR_DESCRIPTOR_UPDATE_TEMPLATE_EXTENSION_NAME() {
        return constants$1185.const$0;
    }
    /**
     * {@snippet :
     * #define VK_KHR_IMAGELESS_FRAMEBUFFER_EXTENSION_NAME "VK_KHR_imageless_framebuffer"
     * }
     */
    public static MemorySegment VK_KHR_IMAGELESS_FRAMEBUFFER_EXTENSION_NAME() {
        return constants$1185.const$1;
    }
    /**
     * {@snippet :
     * #define VK_KHR_CREATE_RENDERPASS_2_EXTENSION_NAME "VK_KHR_create_renderpass2"
     * }
     */
    public static MemorySegment VK_KHR_CREATE_RENDERPASS_2_EXTENSION_NAME() {
        return constants$1185.const$2;
    }
    /**
     * {@snippet :
     * #define VK_KHR_SHARED_PRESENTABLE_IMAGE_EXTENSION_NAME "VK_KHR_shared_presentable_image"
     * }
     */
    public static MemorySegment VK_KHR_SHARED_PRESENTABLE_IMAGE_EXTENSION_NAME() {
        return constants$1185.const$3;
    }
    /**
     * {@snippet :
     * #define VK_KHR_EXTERNAL_FENCE_CAPABILITIES_EXTENSION_NAME "VK_KHR_external_fence_capabilities"
     * }
     */
    public static MemorySegment VK_KHR_EXTERNAL_FENCE_CAPABILITIES_EXTENSION_NAME() {
        return constants$1185.const$4;
    }
    /**
     * {@snippet :
     * #define VK_KHR_EXTERNAL_FENCE_EXTENSION_NAME "VK_KHR_external_fence"
     * }
     */
    public static MemorySegment VK_KHR_EXTERNAL_FENCE_EXTENSION_NAME() {
        return constants$1185.const$5;
    }
    /**
     * {@snippet :
     * #define VK_KHR_EXTERNAL_FENCE_FD_EXTENSION_NAME "VK_KHR_external_fence_fd"
     * }
     */
    public static MemorySegment VK_KHR_EXTERNAL_FENCE_FD_EXTENSION_NAME() {
        return constants$1186.const$0;
    }
    /**
     * {@snippet :
     * #define VK_KHR_PERFORMANCE_QUERY_EXTENSION_NAME "VK_KHR_performance_query"
     * }
     */
    public static MemorySegment VK_KHR_PERFORMANCE_QUERY_EXTENSION_NAME() {
        return constants$1186.const$1;
    }
    /**
     * {@snippet :
     * #define VK_KHR_MAINTENANCE_2_EXTENSION_NAME "VK_KHR_maintenance2"
     * }
     */
    public static MemorySegment VK_KHR_MAINTENANCE_2_EXTENSION_NAME() {
        return constants$1186.const$2;
    }
    /**
     * {@snippet :
     * #define VK_KHR_MAINTENANCE2_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_MAINTENANCE2_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_MAINTENANCE2_EXTENSION_NAME "VK_KHR_maintenance2"
     * }
     */
    public static MemorySegment VK_KHR_MAINTENANCE2_EXTENSION_NAME() {
        return constants$1186.const$2;
    }
    /**
     * {@snippet :
     * #define VK_KHR_GET_SURFACE_CAPABILITIES_2_EXTENSION_NAME "VK_KHR_get_surface_capabilities2"
     * }
     */
    public static MemorySegment VK_KHR_GET_SURFACE_CAPABILITIES_2_EXTENSION_NAME() {
        return constants$1186.const$3;
    }
    /**
     * {@snippet :
     * #define VK_KHR_VARIABLE_POINTERS_EXTENSION_NAME "VK_KHR_variable_pointers"
     * }
     */
    public static MemorySegment VK_KHR_VARIABLE_POINTERS_EXTENSION_NAME() {
        return constants$1186.const$4;
    }
    /**
     * {@snippet :
     * #define VK_KHR_GET_DISPLAY_PROPERTIES_2_EXTENSION_NAME "VK_KHR_get_display_properties2"
     * }
     */
    public static MemorySegment VK_KHR_GET_DISPLAY_PROPERTIES_2_EXTENSION_NAME() {
        return constants$1186.const$5;
    }
    /**
     * {@snippet :
     * #define VK_KHR_DEDICATED_ALLOCATION_EXTENSION_NAME "VK_KHR_dedicated_allocation"
     * }
     */
    public static MemorySegment VK_KHR_DEDICATED_ALLOCATION_EXTENSION_NAME() {
        return constants$1187.const$0;
    }
    /**
     * {@snippet :
     * #define VK_KHR_STORAGE_BUFFER_STORAGE_CLASS_EXTENSION_NAME "VK_KHR_storage_buffer_storage_class"
     * }
     */
    public static MemorySegment VK_KHR_STORAGE_BUFFER_STORAGE_CLASS_EXTENSION_NAME() {
        return constants$1187.const$1;
    }
    /**
     * {@snippet :
     * #define VK_KHR_RELAXED_BLOCK_LAYOUT_EXTENSION_NAME "VK_KHR_relaxed_block_layout"
     * }
     */
    public static MemorySegment VK_KHR_RELAXED_BLOCK_LAYOUT_EXTENSION_NAME() {
        return constants$1187.const$2;
    }
    /**
     * {@snippet :
     * #define VK_KHR_GET_MEMORY_REQUIREMENTS_2_EXTENSION_NAME "VK_KHR_get_memory_requirements2"
     * }
     */
    public static MemorySegment VK_KHR_GET_MEMORY_REQUIREMENTS_2_EXTENSION_NAME() {
        return constants$1187.const$3;
    }
    /**
     * {@snippet :
     * #define VK_KHR_IMAGE_FORMAT_LIST_EXTENSION_NAME "VK_KHR_image_format_list"
     * }
     */
    public static MemorySegment VK_KHR_IMAGE_FORMAT_LIST_EXTENSION_NAME() {
        return constants$1187.const$4;
    }
    /**
     * {@snippet :
     * #define VK_KHR_SAMPLER_YCBCR_CONVERSION_EXTENSION_NAME "VK_KHR_sampler_ycbcr_conversion"
     * }
     */
    public static MemorySegment VK_KHR_SAMPLER_YCBCR_CONVERSION_EXTENSION_NAME() {
        return constants$1187.const$5;
    }
    /**
     * {@snippet :
     * #define VK_KHR_BIND_MEMORY_2_EXTENSION_NAME "VK_KHR_bind_memory2"
     * }
     */
    public static MemorySegment VK_KHR_BIND_MEMORY_2_EXTENSION_NAME() {
        return constants$1188.const$0;
    }
    /**
     * {@snippet :
     * #define VK_KHR_MAINTENANCE_3_EXTENSION_NAME "VK_KHR_maintenance3"
     * }
     */
    public static MemorySegment VK_KHR_MAINTENANCE_3_EXTENSION_NAME() {
        return constants$1188.const$1;
    }
    /**
     * {@snippet :
     * #define VK_KHR_MAINTENANCE3_SPEC_VERSION 1
     * }
     */
    public static int VK_KHR_MAINTENANCE3_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_MAINTENANCE3_EXTENSION_NAME "VK_KHR_maintenance3"
     * }
     */
    public static MemorySegment VK_KHR_MAINTENANCE3_EXTENSION_NAME() {
        return constants$1188.const$1;
    }
    /**
     * {@snippet :
     * #define VK_KHR_DRAW_INDIRECT_COUNT_EXTENSION_NAME "VK_KHR_draw_indirect_count"
     * }
     */
    public static MemorySegment VK_KHR_DRAW_INDIRECT_COUNT_EXTENSION_NAME() {
        return constants$1188.const$2;
    }
    /**
     * {@snippet :
     * #define VK_KHR_SHADER_SUBGROUP_EXTENDED_TYPES_EXTENSION_NAME "VK_KHR_shader_subgroup_extended_types"
     * }
     */
    public static MemorySegment VK_KHR_SHADER_SUBGROUP_EXTENDED_TYPES_EXTENSION_NAME() {
        return constants$1188.const$3;
    }
    /**
     * {@snippet :
     * #define VK_KHR_8BIT_STORAGE_EXTENSION_NAME "VK_KHR_8bit_storage"
     * }
     */
    public static MemorySegment VK_KHR_8BIT_STORAGE_EXTENSION_NAME() {
        return constants$1188.const$4;
    }
    /**
     * {@snippet :
     * #define VK_KHR_SHADER_ATOMIC_INT64_EXTENSION_NAME "VK_KHR_shader_atomic_int64"
     * }
     */
    public static MemorySegment VK_KHR_SHADER_ATOMIC_INT64_EXTENSION_NAME() {
        return constants$1188.const$5;
    }
    /**
     * {@snippet :
     * #define VK_KHR_SHADER_CLOCK_EXTENSION_NAME "VK_KHR_shader_clock"
     * }
     */
    public static MemorySegment VK_KHR_SHADER_CLOCK_EXTENSION_NAME() {
        return constants$1189.const$0;
    }
    /**
     * {@snippet :
     * #define VK_STD_VULKAN_VIDEO_CODEC_H265_DECODE_EXTENSION_NAME "VK_STD_vulkan_video_codec_h265_decode"
     * }
     */
    public static MemorySegment VK_STD_VULKAN_VIDEO_CODEC_H265_DECODE_EXTENSION_NAME() {
        return constants$1189.const$1;
    }
    /**
     * {@snippet :
     * #define VK_KHR_VIDEO_DECODE_H265_EXTENSION_NAME "VK_KHR_video_decode_h265"
     * }
     */
    public static MemorySegment VK_KHR_VIDEO_DECODE_H265_EXTENSION_NAME() {
        return constants$1189.const$2;
    }
    /**
     * {@snippet :
     * #define VK_MAX_GLOBAL_PRIORITY_SIZE_KHR 16
     * }
     */
    public static int VK_MAX_GLOBAL_PRIORITY_SIZE_KHR() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_GLOBAL_PRIORITY_EXTENSION_NAME "VK_KHR_global_priority"
     * }
     */
    public static MemorySegment VK_KHR_GLOBAL_PRIORITY_EXTENSION_NAME() {
        return constants$1189.const$3;
    }
    /**
     * {@snippet :
     * #define VK_KHR_DRIVER_PROPERTIES_EXTENSION_NAME "VK_KHR_driver_properties"
     * }
     */
    public static MemorySegment VK_KHR_DRIVER_PROPERTIES_EXTENSION_NAME() {
        return constants$1189.const$4;
    }
    /**
     * {@snippet :
     * #define VK_MAX_DRIVER_NAME_SIZE_KHR 256
     * }
     */
    public static int VK_MAX_DRIVER_NAME_SIZE_KHR() {
        return (int)256L;
    }
    /**
     * {@snippet :
     * #define VK_MAX_DRIVER_INFO_SIZE_KHR 256
     * }
     */
    public static int VK_MAX_DRIVER_INFO_SIZE_KHR() {
        return (int)256L;
    }
    /**
     * {@snippet :
     * #define VK_KHR_SHADER_FLOAT_CONTROLS_EXTENSION_NAME "VK_KHR_shader_float_controls"
     * }
     */
    public static MemorySegment VK_KHR_SHADER_FLOAT_CONTROLS_EXTENSION_NAME() {
        return constants$1189.const$5;
    }
    /**
     * {@snippet :
     * #define VK_KHR_DEPTH_STENCIL_RESOLVE_EXTENSION_NAME "VK_KHR_depth_stencil_resolve"
     * }
     */
    public static MemorySegment VK_KHR_DEPTH_STENCIL_RESOLVE_EXTENSION_NAME() {
        return constants$1190.const$0;
    }
    /**
     * {@snippet :
     * #define VK_KHR_SWAPCHAIN_MUTABLE_FORMAT_EXTENSION_NAME "VK_KHR_swapchain_mutable_format"
     * }
     */
    public static MemorySegment VK_KHR_SWAPCHAIN_MUTABLE_FORMAT_EXTENSION_NAME() {
        return constants$1190.const$1;
    }
    /**
     * {@snippet :
     * #define VK_KHR_TIMELINE_SEMAPHORE_EXTENSION_NAME "VK_KHR_timeline_semaphore"
     * }
     */
    public static MemorySegment VK_KHR_TIMELINE_SEMAPHORE_EXTENSION_NAME() {
        return constants$1190.const$2;
    }
    /**
     * {@snippet :
     * #define VK_KHR_VULKAN_MEMORY_MODEL_EXTENSION_NAME "VK_KHR_vulkan_memory_model"
     * }
     */
    public static MemorySegment VK_KHR_VULKAN_MEMORY_MODEL_EXTENSION_NAME() {
        return constants$1190.const$3;
    }
    /**
     * {@snippet :
     * #define VK_KHR_SHADER_TERMINATE_INVOCATION_EXTENSION_NAME "VK_KHR_shader_terminate_invocation"
     * }
     */
    public static MemorySegment VK_KHR_SHADER_TERMINATE_INVOCATION_EXTENSION_NAME() {
        return constants$1190.const$4;
    }
    /**
     * {@snippet :
     * #define VK_KHR_FRAGMENT_SHADING_RATE_EXTENSION_NAME "VK_KHR_fragment_shading_rate"
     * }
     */
    public static MemorySegment VK_KHR_FRAGMENT_SHADING_RATE_EXTENSION_NAME() {
        return constants$1190.const$5;
    }
    /**
     * {@snippet :
     * #define VK_KHR_SPIRV_1_4_EXTENSION_NAME "VK_KHR_spirv_1_4"
     * }
     */
    public static MemorySegment VK_KHR_SPIRV_1_4_EXTENSION_NAME() {
        return constants$1191.const$0;
    }
    /**
     * {@snippet :
     * #define VK_KHR_SURFACE_PROTECTED_CAPABILITIES_EXTENSION_NAME "VK_KHR_surface_protected_capabilities"
     * }
     */
    public static MemorySegment VK_KHR_SURFACE_PROTECTED_CAPABILITIES_EXTENSION_NAME() {
        return constants$1191.const$1;
    }
    /**
     * {@snippet :
     * #define VK_KHR_SEPARATE_DEPTH_STENCIL_LAYOUTS_EXTENSION_NAME "VK_KHR_separate_depth_stencil_layouts"
     * }
     */
    public static MemorySegment VK_KHR_SEPARATE_DEPTH_STENCIL_LAYOUTS_EXTENSION_NAME() {
        return constants$1191.const$2;
    }
    /**
     * {@snippet :
     * #define VK_KHR_PRESENT_WAIT_EXTENSION_NAME "VK_KHR_present_wait"
     * }
     */
    public static MemorySegment VK_KHR_PRESENT_WAIT_EXTENSION_NAME() {
        return constants$1191.const$3;
    }
    /**
     * {@snippet :
     * #define VK_KHR_UNIFORM_BUFFER_STANDARD_LAYOUT_EXTENSION_NAME "VK_KHR_uniform_buffer_standard_layout"
     * }
     */
    public static MemorySegment VK_KHR_UNIFORM_BUFFER_STANDARD_LAYOUT_EXTENSION_NAME() {
        return constants$1191.const$4;
    }
    /**
     * {@snippet :
     * #define VK_KHR_BUFFER_DEVICE_ADDRESS_EXTENSION_NAME "VK_KHR_buffer_device_address"
     * }
     */
    public static MemorySegment VK_KHR_BUFFER_DEVICE_ADDRESS_EXTENSION_NAME() {
        return constants$1191.const$5;
    }
    /**
     * {@snippet :
     * #define VK_KHR_DEFERRED_HOST_OPERATIONS_EXTENSION_NAME "VK_KHR_deferred_host_operations"
     * }
     */
    public static MemorySegment VK_KHR_DEFERRED_HOST_OPERATIONS_EXTENSION_NAME() {
        return constants$1192.const$0;
    }
    /**
     * {@snippet :
     * #define VK_KHR_PIPELINE_EXECUTABLE_PROPERTIES_EXTENSION_NAME "VK_KHR_pipeline_executable_properties"
     * }
     */
    public static MemorySegment VK_KHR_PIPELINE_EXECUTABLE_PROPERTIES_EXTENSION_NAME() {
        return constants$1192.const$1;
    }
    /**
     * {@snippet :
     * #define VK_KHR_MAP_MEMORY_2_EXTENSION_NAME "VK_KHR_map_memory2"
     * }
     */
    public static MemorySegment VK_KHR_MAP_MEMORY_2_EXTENSION_NAME() {
        return constants$1192.const$2;
    }
    /**
     * {@snippet :
     * #define VK_KHR_SHADER_INTEGER_DOT_PRODUCT_EXTENSION_NAME "VK_KHR_shader_integer_dot_product"
     * }
     */
    public static MemorySegment VK_KHR_SHADER_INTEGER_DOT_PRODUCT_EXTENSION_NAME() {
        return constants$1192.const$3;
    }
    /**
     * {@snippet :
     * #define VK_KHR_PIPELINE_LIBRARY_EXTENSION_NAME "VK_KHR_pipeline_library"
     * }
     */
    public static MemorySegment VK_KHR_PIPELINE_LIBRARY_EXTENSION_NAME() {
        return constants$1192.const$4;
    }
    /**
     * {@snippet :
     * #define VK_KHR_SHADER_NON_SEMANTIC_INFO_EXTENSION_NAME "VK_KHR_shader_non_semantic_info"
     * }
     */
    public static MemorySegment VK_KHR_SHADER_NON_SEMANTIC_INFO_EXTENSION_NAME() {
        return constants$1192.const$5;
    }
    /**
     * {@snippet :
     * #define VK_KHR_PRESENT_ID_EXTENSION_NAME "VK_KHR_present_id"
     * }
     */
    public static MemorySegment VK_KHR_PRESENT_ID_EXTENSION_NAME() {
        return constants$1193.const$0;
    }
    /**
     * {@snippet :
     * #define VK_KHR_SYNCHRONIZATION_2_EXTENSION_NAME "VK_KHR_synchronization2"
     * }
     */
    public static MemorySegment VK_KHR_SYNCHRONIZATION_2_EXTENSION_NAME() {
        return constants$1193.const$1;
    }
    /**
     * {@snippet :
     * #define VK_KHR_FRAGMENT_SHADER_BARYCENTRIC_EXTENSION_NAME "VK_KHR_fragment_shader_barycentric"
     * }
     */
    public static MemorySegment VK_KHR_FRAGMENT_SHADER_BARYCENTRIC_EXTENSION_NAME() {
        return constants$1193.const$2;
    }
    /**
     * {@snippet :
     * #define VK_KHR_SHADER_SUBGROUP_UNIFORM_CONTROL_FLOW_EXTENSION_NAME "VK_KHR_shader_subgroup_uniform_control_flow"
     * }
     */
    public static MemorySegment VK_KHR_SHADER_SUBGROUP_UNIFORM_CONTROL_FLOW_EXTENSION_NAME() {
        return constants$1193.const$3;
    }
    /**
     * {@snippet :
     * #define VK_KHR_ZERO_INITIALIZE_WORKGROUP_MEMORY_EXTENSION_NAME "VK_KHR_zero_initialize_workgroup_memory"
     * }
     */
    public static MemorySegment VK_KHR_ZERO_INITIALIZE_WORKGROUP_MEMORY_EXTENSION_NAME() {
        return constants$1193.const$4;
    }
    /**
     * {@snippet :
     * #define VK_KHR_WORKGROUP_MEMORY_EXPLICIT_LAYOUT_EXTENSION_NAME "VK_KHR_workgroup_memory_explicit_layout"
     * }
     */
    public static MemorySegment VK_KHR_WORKGROUP_MEMORY_EXPLICIT_LAYOUT_EXTENSION_NAME() {
        return constants$1193.const$5;
    }
    /**
     * {@snippet :
     * #define VK_KHR_COPY_COMMANDS_2_EXTENSION_NAME "VK_KHR_copy_commands2"
     * }
     */
    public static MemorySegment VK_KHR_COPY_COMMANDS_2_EXTENSION_NAME() {
        return constants$1194.const$0;
    }
    /**
     * {@snippet :
     * #define VK_KHR_FORMAT_FEATURE_FLAGS_2_EXTENSION_NAME "VK_KHR_format_feature_flags2"
     * }
     */
    public static MemorySegment VK_KHR_FORMAT_FEATURE_FLAGS_2_EXTENSION_NAME() {
        return constants$1194.const$1;
    }
    /**
     * {@snippet :
     * #define VK_KHR_RAY_TRACING_MAINTENANCE_1_EXTENSION_NAME "VK_KHR_ray_tracing_maintenance1"
     * }
     */
    public static MemorySegment VK_KHR_RAY_TRACING_MAINTENANCE_1_EXTENSION_NAME() {
        return constants$1194.const$2;
    }
    /**
     * {@snippet :
     * #define VK_KHR_PORTABILITY_ENUMERATION_EXTENSION_NAME "VK_KHR_portability_enumeration"
     * }
     */
    public static MemorySegment VK_KHR_PORTABILITY_ENUMERATION_EXTENSION_NAME() {
        return constants$1194.const$3;
    }
    /**
     * {@snippet :
     * #define VK_KHR_MAINTENANCE_4_EXTENSION_NAME "VK_KHR_maintenance4"
     * }
     */
    public static MemorySegment VK_KHR_MAINTENANCE_4_EXTENSION_NAME() {
        return constants$1194.const$4;
    }
    /**
     * {@snippet :
     * #define VK_KHR_RAY_TRACING_POSITION_FETCH_EXTENSION_NAME "VK_KHR_ray_tracing_position_fetch"
     * }
     */
    public static MemorySegment VK_KHR_RAY_TRACING_POSITION_FETCH_EXTENSION_NAME() {
        return constants$1194.const$5;
    }
    /**
     * {@snippet :
     * #define VK_EXT_DEBUG_REPORT_EXTENSION_NAME "VK_EXT_debug_report"
     * }
     */
    public static MemorySegment VK_EXT_DEBUG_REPORT_EXTENSION_NAME() {
        return constants$1195.const$0;
    }
    /**
     * {@snippet :
     * #define VK_NV_GLSL_SHADER_EXTENSION_NAME "VK_NV_glsl_shader"
     * }
     */
    public static MemorySegment VK_NV_GLSL_SHADER_EXTENSION_NAME() {
        return constants$1195.const$1;
    }
    /**
     * {@snippet :
     * #define VK_EXT_DEPTH_RANGE_UNRESTRICTED_EXTENSION_NAME "VK_EXT_depth_range_unrestricted"
     * }
     */
    public static MemorySegment VK_EXT_DEPTH_RANGE_UNRESTRICTED_EXTENSION_NAME() {
        return constants$1195.const$2;
    }
    /**
     * {@snippet :
     * #define VK_IMG_FILTER_CUBIC_EXTENSION_NAME "VK_IMG_filter_cubic"
     * }
     */
    public static MemorySegment VK_IMG_FILTER_CUBIC_EXTENSION_NAME() {
        return constants$1195.const$3;
    }
    /**
     * {@snippet :
     * #define VK_AMD_RASTERIZATION_ORDER_EXTENSION_NAME "VK_AMD_rasterization_order"
     * }
     */
    public static MemorySegment VK_AMD_RASTERIZATION_ORDER_EXTENSION_NAME() {
        return constants$1195.const$4;
    }
    /**
     * {@snippet :
     * #define VK_AMD_SHADER_TRINARY_MINMAX_EXTENSION_NAME "VK_AMD_shader_trinary_minmax"
     * }
     */
    public static MemorySegment VK_AMD_SHADER_TRINARY_MINMAX_EXTENSION_NAME() {
        return constants$1195.const$5;
    }
    /**
     * {@snippet :
     * #define VK_AMD_SHADER_EXPLICIT_VERTEX_PARAMETER_EXTENSION_NAME "VK_AMD_shader_explicit_vertex_parameter"
     * }
     */
    public static MemorySegment VK_AMD_SHADER_EXPLICIT_VERTEX_PARAMETER_EXTENSION_NAME() {
        return constants$1196.const$0;
    }
    /**
     * {@snippet :
     * #define VK_EXT_DEBUG_MARKER_EXTENSION_NAME "VK_EXT_debug_marker"
     * }
     */
    public static MemorySegment VK_EXT_DEBUG_MARKER_EXTENSION_NAME() {
        return constants$1196.const$1;
    }
    /**
     * {@snippet :
     * #define VK_AMD_GCN_SHADER_EXTENSION_NAME "VK_AMD_gcn_shader"
     * }
     */
    public static MemorySegment VK_AMD_GCN_SHADER_EXTENSION_NAME() {
        return constants$1196.const$2;
    }
    /**
     * {@snippet :
     * #define VK_NV_DEDICATED_ALLOCATION_EXTENSION_NAME "VK_NV_dedicated_allocation"
     * }
     */
    public static MemorySegment VK_NV_DEDICATED_ALLOCATION_EXTENSION_NAME() {
        return constants$1196.const$3;
    }
    /**
     * {@snippet :
     * #define VK_EXT_TRANSFORM_FEEDBACK_EXTENSION_NAME "VK_EXT_transform_feedback"
     * }
     */
    public static MemorySegment VK_EXT_TRANSFORM_FEEDBACK_EXTENSION_NAME() {
        return constants$1196.const$4;
    }
    /**
     * {@snippet :
     * #define VK_NVX_BINARY_IMPORT_EXTENSION_NAME "VK_NVX_binary_import"
     * }
     */
    public static MemorySegment VK_NVX_BINARY_IMPORT_EXTENSION_NAME() {
        return constants$1196.const$5;
    }
    /**
     * {@snippet :
     * #define VK_NVX_IMAGE_VIEW_HANDLE_EXTENSION_NAME "VK_NVX_image_view_handle"
     * }
     */
    public static MemorySegment VK_NVX_IMAGE_VIEW_HANDLE_EXTENSION_NAME() {
        return constants$1197.const$0;
    }
    /**
     * {@snippet :
     * #define VK_AMD_DRAW_INDIRECT_COUNT_EXTENSION_NAME "VK_AMD_draw_indirect_count"
     * }
     */
    public static MemorySegment VK_AMD_DRAW_INDIRECT_COUNT_EXTENSION_NAME() {
        return constants$1197.const$1;
    }
    /**
     * {@snippet :
     * #define VK_AMD_NEGATIVE_VIEWPORT_HEIGHT_EXTENSION_NAME "VK_AMD_negative_viewport_height"
     * }
     */
    public static MemorySegment VK_AMD_NEGATIVE_VIEWPORT_HEIGHT_EXTENSION_NAME() {
        return constants$1197.const$2;
    }
    /**
     * {@snippet :
     * #define VK_AMD_GPU_SHADER_HALF_FLOAT_EXTENSION_NAME "VK_AMD_gpu_shader_half_float"
     * }
     */
    public static MemorySegment VK_AMD_GPU_SHADER_HALF_FLOAT_EXTENSION_NAME() {
        return constants$1197.const$3;
    }
    /**
     * {@snippet :
     * #define VK_AMD_SHADER_BALLOT_EXTENSION_NAME "VK_AMD_shader_ballot"
     * }
     */
    public static MemorySegment VK_AMD_SHADER_BALLOT_EXTENSION_NAME() {
        return constants$1197.const$4;
    }
    /**
     * {@snippet :
     * #define VK_AMD_TEXTURE_GATHER_BIAS_LOD_EXTENSION_NAME "VK_AMD_texture_gather_bias_lod"
     * }
     */
    public static MemorySegment VK_AMD_TEXTURE_GATHER_BIAS_LOD_EXTENSION_NAME() {
        return constants$1197.const$5;
    }
    /**
     * {@snippet :
     * #define VK_AMD_SHADER_INFO_EXTENSION_NAME "VK_AMD_shader_info"
     * }
     */
    public static MemorySegment VK_AMD_SHADER_INFO_EXTENSION_NAME() {
        return constants$1198.const$0;
    }
    /**
     * {@snippet :
     * #define VK_AMD_SHADER_IMAGE_LOAD_STORE_LOD_EXTENSION_NAME "VK_AMD_shader_image_load_store_lod"
     * }
     */
    public static MemorySegment VK_AMD_SHADER_IMAGE_LOAD_STORE_LOD_EXTENSION_NAME() {
        return constants$1198.const$1;
    }
    /**
     * {@snippet :
     * #define VK_NV_CORNER_SAMPLED_IMAGE_EXTENSION_NAME "VK_NV_corner_sampled_image"
     * }
     */
    public static MemorySegment VK_NV_CORNER_SAMPLED_IMAGE_EXTENSION_NAME() {
        return constants$1198.const$2;
    }
    /**
     * {@snippet :
     * #define VK_IMG_FORMAT_PVRTC_EXTENSION_NAME "VK_IMG_format_pvrtc"
     * }
     */
    public static MemorySegment VK_IMG_FORMAT_PVRTC_EXTENSION_NAME() {
        return constants$1198.const$3;
    }
    /**
     * {@snippet :
     * #define VK_NV_EXTERNAL_MEMORY_CAPABILITIES_EXTENSION_NAME "VK_NV_external_memory_capabilities"
     * }
     */
    public static MemorySegment VK_NV_EXTERNAL_MEMORY_CAPABILITIES_EXTENSION_NAME() {
        return constants$1198.const$4;
    }
    /**
     * {@snippet :
     * #define VK_NV_EXTERNAL_MEMORY_EXTENSION_NAME "VK_NV_external_memory"
     * }
     */
    public static MemorySegment VK_NV_EXTERNAL_MEMORY_EXTENSION_NAME() {
        return constants$1198.const$5;
    }
    /**
     * {@snippet :
     * #define VK_EXT_VALIDATION_FLAGS_EXTENSION_NAME "VK_EXT_validation_flags"
     * }
     */
    public static MemorySegment VK_EXT_VALIDATION_FLAGS_EXTENSION_NAME() {
        return constants$1199.const$0;
    }
    /**
     * {@snippet :
     * #define VK_EXT_SHADER_SUBGROUP_BALLOT_EXTENSION_NAME "VK_EXT_shader_subgroup_ballot"
     * }
     */
    public static MemorySegment VK_EXT_SHADER_SUBGROUP_BALLOT_EXTENSION_NAME() {
        return constants$1199.const$1;
    }
    /**
     * {@snippet :
     * #define VK_EXT_SHADER_SUBGROUP_VOTE_EXTENSION_NAME "VK_EXT_shader_subgroup_vote"
     * }
     */
    public static MemorySegment VK_EXT_SHADER_SUBGROUP_VOTE_EXTENSION_NAME() {
        return constants$1199.const$2;
    }
    /**
     * {@snippet :
     * #define VK_EXT_TEXTURE_COMPRESSION_ASTC_HDR_EXTENSION_NAME "VK_EXT_texture_compression_astc_hdr"
     * }
     */
    public static MemorySegment VK_EXT_TEXTURE_COMPRESSION_ASTC_HDR_EXTENSION_NAME() {
        return constants$1199.const$3;
    }
    /**
     * {@snippet :
     * #define VK_EXT_ASTC_DECODE_MODE_EXTENSION_NAME "VK_EXT_astc_decode_mode"
     * }
     */
    public static MemorySegment VK_EXT_ASTC_DECODE_MODE_EXTENSION_NAME() {
        return constants$1199.const$4;
    }
    /**
     * {@snippet :
     * #define VK_EXT_PIPELINE_ROBUSTNESS_EXTENSION_NAME "VK_EXT_pipeline_robustness"
     * }
     */
    public static MemorySegment VK_EXT_PIPELINE_ROBUSTNESS_EXTENSION_NAME() {
        return constants$1199.const$5;
    }
    /**
     * {@snippet :
     * #define VK_EXT_CONDITIONAL_RENDERING_EXTENSION_NAME "VK_EXT_conditional_rendering"
     * }
     */
    public static MemorySegment VK_EXT_CONDITIONAL_RENDERING_EXTENSION_NAME() {
        return constants$1200.const$0;
    }
    /**
     * {@snippet :
     * #define VK_NV_CLIP_SPACE_W_SCALING_EXTENSION_NAME "VK_NV_clip_space_w_scaling"
     * }
     */
    public static MemorySegment VK_NV_CLIP_SPACE_W_SCALING_EXTENSION_NAME() {
        return constants$1200.const$1;
    }
    /**
     * {@snippet :
     * #define VK_EXT_DIRECT_MODE_DISPLAY_EXTENSION_NAME "VK_EXT_direct_mode_display"
     * }
     */
    public static MemorySegment VK_EXT_DIRECT_MODE_DISPLAY_EXTENSION_NAME() {
        return constants$1200.const$2;
    }
    /**
     * {@snippet :
     * #define VK_EXT_DISPLAY_SURFACE_COUNTER_EXTENSION_NAME "VK_EXT_display_surface_counter"
     * }
     */
    public static MemorySegment VK_EXT_DISPLAY_SURFACE_COUNTER_EXTENSION_NAME() {
        return constants$1200.const$3;
    }
    /**
     * {@snippet :
     * #define VK_EXT_DISPLAY_CONTROL_EXTENSION_NAME "VK_EXT_display_control"
     * }
     */
    public static MemorySegment VK_EXT_DISPLAY_CONTROL_EXTENSION_NAME() {
        return constants$1200.const$4;
    }
    /**
     * {@snippet :
     * #define VK_GOOGLE_DISPLAY_TIMING_EXTENSION_NAME "VK_GOOGLE_display_timing"
     * }
     */
    public static MemorySegment VK_GOOGLE_DISPLAY_TIMING_EXTENSION_NAME() {
        return constants$1200.const$5;
    }
    /**
     * {@snippet :
     * #define VK_NV_SAMPLE_MASK_OVERRIDE_COVERAGE_EXTENSION_NAME "VK_NV_sample_mask_override_coverage"
     * }
     */
    public static MemorySegment VK_NV_SAMPLE_MASK_OVERRIDE_COVERAGE_EXTENSION_NAME() {
        return constants$1201.const$0;
    }
    /**
     * {@snippet :
     * #define VK_NV_GEOMETRY_SHADER_PASSTHROUGH_EXTENSION_NAME "VK_NV_geometry_shader_passthrough"
     * }
     */
    public static MemorySegment VK_NV_GEOMETRY_SHADER_PASSTHROUGH_EXTENSION_NAME() {
        return constants$1201.const$1;
    }
    /**
     * {@snippet :
     * #define VK_NV_VIEWPORT_ARRAY_2_EXTENSION_NAME "VK_NV_viewport_array2"
     * }
     */
    public static MemorySegment VK_NV_VIEWPORT_ARRAY_2_EXTENSION_NAME() {
        return constants$1201.const$2;
    }
    /**
     * {@snippet :
     * #define VK_NV_VIEWPORT_ARRAY2_SPEC_VERSION 1
     * }
     */
    public static int VK_NV_VIEWPORT_ARRAY2_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_NV_VIEWPORT_ARRAY2_EXTENSION_NAME "VK_NV_viewport_array2"
     * }
     */
    public static MemorySegment VK_NV_VIEWPORT_ARRAY2_EXTENSION_NAME() {
        return constants$1201.const$2;
    }
    /**
     * {@snippet :
     * #define VK_NVX_MULTIVIEW_PER_VIEW_ATTRIBUTES_EXTENSION_NAME "VK_NVX_multiview_per_view_attributes"
     * }
     */
    public static MemorySegment VK_NVX_MULTIVIEW_PER_VIEW_ATTRIBUTES_EXTENSION_NAME() {
        return constants$1201.const$3;
    }
    /**
     * {@snippet :
     * #define VK_NV_VIEWPORT_SWIZZLE_EXTENSION_NAME "VK_NV_viewport_swizzle"
     * }
     */
    public static MemorySegment VK_NV_VIEWPORT_SWIZZLE_EXTENSION_NAME() {
        return constants$1201.const$4;
    }
    /**
     * {@snippet :
     * #define VK_EXT_DISCARD_RECTANGLES_EXTENSION_NAME "VK_EXT_discard_rectangles"
     * }
     */
    public static MemorySegment VK_EXT_DISCARD_RECTANGLES_EXTENSION_NAME() {
        return constants$1201.const$5;
    }
    /**
     * {@snippet :
     * #define VK_EXT_CONSERVATIVE_RASTERIZATION_EXTENSION_NAME "VK_EXT_conservative_rasterization"
     * }
     */
    public static MemorySegment VK_EXT_CONSERVATIVE_RASTERIZATION_EXTENSION_NAME() {
        return constants$1202.const$0;
    }
    /**
     * {@snippet :
     * #define VK_EXT_DEPTH_CLIP_ENABLE_EXTENSION_NAME "VK_EXT_depth_clip_enable"
     * }
     */
    public static MemorySegment VK_EXT_DEPTH_CLIP_ENABLE_EXTENSION_NAME() {
        return constants$1202.const$1;
    }
    /**
     * {@snippet :
     * #define VK_EXT_SWAPCHAIN_COLOR_SPACE_EXTENSION_NAME "VK_EXT_swapchain_colorspace"
     * }
     */
    public static MemorySegment VK_EXT_SWAPCHAIN_COLOR_SPACE_EXTENSION_NAME() {
        return constants$1202.const$2;
    }
    /**
     * {@snippet :
     * #define VK_EXT_HDR_METADATA_EXTENSION_NAME "VK_EXT_hdr_metadata"
     * }
     */
    public static MemorySegment VK_EXT_HDR_METADATA_EXTENSION_NAME() {
        return constants$1202.const$3;
    }
    /**
     * {@snippet :
     * #define VK_EXT_EXTERNAL_MEMORY_DMA_BUF_EXTENSION_NAME "VK_EXT_external_memory_dma_buf"
     * }
     */
    public static MemorySegment VK_EXT_EXTERNAL_MEMORY_DMA_BUF_EXTENSION_NAME() {
        return constants$1202.const$4;
    }
    /**
     * {@snippet :
     * #define VK_EXT_QUEUE_FAMILY_FOREIGN_EXTENSION_NAME "VK_EXT_queue_family_foreign"
     * }
     */
    public static MemorySegment VK_EXT_QUEUE_FAMILY_FOREIGN_EXTENSION_NAME() {
        return constants$1202.const$5;
    }
    /**
     * {@snippet :
     * #define VK_QUEUE_FAMILY_FOREIGN_EXT 4294967293
     * }
     */
    public static int VK_QUEUE_FAMILY_FOREIGN_EXT() {
        return (int)4294967293L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_DEBUG_UTILS_EXTENSION_NAME "VK_EXT_debug_utils"
     * }
     */
    public static MemorySegment VK_EXT_DEBUG_UTILS_EXTENSION_NAME() {
        return constants$1203.const$0;
    }
    /**
     * {@snippet :
     * #define VK_EXT_SAMPLER_FILTER_MINMAX_EXTENSION_NAME "VK_EXT_sampler_filter_minmax"
     * }
     */
    public static MemorySegment VK_EXT_SAMPLER_FILTER_MINMAX_EXTENSION_NAME() {
        return constants$1203.const$1;
    }
    /**
     * {@snippet :
     * #define VK_AMD_GPU_SHADER_INT16_EXTENSION_NAME "VK_AMD_gpu_shader_int16"
     * }
     */
    public static MemorySegment VK_AMD_GPU_SHADER_INT16_EXTENSION_NAME() {
        return constants$1203.const$2;
    }
    /**
     * {@snippet :
     * #define VK_AMD_MIXED_ATTACHMENT_SAMPLES_EXTENSION_NAME "VK_AMD_mixed_attachment_samples"
     * }
     */
    public static MemorySegment VK_AMD_MIXED_ATTACHMENT_SAMPLES_EXTENSION_NAME() {
        return constants$1203.const$3;
    }
    /**
     * {@snippet :
     * #define VK_AMD_SHADER_FRAGMENT_MASK_EXTENSION_NAME "VK_AMD_shader_fragment_mask"
     * }
     */
    public static MemorySegment VK_AMD_SHADER_FRAGMENT_MASK_EXTENSION_NAME() {
        return constants$1203.const$4;
    }
    /**
     * {@snippet :
     * #define VK_EXT_INLINE_UNIFORM_BLOCK_EXTENSION_NAME "VK_EXT_inline_uniform_block"
     * }
     */
    public static MemorySegment VK_EXT_INLINE_UNIFORM_BLOCK_EXTENSION_NAME() {
        return constants$1203.const$5;
    }
    /**
     * {@snippet :
     * #define VK_EXT_SHADER_STENCIL_EXPORT_EXTENSION_NAME "VK_EXT_shader_stencil_export"
     * }
     */
    public static MemorySegment VK_EXT_SHADER_STENCIL_EXPORT_EXTENSION_NAME() {
        return constants$1204.const$0;
    }
    /**
     * {@snippet :
     * #define VK_EXT_SAMPLE_LOCATIONS_EXTENSION_NAME "VK_EXT_sample_locations"
     * }
     */
    public static MemorySegment VK_EXT_SAMPLE_LOCATIONS_EXTENSION_NAME() {
        return constants$1204.const$1;
    }
    /**
     * {@snippet :
     * #define VK_EXT_BLEND_OPERATION_ADVANCED_EXTENSION_NAME "VK_EXT_blend_operation_advanced"
     * }
     */
    public static MemorySegment VK_EXT_BLEND_OPERATION_ADVANCED_EXTENSION_NAME() {
        return constants$1204.const$2;
    }
    /**
     * {@snippet :
     * #define VK_NV_FRAGMENT_COVERAGE_TO_COLOR_EXTENSION_NAME "VK_NV_fragment_coverage_to_color"
     * }
     */
    public static MemorySegment VK_NV_FRAGMENT_COVERAGE_TO_COLOR_EXTENSION_NAME() {
        return constants$1204.const$3;
    }
    /**
     * {@snippet :
     * #define VK_NV_FRAMEBUFFER_MIXED_SAMPLES_EXTENSION_NAME "VK_NV_framebuffer_mixed_samples"
     * }
     */
    public static MemorySegment VK_NV_FRAMEBUFFER_MIXED_SAMPLES_EXTENSION_NAME() {
        return constants$1204.const$4;
    }
    /**
     * {@snippet :
     * #define VK_NV_FILL_RECTANGLE_EXTENSION_NAME "VK_NV_fill_rectangle"
     * }
     */
    public static MemorySegment VK_NV_FILL_RECTANGLE_EXTENSION_NAME() {
        return constants$1204.const$5;
    }
    /**
     * {@snippet :
     * #define VK_NV_SHADER_SM_BUILTINS_EXTENSION_NAME "VK_NV_shader_sm_builtins"
     * }
     */
    public static MemorySegment VK_NV_SHADER_SM_BUILTINS_EXTENSION_NAME() {
        return constants$1205.const$0;
    }
    /**
     * {@snippet :
     * #define VK_EXT_POST_DEPTH_COVERAGE_EXTENSION_NAME "VK_EXT_post_depth_coverage"
     * }
     */
    public static MemorySegment VK_EXT_POST_DEPTH_COVERAGE_EXTENSION_NAME() {
        return constants$1205.const$1;
    }
    /**
     * {@snippet :
     * #define VK_EXT_IMAGE_DRM_FORMAT_MODIFIER_EXTENSION_NAME "VK_EXT_image_drm_format_modifier"
     * }
     */
    public static MemorySegment VK_EXT_IMAGE_DRM_FORMAT_MODIFIER_EXTENSION_NAME() {
        return constants$1205.const$2;
    }
    /**
     * {@snippet :
     * #define VK_EXT_VALIDATION_CACHE_EXTENSION_NAME "VK_EXT_validation_cache"
     * }
     */
    public static MemorySegment VK_EXT_VALIDATION_CACHE_EXTENSION_NAME() {
        return constants$1205.const$3;
    }
    /**
     * {@snippet :
     * #define VK_EXT_DESCRIPTOR_INDEXING_EXTENSION_NAME "VK_EXT_descriptor_indexing"
     * }
     */
    public static MemorySegment VK_EXT_DESCRIPTOR_INDEXING_EXTENSION_NAME() {
        return constants$1205.const$4;
    }
    /**
     * {@snippet :
     * #define VK_EXT_SHADER_VIEWPORT_INDEX_LAYER_EXTENSION_NAME "VK_EXT_shader_viewport_index_layer"
     * }
     */
    public static MemorySegment VK_EXT_SHADER_VIEWPORT_INDEX_LAYER_EXTENSION_NAME() {
        return constants$1205.const$5;
    }
    /**
     * {@snippet :
     * #define VK_NV_SHADING_RATE_IMAGE_EXTENSION_NAME "VK_NV_shading_rate_image"
     * }
     */
    public static MemorySegment VK_NV_SHADING_RATE_IMAGE_EXTENSION_NAME() {
        return constants$1206.const$0;
    }
    /**
     * {@snippet :
     * #define VK_NV_RAY_TRACING_EXTENSION_NAME "VK_NV_ray_tracing"
     * }
     */
    public static MemorySegment VK_NV_RAY_TRACING_EXTENSION_NAME() {
        return constants$1206.const$1;
    }
    /**
     * {@snippet :
     * #define VK_SHADER_UNUSED_KHR 4294967295
     * }
     */
    public static int VK_SHADER_UNUSED_KHR() {
        return (int)4294967295L;
    }
    /**
     * {@snippet :
     * #define VK_SHADER_UNUSED_NV 4294967295
     * }
     */
    public static int VK_SHADER_UNUSED_NV() {
        return (int)4294967295L;
    }
    /**
     * {@snippet :
     * #define VK_NV_REPRESENTATIVE_FRAGMENT_TEST_EXTENSION_NAME "VK_NV_representative_fragment_test"
     * }
     */
    public static MemorySegment VK_NV_REPRESENTATIVE_FRAGMENT_TEST_EXTENSION_NAME() {
        return constants$1206.const$2;
    }
    /**
     * {@snippet :
     * #define VK_EXT_FILTER_CUBIC_EXTENSION_NAME "VK_EXT_filter_cubic"
     * }
     */
    public static MemorySegment VK_EXT_FILTER_CUBIC_EXTENSION_NAME() {
        return constants$1206.const$3;
    }
    /**
     * {@snippet :
     * #define VK_QCOM_RENDER_PASS_SHADER_RESOLVE_EXTENSION_NAME "VK_QCOM_render_pass_shader_resolve"
     * }
     */
    public static MemorySegment VK_QCOM_RENDER_PASS_SHADER_RESOLVE_EXTENSION_NAME() {
        return constants$1206.const$4;
    }
    /**
     * {@snippet :
     * #define VK_EXT_GLOBAL_PRIORITY_EXTENSION_NAME "VK_EXT_global_priority"
     * }
     */
    public static MemorySegment VK_EXT_GLOBAL_PRIORITY_EXTENSION_NAME() {
        return constants$1206.const$5;
    }
    /**
     * {@snippet :
     * #define VK_EXT_EXTERNAL_MEMORY_HOST_EXTENSION_NAME "VK_EXT_external_memory_host"
     * }
     */
    public static MemorySegment VK_EXT_EXTERNAL_MEMORY_HOST_EXTENSION_NAME() {
        return constants$1207.const$0;
    }
    /**
     * {@snippet :
     * #define VK_AMD_BUFFER_MARKER_EXTENSION_NAME "VK_AMD_buffer_marker"
     * }
     */
    public static MemorySegment VK_AMD_BUFFER_MARKER_EXTENSION_NAME() {
        return constants$1207.const$1;
    }
    /**
     * {@snippet :
     * #define VK_AMD_PIPELINE_COMPILER_CONTROL_EXTENSION_NAME "VK_AMD_pipeline_compiler_control"
     * }
     */
    public static MemorySegment VK_AMD_PIPELINE_COMPILER_CONTROL_EXTENSION_NAME() {
        return constants$1207.const$2;
    }
    /**
     * {@snippet :
     * #define VK_EXT_CALIBRATED_TIMESTAMPS_EXTENSION_NAME "VK_EXT_calibrated_timestamps"
     * }
     */
    public static MemorySegment VK_EXT_CALIBRATED_TIMESTAMPS_EXTENSION_NAME() {
        return constants$1207.const$3;
    }
    /**
     * {@snippet :
     * #define VK_AMD_SHADER_CORE_PROPERTIES_EXTENSION_NAME "VK_AMD_shader_core_properties"
     * }
     */
    public static MemorySegment VK_AMD_SHADER_CORE_PROPERTIES_EXTENSION_NAME() {
        return constants$1207.const$4;
    }
    /**
     * {@snippet :
     * #define VK_AMD_MEMORY_OVERALLOCATION_BEHAVIOR_EXTENSION_NAME "VK_AMD_memory_overallocation_behavior"
     * }
     */
    public static MemorySegment VK_AMD_MEMORY_OVERALLOCATION_BEHAVIOR_EXTENSION_NAME() {
        return constants$1207.const$5;
    }
    /**
     * {@snippet :
     * #define VK_EXT_VERTEX_ATTRIBUTE_DIVISOR_EXTENSION_NAME "VK_EXT_vertex_attribute_divisor"
     * }
     */
    public static MemorySegment VK_EXT_VERTEX_ATTRIBUTE_DIVISOR_EXTENSION_NAME() {
        return constants$1208.const$0;
    }
    /**
     * {@snippet :
     * #define VK_EXT_PIPELINE_CREATION_FEEDBACK_EXTENSION_NAME "VK_EXT_pipeline_creation_feedback"
     * }
     */
    public static MemorySegment VK_EXT_PIPELINE_CREATION_FEEDBACK_EXTENSION_NAME() {
        return constants$1208.const$1;
    }
    /**
     * {@snippet :
     * #define VK_NV_SHADER_SUBGROUP_PARTITIONED_EXTENSION_NAME "VK_NV_shader_subgroup_partitioned"
     * }
     */
    public static MemorySegment VK_NV_SHADER_SUBGROUP_PARTITIONED_EXTENSION_NAME() {
        return constants$1208.const$2;
    }
    /**
     * {@snippet :
     * #define VK_NV_COMPUTE_SHADER_DERIVATIVES_EXTENSION_NAME "VK_NV_compute_shader_derivatives"
     * }
     */
    public static MemorySegment VK_NV_COMPUTE_SHADER_DERIVATIVES_EXTENSION_NAME() {
        return constants$1208.const$3;
    }
    /**
     * {@snippet :
     * #define VK_NV_MESH_SHADER_EXTENSION_NAME "VK_NV_mesh_shader"
     * }
     */
    public static MemorySegment VK_NV_MESH_SHADER_EXTENSION_NAME() {
        return constants$1208.const$4;
    }
    /**
     * {@snippet :
     * #define VK_NV_FRAGMENT_SHADER_BARYCENTRIC_EXTENSION_NAME "VK_NV_fragment_shader_barycentric"
     * }
     */
    public static MemorySegment VK_NV_FRAGMENT_SHADER_BARYCENTRIC_EXTENSION_NAME() {
        return constants$1208.const$5;
    }
    /**
     * {@snippet :
     * #define VK_NV_SHADER_IMAGE_FOOTPRINT_EXTENSION_NAME "VK_NV_shader_image_footprint"
     * }
     */
    public static MemorySegment VK_NV_SHADER_IMAGE_FOOTPRINT_EXTENSION_NAME() {
        return constants$1209.const$0;
    }
    /**
     * {@snippet :
     * #define VK_NV_SCISSOR_EXCLUSIVE_EXTENSION_NAME "VK_NV_scissor_exclusive"
     * }
     */
    public static MemorySegment VK_NV_SCISSOR_EXCLUSIVE_EXTENSION_NAME() {
        return constants$1209.const$1;
    }
    /**
     * {@snippet :
     * #define VK_NV_DEVICE_DIAGNOSTIC_CHECKPOINTS_EXTENSION_NAME "VK_NV_device_diagnostic_checkpoints"
     * }
     */
    public static MemorySegment VK_NV_DEVICE_DIAGNOSTIC_CHECKPOINTS_EXTENSION_NAME() {
        return constants$1209.const$2;
    }
    /**
     * {@snippet :
     * #define VK_INTEL_SHADER_INTEGER_FUNCTIONS_2_EXTENSION_NAME "VK_INTEL_shader_integer_functions2"
     * }
     */
    public static MemorySegment VK_INTEL_SHADER_INTEGER_FUNCTIONS_2_EXTENSION_NAME() {
        return constants$1209.const$3;
    }
    /**
     * {@snippet :
     * #define VK_INTEL_PERFORMANCE_QUERY_EXTENSION_NAME "VK_INTEL_performance_query"
     * }
     */
    public static MemorySegment VK_INTEL_PERFORMANCE_QUERY_EXTENSION_NAME() {
        return constants$1209.const$4;
    }
    /**
     * {@snippet :
     * #define VK_EXT_PCI_BUS_INFO_EXTENSION_NAME "VK_EXT_pci_bus_info"
     * }
     */
    public static MemorySegment VK_EXT_PCI_BUS_INFO_EXTENSION_NAME() {
        return constants$1209.const$5;
    }
    /**
     * {@snippet :
     * #define VK_AMD_DISPLAY_NATIVE_HDR_EXTENSION_NAME "VK_AMD_display_native_hdr"
     * }
     */
    public static MemorySegment VK_AMD_DISPLAY_NATIVE_HDR_EXTENSION_NAME() {
        return constants$1210.const$0;
    }
    /**
     * {@snippet :
     * #define VK_EXT_FRAGMENT_DENSITY_MAP_EXTENSION_NAME "VK_EXT_fragment_density_map"
     * }
     */
    public static MemorySegment VK_EXT_FRAGMENT_DENSITY_MAP_EXTENSION_NAME() {
        return constants$1210.const$1;
    }
    /**
     * {@snippet :
     * #define VK_EXT_SCALAR_BLOCK_LAYOUT_EXTENSION_NAME "VK_EXT_scalar_block_layout"
     * }
     */
    public static MemorySegment VK_EXT_SCALAR_BLOCK_LAYOUT_EXTENSION_NAME() {
        return constants$1210.const$2;
    }
    /**
     * {@snippet :
     * #define VK_GOOGLE_HLSL_FUNCTIONALITY_1_EXTENSION_NAME "VK_GOOGLE_hlsl_functionality1"
     * }
     */
    public static MemorySegment VK_GOOGLE_HLSL_FUNCTIONALITY_1_EXTENSION_NAME() {
        return constants$1210.const$3;
    }
    /**
     * {@snippet :
     * #define VK_GOOGLE_HLSL_FUNCTIONALITY1_SPEC_VERSION 1
     * }
     */
    public static int VK_GOOGLE_HLSL_FUNCTIONALITY1_SPEC_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define VK_GOOGLE_HLSL_FUNCTIONALITY1_EXTENSION_NAME "VK_GOOGLE_hlsl_functionality1"
     * }
     */
    public static MemorySegment VK_GOOGLE_HLSL_FUNCTIONALITY1_EXTENSION_NAME() {
        return constants$1210.const$3;
    }
    /**
     * {@snippet :
     * #define VK_GOOGLE_DECORATE_STRING_EXTENSION_NAME "VK_GOOGLE_decorate_string"
     * }
     */
    public static MemorySegment VK_GOOGLE_DECORATE_STRING_EXTENSION_NAME() {
        return constants$1210.const$4;
    }
    /**
     * {@snippet :
     * #define VK_EXT_SUBGROUP_SIZE_CONTROL_EXTENSION_NAME "VK_EXT_subgroup_size_control"
     * }
     */
    public static MemorySegment VK_EXT_SUBGROUP_SIZE_CONTROL_EXTENSION_NAME() {
        return constants$1210.const$5;
    }
    /**
     * {@snippet :
     * #define VK_AMD_SHADER_CORE_PROPERTIES_2_EXTENSION_NAME "VK_AMD_shader_core_properties2"
     * }
     */
    public static MemorySegment VK_AMD_SHADER_CORE_PROPERTIES_2_EXTENSION_NAME() {
        return constants$1211.const$0;
    }
    /**
     * {@snippet :
     * #define VK_AMD_DEVICE_COHERENT_MEMORY_EXTENSION_NAME "VK_AMD_device_coherent_memory"
     * }
     */
    public static MemorySegment VK_AMD_DEVICE_COHERENT_MEMORY_EXTENSION_NAME() {
        return constants$1211.const$1;
    }
    /**
     * {@snippet :
     * #define VK_EXT_SHADER_IMAGE_ATOMIC_INT64_EXTENSION_NAME "VK_EXT_shader_image_atomic_int64"
     * }
     */
    public static MemorySegment VK_EXT_SHADER_IMAGE_ATOMIC_INT64_EXTENSION_NAME() {
        return constants$1211.const$2;
    }
    /**
     * {@snippet :
     * #define VK_EXT_MEMORY_BUDGET_EXTENSION_NAME "VK_EXT_memory_budget"
     * }
     */
    public static MemorySegment VK_EXT_MEMORY_BUDGET_EXTENSION_NAME() {
        return constants$1211.const$3;
    }
    /**
     * {@snippet :
     * #define VK_EXT_MEMORY_PRIORITY_EXTENSION_NAME "VK_EXT_memory_priority"
     * }
     */
    public static MemorySegment VK_EXT_MEMORY_PRIORITY_EXTENSION_NAME() {
        return constants$1211.const$4;
    }
    /**
     * {@snippet :
     * #define VK_NV_DEDICATED_ALLOCATION_IMAGE_ALIASING_EXTENSION_NAME "VK_NV_dedicated_allocation_image_aliasing"
     * }
     */
    public static MemorySegment VK_NV_DEDICATED_ALLOCATION_IMAGE_ALIASING_EXTENSION_NAME() {
        return constants$1211.const$5;
    }
    /**
     * {@snippet :
     * #define VK_EXT_BUFFER_DEVICE_ADDRESS_EXTENSION_NAME "VK_EXT_buffer_device_address"
     * }
     */
    public static MemorySegment VK_EXT_BUFFER_DEVICE_ADDRESS_EXTENSION_NAME() {
        return constants$1212.const$0;
    }
    /**
     * {@snippet :
     * #define VK_EXT_TOOLING_INFO_EXTENSION_NAME "VK_EXT_tooling_info"
     * }
     */
    public static MemorySegment VK_EXT_TOOLING_INFO_EXTENSION_NAME() {
        return constants$1212.const$1;
    }
    /**
     * {@snippet :
     * #define VK_EXT_SEPARATE_STENCIL_USAGE_EXTENSION_NAME "VK_EXT_separate_stencil_usage"
     * }
     */
    public static MemorySegment VK_EXT_SEPARATE_STENCIL_USAGE_EXTENSION_NAME() {
        return constants$1212.const$2;
    }
    /**
     * {@snippet :
     * #define VK_EXT_VALIDATION_FEATURES_EXTENSION_NAME "VK_EXT_validation_features"
     * }
     */
    public static MemorySegment VK_EXT_VALIDATION_FEATURES_EXTENSION_NAME() {
        return constants$1212.const$3;
    }
    /**
     * {@snippet :
     * #define VK_NV_COOPERATIVE_MATRIX_EXTENSION_NAME "VK_NV_cooperative_matrix"
     * }
     */
    public static MemorySegment VK_NV_COOPERATIVE_MATRIX_EXTENSION_NAME() {
        return constants$1212.const$4;
    }
    /**
     * {@snippet :
     * #define VK_NV_COVERAGE_REDUCTION_MODE_EXTENSION_NAME "VK_NV_coverage_reduction_mode"
     * }
     */
    public static MemorySegment VK_NV_COVERAGE_REDUCTION_MODE_EXTENSION_NAME() {
        return constants$1212.const$5;
    }
    /**
     * {@snippet :
     * #define VK_EXT_FRAGMENT_SHADER_INTERLOCK_EXTENSION_NAME "VK_EXT_fragment_shader_interlock"
     * }
     */
    public static MemorySegment VK_EXT_FRAGMENT_SHADER_INTERLOCK_EXTENSION_NAME() {
        return constants$1213.const$0;
    }
    /**
     * {@snippet :
     * #define VK_EXT_YCBCR_IMAGE_ARRAYS_EXTENSION_NAME "VK_EXT_ycbcr_image_arrays"
     * }
     */
    public static MemorySegment VK_EXT_YCBCR_IMAGE_ARRAYS_EXTENSION_NAME() {
        return constants$1213.const$1;
    }
    /**
     * {@snippet :
     * #define VK_EXT_PROVOKING_VERTEX_EXTENSION_NAME "VK_EXT_provoking_vertex"
     * }
     */
    public static MemorySegment VK_EXT_PROVOKING_VERTEX_EXTENSION_NAME() {
        return constants$1213.const$2;
    }
    /**
     * {@snippet :
     * #define VK_EXT_HEADLESS_SURFACE_EXTENSION_NAME "VK_EXT_headless_surface"
     * }
     */
    public static MemorySegment VK_EXT_HEADLESS_SURFACE_EXTENSION_NAME() {
        return constants$1213.const$3;
    }
    /**
     * {@snippet :
     * #define VK_EXT_LINE_RASTERIZATION_EXTENSION_NAME "VK_EXT_line_rasterization"
     * }
     */
    public static MemorySegment VK_EXT_LINE_RASTERIZATION_EXTENSION_NAME() {
        return constants$1213.const$4;
    }
    /**
     * {@snippet :
     * #define VK_EXT_SHADER_ATOMIC_FLOAT_EXTENSION_NAME "VK_EXT_shader_atomic_float"
     * }
     */
    public static MemorySegment VK_EXT_SHADER_ATOMIC_FLOAT_EXTENSION_NAME() {
        return constants$1213.const$5;
    }
    /**
     * {@snippet :
     * #define VK_EXT_HOST_QUERY_RESET_EXTENSION_NAME "VK_EXT_host_query_reset"
     * }
     */
    public static MemorySegment VK_EXT_HOST_QUERY_RESET_EXTENSION_NAME() {
        return constants$1214.const$0;
    }
    /**
     * {@snippet :
     * #define VK_EXT_INDEX_TYPE_UINT8_EXTENSION_NAME "VK_EXT_index_type_uint8"
     * }
     */
    public static MemorySegment VK_EXT_INDEX_TYPE_UINT8_EXTENSION_NAME() {
        return constants$1214.const$1;
    }
    /**
     * {@snippet :
     * #define VK_EXT_EXTENDED_DYNAMIC_STATE_EXTENSION_NAME "VK_EXT_extended_dynamic_state"
     * }
     */
    public static MemorySegment VK_EXT_EXTENDED_DYNAMIC_STATE_EXTENSION_NAME() {
        return constants$1214.const$2;
    }
    /**
     * {@snippet :
     * #define VK_EXT_SHADER_ATOMIC_FLOAT_2_EXTENSION_NAME "VK_EXT_shader_atomic_float2"
     * }
     */
    public static MemorySegment VK_EXT_SHADER_ATOMIC_FLOAT_2_EXTENSION_NAME() {
        return constants$1214.const$3;
    }
    /**
     * {@snippet :
     * #define VK_EXT_SURFACE_MAINTENANCE_1_EXTENSION_NAME "VK_EXT_surface_maintenance1"
     * }
     */
    public static MemorySegment VK_EXT_SURFACE_MAINTENANCE_1_EXTENSION_NAME() {
        return constants$1214.const$4;
    }
    /**
     * {@snippet :
     * #define VK_EXT_SWAPCHAIN_MAINTENANCE_1_EXTENSION_NAME "VK_EXT_swapchain_maintenance1"
     * }
     */
    public static MemorySegment VK_EXT_SWAPCHAIN_MAINTENANCE_1_EXTENSION_NAME() {
        return constants$1214.const$5;
    }
    /**
     * {@snippet :
     * #define VK_EXT_SHADER_DEMOTE_TO_HELPER_INVOCATION_EXTENSION_NAME "VK_EXT_shader_demote_to_helper_invocation"
     * }
     */
    public static MemorySegment VK_EXT_SHADER_DEMOTE_TO_HELPER_INVOCATION_EXTENSION_NAME() {
        return constants$1215.const$0;
    }
    /**
     * {@snippet :
     * #define VK_NV_DEVICE_GENERATED_COMMANDS_EXTENSION_NAME "VK_NV_device_generated_commands"
     * }
     */
    public static MemorySegment VK_NV_DEVICE_GENERATED_COMMANDS_EXTENSION_NAME() {
        return constants$1215.const$1;
    }
    /**
     * {@snippet :
     * #define VK_NV_INHERITED_VIEWPORT_SCISSOR_EXTENSION_NAME "VK_NV_inherited_viewport_scissor"
     * }
     */
    public static MemorySegment VK_NV_INHERITED_VIEWPORT_SCISSOR_EXTENSION_NAME() {
        return constants$1215.const$2;
    }
    /**
     * {@snippet :
     * #define VK_EXT_TEXEL_BUFFER_ALIGNMENT_EXTENSION_NAME "VK_EXT_texel_buffer_alignment"
     * }
     */
    public static MemorySegment VK_EXT_TEXEL_BUFFER_ALIGNMENT_EXTENSION_NAME() {
        return constants$1215.const$3;
    }
    /**
     * {@snippet :
     * #define VK_QCOM_RENDER_PASS_TRANSFORM_EXTENSION_NAME "VK_QCOM_render_pass_transform"
     * }
     */
    public static MemorySegment VK_QCOM_RENDER_PASS_TRANSFORM_EXTENSION_NAME() {
        return constants$1215.const$4;
    }
    /**
     * {@snippet :
     * #define VK_EXT_DEVICE_MEMORY_REPORT_EXTENSION_NAME "VK_EXT_device_memory_report"
     * }
     */
    public static MemorySegment VK_EXT_DEVICE_MEMORY_REPORT_EXTENSION_NAME() {
        return constants$1215.const$5;
    }
    /**
     * {@snippet :
     * #define VK_EXT_ACQUIRE_DRM_DISPLAY_EXTENSION_NAME "VK_EXT_acquire_drm_display"
     * }
     */
    public static MemorySegment VK_EXT_ACQUIRE_DRM_DISPLAY_EXTENSION_NAME() {
        return constants$1216.const$0;
    }
    /**
     * {@snippet :
     * #define VK_EXT_ROBUSTNESS_2_EXTENSION_NAME "VK_EXT_robustness2"
     * }
     */
    public static MemorySegment VK_EXT_ROBUSTNESS_2_EXTENSION_NAME() {
        return constants$1216.const$1;
    }
    /**
     * {@snippet :
     * #define VK_EXT_CUSTOM_BORDER_COLOR_EXTENSION_NAME "VK_EXT_custom_border_color"
     * }
     */
    public static MemorySegment VK_EXT_CUSTOM_BORDER_COLOR_EXTENSION_NAME() {
        return constants$1216.const$2;
    }
    /**
     * {@snippet :
     * #define VK_GOOGLE_USER_TYPE_EXTENSION_NAME "VK_GOOGLE_user_type"
     * }
     */
    public static MemorySegment VK_GOOGLE_USER_TYPE_EXTENSION_NAME() {
        return constants$1216.const$3;
    }
    /**
     * {@snippet :
     * #define VK_NV_PRESENT_BARRIER_EXTENSION_NAME "VK_NV_present_barrier"
     * }
     */
    public static MemorySegment VK_NV_PRESENT_BARRIER_EXTENSION_NAME() {
        return constants$1216.const$4;
    }
    /**
     * {@snippet :
     * #define VK_EXT_PRIVATE_DATA_EXTENSION_NAME "VK_EXT_private_data"
     * }
     */
    public static MemorySegment VK_EXT_PRIVATE_DATA_EXTENSION_NAME() {
        return constants$1216.const$5;
    }
    /**
     * {@snippet :
     * #define VK_EXT_PIPELINE_CREATION_CACHE_CONTROL_EXTENSION_NAME "VK_EXT_pipeline_creation_cache_control"
     * }
     */
    public static MemorySegment VK_EXT_PIPELINE_CREATION_CACHE_CONTROL_EXTENSION_NAME() {
        return constants$1217.const$0;
    }
    /**
     * {@snippet :
     * #define VK_NV_DEVICE_DIAGNOSTICS_CONFIG_EXTENSION_NAME "VK_NV_device_diagnostics_config"
     * }
     */
    public static MemorySegment VK_NV_DEVICE_DIAGNOSTICS_CONFIG_EXTENSION_NAME() {
        return constants$1217.const$1;
    }
    /**
     * {@snippet :
     * #define VK_QCOM_RENDER_PASS_STORE_OPS_EXTENSION_NAME "VK_QCOM_render_pass_store_ops"
     * }
     */
    public static MemorySegment VK_QCOM_RENDER_PASS_STORE_OPS_EXTENSION_NAME() {
        return constants$1217.const$2;
    }
    /**
     * {@snippet :
     * #define VK_NV_LOW_LATENCY_EXTENSION_NAME "VK_NV_low_latency"
     * }
     */
    public static MemorySegment VK_NV_LOW_LATENCY_EXTENSION_NAME() {
        return constants$1217.const$3;
    }
    /**
     * {@snippet :
     * #define VK_EXT_DESCRIPTOR_BUFFER_EXTENSION_NAME "VK_EXT_descriptor_buffer"
     * }
     */
    public static MemorySegment VK_EXT_DESCRIPTOR_BUFFER_EXTENSION_NAME() {
        return constants$1217.const$4;
    }
    /**
     * {@snippet :
     * #define VK_EXT_GRAPHICS_PIPELINE_LIBRARY_EXTENSION_NAME "VK_EXT_graphics_pipeline_library"
     * }
     */
    public static MemorySegment VK_EXT_GRAPHICS_PIPELINE_LIBRARY_EXTENSION_NAME() {
        return constants$1217.const$5;
    }
    /**
     * {@snippet :
     * #define VK_AMD_SHADER_EARLY_AND_LATE_FRAGMENT_TESTS_EXTENSION_NAME "VK_AMD_shader_early_and_late_fragment_tests"
     * }
     */
    public static MemorySegment VK_AMD_SHADER_EARLY_AND_LATE_FRAGMENT_TESTS_EXTENSION_NAME() {
        return constants$1218.const$0;
    }
    /**
     * {@snippet :
     * #define VK_NV_FRAGMENT_SHADING_RATE_ENUMS_EXTENSION_NAME "VK_NV_fragment_shading_rate_enums"
     * }
     */
    public static MemorySegment VK_NV_FRAGMENT_SHADING_RATE_ENUMS_EXTENSION_NAME() {
        return constants$1218.const$1;
    }
    /**
     * {@snippet :
     * #define VK_NV_RAY_TRACING_MOTION_BLUR_EXTENSION_NAME "VK_NV_ray_tracing_motion_blur"
     * }
     */
    public static MemorySegment VK_NV_RAY_TRACING_MOTION_BLUR_EXTENSION_NAME() {
        return constants$1218.const$2;
    }
    /**
     * {@snippet :
     * #define VK_EXT_YCBCR_2PLANE_444_FORMATS_EXTENSION_NAME "VK_EXT_ycbcr_2plane_444_formats"
     * }
     */
    public static MemorySegment VK_EXT_YCBCR_2PLANE_444_FORMATS_EXTENSION_NAME() {
        return constants$1218.const$3;
    }
    /**
     * {@snippet :
     * #define VK_EXT_FRAGMENT_DENSITY_MAP_2_EXTENSION_NAME "VK_EXT_fragment_density_map2"
     * }
     */
    public static MemorySegment VK_EXT_FRAGMENT_DENSITY_MAP_2_EXTENSION_NAME() {
        return constants$1218.const$4;
    }
    /**
     * {@snippet :
     * #define VK_QCOM_ROTATED_COPY_COMMANDS_EXTENSION_NAME "VK_QCOM_rotated_copy_commands"
     * }
     */
    public static MemorySegment VK_QCOM_ROTATED_COPY_COMMANDS_EXTENSION_NAME() {
        return constants$1218.const$5;
    }
    /**
     * {@snippet :
     * #define VK_EXT_IMAGE_ROBUSTNESS_EXTENSION_NAME "VK_EXT_image_robustness"
     * }
     */
    public static MemorySegment VK_EXT_IMAGE_ROBUSTNESS_EXTENSION_NAME() {
        return constants$1219.const$0;
    }
    /**
     * {@snippet :
     * #define VK_EXT_IMAGE_COMPRESSION_CONTROL_EXTENSION_NAME "VK_EXT_image_compression_control"
     * }
     */
    public static MemorySegment VK_EXT_IMAGE_COMPRESSION_CONTROL_EXTENSION_NAME() {
        return constants$1219.const$1;
    }
    /**
     * {@snippet :
     * #define VK_EXT_ATTACHMENT_FEEDBACK_LOOP_LAYOUT_EXTENSION_NAME "VK_EXT_attachment_feedback_loop_layout"
     * }
     */
    public static MemorySegment VK_EXT_ATTACHMENT_FEEDBACK_LOOP_LAYOUT_EXTENSION_NAME() {
        return constants$1219.const$2;
    }
    /**
     * {@snippet :
     * #define VK_EXT_4444_FORMATS_EXTENSION_NAME "VK_EXT_4444_formats"
     * }
     */
    public static MemorySegment VK_EXT_4444_FORMATS_EXTENSION_NAME() {
        return constants$1219.const$3;
    }
    /**
     * {@snippet :
     * #define VK_EXT_DEVICE_FAULT_EXTENSION_NAME "VK_EXT_device_fault"
     * }
     */
    public static MemorySegment VK_EXT_DEVICE_FAULT_EXTENSION_NAME() {
        return constants$1219.const$4;
    }
    /**
     * {@snippet :
     * #define VK_ARM_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_EXTENSION_NAME "VK_ARM_rasterization_order_attachment_access"
     * }
     */
    public static MemorySegment VK_ARM_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_EXTENSION_NAME() {
        return constants$1219.const$5;
    }
    /**
     * {@snippet :
     * #define VK_EXT_RGBA10X6_FORMATS_EXTENSION_NAME "VK_EXT_rgba10x6_formats"
     * }
     */
    public static MemorySegment VK_EXT_RGBA10X6_FORMATS_EXTENSION_NAME() {
        return constants$1220.const$0;
    }
    /**
     * {@snippet :
     * #define VK_VALVE_MUTABLE_DESCRIPTOR_TYPE_EXTENSION_NAME "VK_VALVE_mutable_descriptor_type"
     * }
     */
    public static MemorySegment VK_VALVE_MUTABLE_DESCRIPTOR_TYPE_EXTENSION_NAME() {
        return constants$1220.const$1;
    }
    /**
     * {@snippet :
     * #define VK_EXT_VERTEX_INPUT_DYNAMIC_STATE_EXTENSION_NAME "VK_EXT_vertex_input_dynamic_state"
     * }
     */
    public static MemorySegment VK_EXT_VERTEX_INPUT_DYNAMIC_STATE_EXTENSION_NAME() {
        return constants$1220.const$2;
    }
    /**
     * {@snippet :
     * #define VK_EXT_PHYSICAL_DEVICE_DRM_EXTENSION_NAME "VK_EXT_physical_device_drm"
     * }
     */
    public static MemorySegment VK_EXT_PHYSICAL_DEVICE_DRM_EXTENSION_NAME() {
        return constants$1220.const$3;
    }
    /**
     * {@snippet :
     * #define VK_EXT_DEVICE_ADDRESS_BINDING_REPORT_EXTENSION_NAME "VK_EXT_device_address_binding_report"
     * }
     */
    public static MemorySegment VK_EXT_DEVICE_ADDRESS_BINDING_REPORT_EXTENSION_NAME() {
        return constants$1220.const$4;
    }
    /**
     * {@snippet :
     * #define VK_EXT_DEPTH_CLIP_CONTROL_EXTENSION_NAME "VK_EXT_depth_clip_control"
     * }
     */
    public static MemorySegment VK_EXT_DEPTH_CLIP_CONTROL_EXTENSION_NAME() {
        return constants$1220.const$5;
    }
    /**
     * {@snippet :
     * #define VK_EXT_PRIMITIVE_TOPOLOGY_LIST_RESTART_EXTENSION_NAME "VK_EXT_primitive_topology_list_restart"
     * }
     */
    public static MemorySegment VK_EXT_PRIMITIVE_TOPOLOGY_LIST_RESTART_EXTENSION_NAME() {
        return constants$1221.const$0;
    }
    /**
     * {@snippet :
     * #define VK_HUAWEI_SUBPASS_SHADING_EXTENSION_NAME "VK_HUAWEI_subpass_shading"
     * }
     */
    public static MemorySegment VK_HUAWEI_SUBPASS_SHADING_EXTENSION_NAME() {
        return constants$1221.const$1;
    }
    /**
     * {@snippet :
     * #define VK_HUAWEI_INVOCATION_MASK_EXTENSION_NAME "VK_HUAWEI_invocation_mask"
     * }
     */
    public static MemorySegment VK_HUAWEI_INVOCATION_MASK_EXTENSION_NAME() {
        return constants$1221.const$2;
    }
    /**
     * {@snippet :
     * #define VK_NV_EXTERNAL_MEMORY_RDMA_EXTENSION_NAME "VK_NV_external_memory_rdma"
     * }
     */
    public static MemorySegment VK_NV_EXTERNAL_MEMORY_RDMA_EXTENSION_NAME() {
        return constants$1221.const$3;
    }
    /**
     * {@snippet :
     * #define VK_EXT_PIPELINE_PROPERTIES_EXTENSION_NAME "VK_EXT_pipeline_properties"
     * }
     */
    public static MemorySegment VK_EXT_PIPELINE_PROPERTIES_EXTENSION_NAME() {
        return constants$1221.const$4;
    }
    /**
     * {@snippet :
     * #define VK_EXT_MULTISAMPLED_RENDER_TO_SINGLE_SAMPLED_EXTENSION_NAME "VK_EXT_multisampled_render_to_single_sampled"
     * }
     */
    public static MemorySegment VK_EXT_MULTISAMPLED_RENDER_TO_SINGLE_SAMPLED_EXTENSION_NAME() {
        return constants$1221.const$5;
    }
    /**
     * {@snippet :
     * #define VK_EXT_EXTENDED_DYNAMIC_STATE_2_EXTENSION_NAME "VK_EXT_extended_dynamic_state2"
     * }
     */
    public static MemorySegment VK_EXT_EXTENDED_DYNAMIC_STATE_2_EXTENSION_NAME() {
        return constants$1222.const$0;
    }
    /**
     * {@snippet :
     * #define VK_EXT_COLOR_WRITE_ENABLE_EXTENSION_NAME "VK_EXT_color_write_enable"
     * }
     */
    public static MemorySegment VK_EXT_COLOR_WRITE_ENABLE_EXTENSION_NAME() {
        return constants$1222.const$1;
    }
    /**
     * {@snippet :
     * #define VK_EXT_PRIMITIVES_GENERATED_QUERY_EXTENSION_NAME "VK_EXT_primitives_generated_query"
     * }
     */
    public static MemorySegment VK_EXT_PRIMITIVES_GENERATED_QUERY_EXTENSION_NAME() {
        return constants$1222.const$2;
    }
    /**
     * {@snippet :
     * #define VK_EXT_GLOBAL_PRIORITY_QUERY_EXTENSION_NAME "VK_EXT_global_priority_query"
     * }
     */
    public static MemorySegment VK_EXT_GLOBAL_PRIORITY_QUERY_EXTENSION_NAME() {
        return constants$1222.const$3;
    }
    /**
     * {@snippet :
     * #define VK_MAX_GLOBAL_PRIORITY_SIZE_EXT 16
     * }
     */
    public static int VK_MAX_GLOBAL_PRIORITY_SIZE_EXT() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_IMAGE_VIEW_MIN_LOD_EXTENSION_NAME "VK_EXT_image_view_min_lod"
     * }
     */
    public static MemorySegment VK_EXT_IMAGE_VIEW_MIN_LOD_EXTENSION_NAME() {
        return constants$1222.const$4;
    }
    /**
     * {@snippet :
     * #define VK_EXT_MULTI_DRAW_EXTENSION_NAME "VK_EXT_multi_draw"
     * }
     */
    public static MemorySegment VK_EXT_MULTI_DRAW_EXTENSION_NAME() {
        return constants$1222.const$5;
    }
    /**
     * {@snippet :
     * #define VK_EXT_IMAGE_2D_VIEW_OF_3D_EXTENSION_NAME "VK_EXT_image_2d_view_of_3d"
     * }
     */
    public static MemorySegment VK_EXT_IMAGE_2D_VIEW_OF_3D_EXTENSION_NAME() {
        return constants$1223.const$0;
    }
    /**
     * {@snippet :
     * #define VK_EXT_SHADER_TILE_IMAGE_EXTENSION_NAME "VK_EXT_shader_tile_image"
     * }
     */
    public static MemorySegment VK_EXT_SHADER_TILE_IMAGE_EXTENSION_NAME() {
        return constants$1223.const$1;
    }
    /**
     * {@snippet :
     * #define VK_EXT_OPACITY_MICROMAP_EXTENSION_NAME "VK_EXT_opacity_micromap"
     * }
     */
    public static MemorySegment VK_EXT_OPACITY_MICROMAP_EXTENSION_NAME() {
        return constants$1223.const$2;
    }
    /**
     * {@snippet :
     * #define VK_EXT_LOAD_STORE_OP_NONE_EXTENSION_NAME "VK_EXT_load_store_op_none"
     * }
     */
    public static MemorySegment VK_EXT_LOAD_STORE_OP_NONE_EXTENSION_NAME() {
        return constants$1223.const$3;
    }
    /**
     * {@snippet :
     * #define VK_HUAWEI_CLUSTER_CULLING_SHADER_EXTENSION_NAME "VK_HUAWEI_cluster_culling_shader"
     * }
     */
    public static MemorySegment VK_HUAWEI_CLUSTER_CULLING_SHADER_EXTENSION_NAME() {
        return constants$1223.const$4;
    }
    /**
     * {@snippet :
     * #define VK_EXT_BORDER_COLOR_SWIZZLE_EXTENSION_NAME "VK_EXT_border_color_swizzle"
     * }
     */
    public static MemorySegment VK_EXT_BORDER_COLOR_SWIZZLE_EXTENSION_NAME() {
        return constants$1223.const$5;
    }
    /**
     * {@snippet :
     * #define VK_EXT_PAGEABLE_DEVICE_LOCAL_MEMORY_EXTENSION_NAME "VK_EXT_pageable_device_local_memory"
     * }
     */
    public static MemorySegment VK_EXT_PAGEABLE_DEVICE_LOCAL_MEMORY_EXTENSION_NAME() {
        return constants$1224.const$0;
    }
    /**
     * {@snippet :
     * #define VK_ARM_SHADER_CORE_PROPERTIES_EXTENSION_NAME "VK_ARM_shader_core_properties"
     * }
     */
    public static MemorySegment VK_ARM_SHADER_CORE_PROPERTIES_EXTENSION_NAME() {
        return constants$1224.const$1;
    }
    /**
     * {@snippet :
     * #define VK_EXT_IMAGE_SLICED_VIEW_OF_3D_EXTENSION_NAME "VK_EXT_image_sliced_view_of_3d"
     * }
     */
    public static MemorySegment VK_EXT_IMAGE_SLICED_VIEW_OF_3D_EXTENSION_NAME() {
        return constants$1224.const$2;
    }
    /**
     * {@snippet :
     * #define VK_REMAINING_3D_SLICES_EXT 4294967295
     * }
     */
    public static int VK_REMAINING_3D_SLICES_EXT() {
        return (int)4294967295L;
    }
    /**
     * {@snippet :
     * #define VK_VALVE_DESCRIPTOR_SET_HOST_MAPPING_EXTENSION_NAME "VK_VALVE_descriptor_set_host_mapping"
     * }
     */
    public static MemorySegment VK_VALVE_DESCRIPTOR_SET_HOST_MAPPING_EXTENSION_NAME() {
        return constants$1224.const$3;
    }
    /**
     * {@snippet :
     * #define VK_EXT_DEPTH_CLAMP_ZERO_ONE_EXTENSION_NAME "VK_EXT_depth_clamp_zero_one"
     * }
     */
    public static MemorySegment VK_EXT_DEPTH_CLAMP_ZERO_ONE_EXTENSION_NAME() {
        return constants$1224.const$4;
    }
    /**
     * {@snippet :
     * #define VK_EXT_NON_SEAMLESS_CUBE_MAP_EXTENSION_NAME "VK_EXT_non_seamless_cube_map"
     * }
     */
    public static MemorySegment VK_EXT_NON_SEAMLESS_CUBE_MAP_EXTENSION_NAME() {
        return constants$1224.const$5;
    }
    /**
     * {@snippet :
     * #define VK_QCOM_FRAGMENT_DENSITY_MAP_OFFSET_EXTENSION_NAME "VK_QCOM_fragment_density_map_offset"
     * }
     */
    public static MemorySegment VK_QCOM_FRAGMENT_DENSITY_MAP_OFFSET_EXTENSION_NAME() {
        return constants$1225.const$0;
    }
    /**
     * {@snippet :
     * #define VK_NV_COPY_MEMORY_INDIRECT_EXTENSION_NAME "VK_NV_copy_memory_indirect"
     * }
     */
    public static MemorySegment VK_NV_COPY_MEMORY_INDIRECT_EXTENSION_NAME() {
        return constants$1225.const$1;
    }
    /**
     * {@snippet :
     * #define VK_NV_MEMORY_DECOMPRESSION_EXTENSION_NAME "VK_NV_memory_decompression"
     * }
     */
    public static MemorySegment VK_NV_MEMORY_DECOMPRESSION_EXTENSION_NAME() {
        return constants$1225.const$2;
    }
    /**
     * {@snippet :
     * #define VK_NV_LINEAR_COLOR_ATTACHMENT_EXTENSION_NAME "VK_NV_linear_color_attachment"
     * }
     */
    public static MemorySegment VK_NV_LINEAR_COLOR_ATTACHMENT_EXTENSION_NAME() {
        return constants$1225.const$3;
    }
    /**
     * {@snippet :
     * #define VK_GOOGLE_SURFACELESS_QUERY_EXTENSION_NAME "VK_GOOGLE_surfaceless_query"
     * }
     */
    public static MemorySegment VK_GOOGLE_SURFACELESS_QUERY_EXTENSION_NAME() {
        return constants$1225.const$4;
    }
    /**
     * {@snippet :
     * #define VK_EXT_IMAGE_COMPRESSION_CONTROL_SWAPCHAIN_EXTENSION_NAME "VK_EXT_image_compression_control_swapchain"
     * }
     */
    public static MemorySegment VK_EXT_IMAGE_COMPRESSION_CONTROL_SWAPCHAIN_EXTENSION_NAME() {
        return constants$1225.const$5;
    }
    /**
     * {@snippet :
     * #define VK_QCOM_IMAGE_PROCESSING_EXTENSION_NAME "VK_QCOM_image_processing"
     * }
     */
    public static MemorySegment VK_QCOM_IMAGE_PROCESSING_EXTENSION_NAME() {
        return constants$1226.const$0;
    }
    /**
     * {@snippet :
     * #define VK_EXT_EXTENDED_DYNAMIC_STATE_3_EXTENSION_NAME "VK_EXT_extended_dynamic_state3"
     * }
     */
    public static MemorySegment VK_EXT_EXTENDED_DYNAMIC_STATE_3_EXTENSION_NAME() {
        return constants$1226.const$1;
    }
    /**
     * {@snippet :
     * #define VK_EXT_SUBPASS_MERGE_FEEDBACK_EXTENSION_NAME "VK_EXT_subpass_merge_feedback"
     * }
     */
    public static MemorySegment VK_EXT_SUBPASS_MERGE_FEEDBACK_EXTENSION_NAME() {
        return constants$1226.const$2;
    }
    /**
     * {@snippet :
     * #define VK_LUNARG_DIRECT_DRIVER_LOADING_EXTENSION_NAME "VK_LUNARG_direct_driver_loading"
     * }
     */
    public static MemorySegment VK_LUNARG_DIRECT_DRIVER_LOADING_EXTENSION_NAME() {
        return constants$1226.const$3;
    }
    /**
     * {@snippet :
     * #define VK_MAX_SHADER_MODULE_IDENTIFIER_SIZE_EXT 32
     * }
     */
    public static int VK_MAX_SHADER_MODULE_IDENTIFIER_SIZE_EXT() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * #define VK_EXT_SHADER_MODULE_IDENTIFIER_EXTENSION_NAME "VK_EXT_shader_module_identifier"
     * }
     */
    public static MemorySegment VK_EXT_SHADER_MODULE_IDENTIFIER_EXTENSION_NAME() {
        return constants$1226.const$4;
    }
    /**
     * {@snippet :
     * #define VK_EXT_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_EXTENSION_NAME "VK_EXT_rasterization_order_attachment_access"
     * }
     */
    public static MemorySegment VK_EXT_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_EXTENSION_NAME() {
        return constants$1226.const$5;
    }
    /**
     * {@snippet :
     * #define VK_NV_OPTICAL_FLOW_EXTENSION_NAME "VK_NV_optical_flow"
     * }
     */
    public static MemorySegment VK_NV_OPTICAL_FLOW_EXTENSION_NAME() {
        return constants$1227.const$0;
    }
    /**
     * {@snippet :
     * #define VK_EXT_LEGACY_DITHERING_EXTENSION_NAME "VK_EXT_legacy_dithering"
     * }
     */
    public static MemorySegment VK_EXT_LEGACY_DITHERING_EXTENSION_NAME() {
        return constants$1227.const$1;
    }
    /**
     * {@snippet :
     * #define VK_EXT_PIPELINE_PROTECTED_ACCESS_EXTENSION_NAME "VK_EXT_pipeline_protected_access"
     * }
     */
    public static MemorySegment VK_EXT_PIPELINE_PROTECTED_ACCESS_EXTENSION_NAME() {
        return constants$1227.const$2;
    }
    /**
     * {@snippet :
     * #define VK_EXT_SHADER_OBJECT_EXTENSION_NAME "VK_EXT_shader_object"
     * }
     */
    public static MemorySegment VK_EXT_SHADER_OBJECT_EXTENSION_NAME() {
        return constants$1227.const$3;
    }
    /**
     * {@snippet :
     * #define VK_QCOM_TILE_PROPERTIES_EXTENSION_NAME "VK_QCOM_tile_properties"
     * }
     */
    public static MemorySegment VK_QCOM_TILE_PROPERTIES_EXTENSION_NAME() {
        return constants$1227.const$4;
    }
    /**
     * {@snippet :
     * #define VK_SEC_AMIGO_PROFILING_EXTENSION_NAME "VK_SEC_amigo_profiling"
     * }
     */
    public static MemorySegment VK_SEC_AMIGO_PROFILING_EXTENSION_NAME() {
        return constants$1227.const$5;
    }
    /**
     * {@snippet :
     * #define VK_QCOM_MULTIVIEW_PER_VIEW_VIEWPORTS_EXTENSION_NAME "VK_QCOM_multiview_per_view_viewports"
     * }
     */
    public static MemorySegment VK_QCOM_MULTIVIEW_PER_VIEW_VIEWPORTS_EXTENSION_NAME() {
        return constants$1228.const$0;
    }
    /**
     * {@snippet :
     * #define VK_NV_RAY_TRACING_INVOCATION_REORDER_EXTENSION_NAME "VK_NV_ray_tracing_invocation_reorder"
     * }
     */
    public static MemorySegment VK_NV_RAY_TRACING_INVOCATION_REORDER_EXTENSION_NAME() {
        return constants$1228.const$1;
    }
    /**
     * {@snippet :
     * #define VK_EXT_MUTABLE_DESCRIPTOR_TYPE_EXTENSION_NAME "VK_EXT_mutable_descriptor_type"
     * }
     */
    public static MemorySegment VK_EXT_MUTABLE_DESCRIPTOR_TYPE_EXTENSION_NAME() {
        return constants$1228.const$2;
    }
    /**
     * {@snippet :
     * #define VK_ARM_SHADER_CORE_BUILTINS_EXTENSION_NAME "VK_ARM_shader_core_builtins"
     * }
     */
    public static MemorySegment VK_ARM_SHADER_CORE_BUILTINS_EXTENSION_NAME() {
        return constants$1228.const$3;
    }
    /**
     * {@snippet :
     * #define VK_EXT_PIPELINE_LIBRARY_GROUP_HANDLES_EXTENSION_NAME "VK_EXT_pipeline_library_group_handles"
     * }
     */
    public static MemorySegment VK_EXT_PIPELINE_LIBRARY_GROUP_HANDLES_EXTENSION_NAME() {
        return constants$1228.const$4;
    }
    /**
     * {@snippet :
     * #define VK_QCOM_MULTIVIEW_PER_VIEW_RENDER_AREAS_EXTENSION_NAME "VK_QCOM_multiview_per_view_render_areas"
     * }
     */
    public static MemorySegment VK_QCOM_MULTIVIEW_PER_VIEW_RENDER_AREAS_EXTENSION_NAME() {
        return constants$1228.const$5;
    }
    /**
     * {@snippet :
     * #define VK_EXT_ATTACHMENT_FEEDBACK_LOOP_DYNAMIC_STATE_EXTENSION_NAME "VK_EXT_attachment_feedback_loop_dynamic_state"
     * }
     */
    public static MemorySegment VK_EXT_ATTACHMENT_FEEDBACK_LOOP_DYNAMIC_STATE_EXTENSION_NAME() {
        return constants$1229.const$0;
    }
    /**
     * {@snippet :
     * #define VK_KHR_ACCELERATION_STRUCTURE_EXTENSION_NAME "VK_KHR_acceleration_structure"
     * }
     */
    public static MemorySegment VK_KHR_ACCELERATION_STRUCTURE_EXTENSION_NAME() {
        return constants$1229.const$1;
    }
    /**
     * {@snippet :
     * #define VK_KHR_RAY_TRACING_PIPELINE_EXTENSION_NAME "VK_KHR_ray_tracing_pipeline"
     * }
     */
    public static MemorySegment VK_KHR_RAY_TRACING_PIPELINE_EXTENSION_NAME() {
        return constants$1229.const$2;
    }
    /**
     * {@snippet :
     * #define VK_KHR_RAY_QUERY_EXTENSION_NAME "VK_KHR_ray_query"
     * }
     */
    public static MemorySegment VK_KHR_RAY_QUERY_EXTENSION_NAME() {
        return constants$1229.const$3;
    }
    /**
     * {@snippet :
     * #define VK_EXT_MESH_SHADER_EXTENSION_NAME "VK_EXT_mesh_shader"
     * }
     */
    public static MemorySegment VK_EXT_MESH_SHADER_EXTENSION_NAME() {
        return constants$1229.const$4;
    }
    /**
     * {@snippet :
     * #define WINAPI_PARTITION_SERVER 0
     * }
     */
    public static int WINAPI_PARTITION_SERVER() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define WINAPI_PARTITION_PKG_WINTRUST 0
     * }
     */
    public static int WINAPI_PARTITION_PKG_WINTRUST() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define WINAPI_PARTITION_PKG_WEBSERVICES 0
     * }
     */
    public static int WINAPI_PARTITION_PKG_WEBSERVICES() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define WINAPI_PARTITION_PKG_EVENTLOGSERVICE 0
     * }
     */
    public static int WINAPI_PARTITION_PKG_EVENTLOGSERVICE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define WINAPI_PARTITION_PKG_VHD 0
     * }
     */
    public static int WINAPI_PARTITION_PKG_VHD() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define WINAPI_PARTITION_PKG_PERFCOUNTER 0
     * }
     */
    public static int WINAPI_PARTITION_PKG_PERFCOUNTER() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define WINAPI_PARTITION_PKG_SECURESTARTUP 0
     * }
     */
    public static int WINAPI_PARTITION_PKG_SECURESTARTUP() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define WINAPI_PARTITION_PKG_REMOTEFS 0
     * }
     */
    public static int WINAPI_PARTITION_PKG_REMOTEFS() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define WINAPI_PARTITION_PKG_BOOTABLESKU 0
     * }
     */
    public static int WINAPI_PARTITION_PKG_BOOTABLESKU() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define WINAPI_PARTITION_PKG_CMDTOOLS 0
     * }
     */
    public static int WINAPI_PARTITION_PKG_CMDTOOLS() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define WINAPI_PARTITION_PKG_DISM 0
     * }
     */
    public static int WINAPI_PARTITION_PKG_DISM() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define WINAPI_PARTITION_PKG_CORESETUP 0
     * }
     */
    public static int WINAPI_PARTITION_PKG_CORESETUP() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define WINAPI_PARTITION_PKG_APPRUNTIME 0
     * }
     */
    public static int WINAPI_PARTITION_PKG_APPRUNTIME() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define WINAPI_PARTITION_PKG_ESENT 0
     * }
     */
    public static int WINAPI_PARTITION_PKG_ESENT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define WINAPI_PARTITION_PKG_WINMGMT 0
     * }
     */
    public static int WINAPI_PARTITION_PKG_WINMGMT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define WINAPI_PARTITION_PKG_WNV 0
     * }
     */
    public static int WINAPI_PARTITION_PKG_WNV() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define WINAPI_PARTITION_PKG_CLUSTER 0
     * }
     */
    public static int WINAPI_PARTITION_PKG_CLUSTER() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define WINAPI_PARTITION_PKG_VSS 0
     * }
     */
    public static int WINAPI_PARTITION_PKG_VSS() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define WINAPI_PARTITION_PKG_TRAFFIC 0
     * }
     */
    public static int WINAPI_PARTITION_PKG_TRAFFIC() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define WINAPI_PARTITION_PKG_ISCSI 0
     * }
     */
    public static int WINAPI_PARTITION_PKG_ISCSI() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define WINAPI_PARTITION_PKG_STORAGE 0
     * }
     */
    public static int WINAPI_PARTITION_PKG_STORAGE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define WINAPI_PARTITION_PKG_MPSSVC 0
     * }
     */
    public static int WINAPI_PARTITION_PKG_MPSSVC() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define WINAPI_PARTITION_PKG_APPXDEPLOYMENT 0
     * }
     */
    public static int WINAPI_PARTITION_PKG_APPXDEPLOYMENT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define WINAPI_PARTITION_PKG_WER 0
     * }
     */
    public static int WINAPI_PARTITION_PKG_WER() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define WINAPI_FAMILY_APP 2
     * }
     */
    public static int WINAPI_FAMILY_APP() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define WINAPI_FAMILY 100
     * }
     */
    public static int WINAPI_FAMILY() {
        return (int)100L;
    }
    /**
     * {@snippet :
     * #define WINAPI_PARTITION_DESKTOP 1
     * }
     */
    public static int WINAPI_PARTITION_DESKTOP() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define WINAPI_PARTITION_APP 1
     * }
     */
    public static int WINAPI_PARTITION_APP() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define WINAPI_PARTITION_PC_APP 1
     * }
     */
    public static int WINAPI_PARTITION_PC_APP() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define WINAPI_PARTITION_PHONE_APP 0
     * }
     */
    public static int WINAPI_PARTITION_PHONE_APP() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define WINAPI_PARTITION_GAMES 1
     * }
     */
    public static int WINAPI_PARTITION_GAMES() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define WINAPI_PARTITION_SYSTEM 0
     * }
     */
    public static int WINAPI_PARTITION_SYSTEM() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define WINAPI_PARTITION_PHONE 0
     * }
     */
    public static int WINAPI_PARTITION_PHONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define GL_CLIENT_ALL_ATTRIB_BITS 4294967295
     * }
     */
    public static int GL_CLIENT_ALL_ATTRIB_BITS() {
        return (int)4294967295L;
    }
    /**
     * {@snippet :
     * #define GL_DOUBLE_EXT 5130
     * }
     */
    public static int GL_DOUBLE_EXT() {
        return (int)5130L;
    }
    /**
     * {@snippet :
     * #define GL_LOGIC_OP 3057
     * }
     */
    public static int GL_LOGIC_OP() {
        return (int)3057L;
    }
    /**
     * {@snippet :
     * #define GL_TEXTURE_COMPONENTS 4099
     * }
     */
    public static int GL_TEXTURE_COMPONENTS() {
        return (int)4099L;
    }
    /**
     * {@snippet :
     * #define GLFW_HAT_RIGHT_UP 3
     * }
     */
    public static int GLFW_HAT_RIGHT_UP() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define GLFW_HAT_RIGHT_DOWN 6
     * }
     */
    public static int GLFW_HAT_RIGHT_DOWN() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * #define GLFW_HAT_LEFT_UP 9
     * }
     */
    public static int GLFW_HAT_LEFT_UP() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * #define GLFW_HAT_LEFT_DOWN 12
     * }
     */
    public static int GLFW_HAT_LEFT_DOWN() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_UNKNOWN -1
     * }
     */
    public static int GLFW_KEY_UNKNOWN() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * #define GLFW_KEY_LAST 348
     * }
     */
    public static int GLFW_KEY_LAST() {
        return (int)348L;
    }
    /**
     * {@snippet :
     * #define GLFW_MOUSE_BUTTON_LAST 7
     * }
     */
    public static int GLFW_MOUSE_BUTTON_LAST() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * #define GLFW_MOUSE_BUTTON_LEFT 0
     * }
     */
    public static int GLFW_MOUSE_BUTTON_LEFT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define GLFW_MOUSE_BUTTON_RIGHT 1
     * }
     */
    public static int GLFW_MOUSE_BUTTON_RIGHT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define GLFW_MOUSE_BUTTON_MIDDLE 2
     * }
     */
    public static int GLFW_MOUSE_BUTTON_MIDDLE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define GLFW_JOYSTICK_LAST 15
     * }
     */
    public static int GLFW_JOYSTICK_LAST() {
        return (int)15L;
    }
    /**
     * {@snippet :
     * #define GLFW_GAMEPAD_BUTTON_LAST 14
     * }
     */
    public static int GLFW_GAMEPAD_BUTTON_LAST() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * #define GLFW_GAMEPAD_BUTTON_CROSS 0
     * }
     */
    public static int GLFW_GAMEPAD_BUTTON_CROSS() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define GLFW_GAMEPAD_BUTTON_CIRCLE 1
     * }
     */
    public static int GLFW_GAMEPAD_BUTTON_CIRCLE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define GLFW_GAMEPAD_BUTTON_SQUARE 2
     * }
     */
    public static int GLFW_GAMEPAD_BUTTON_SQUARE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define GLFW_GAMEPAD_BUTTON_TRIANGLE 3
     * }
     */
    public static int GLFW_GAMEPAD_BUTTON_TRIANGLE() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define GLFW_GAMEPAD_AXIS_LAST 5
     * }
     */
    public static int GLFW_GAMEPAD_AXIS_LAST() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * #define GLFW_OPENGL_DEBUG_CONTEXT 139271
     * }
     */
    public static int GLFW_OPENGL_DEBUG_CONTEXT() {
        return (int)139271L;
    }
    /**
     * {@snippet :
     * #define GLFW_ANY_POSITION 2147483648
     * }
     */
    public static int GLFW_ANY_POSITION() {
        return (int)2147483648L;
    }
    /**
     * {@snippet :
     * #define GLFW_HRESIZE_CURSOR 221189
     * }
     */
    public static int GLFW_HRESIZE_CURSOR() {
        return (int)221189L;
    }
    /**
     * {@snippet :
     * #define GLFW_VRESIZE_CURSOR 221190
     * }
     */
    public static int GLFW_VRESIZE_CURSOR() {
        return (int)221190L;
    }
    /**
     * {@snippet :
     * #define GLFW_HAND_CURSOR 221188
     * }
     */
    public static int GLFW_HAND_CURSOR() {
        return (int)221188L;
    }
    /**
     * {@snippet :
     * #define GLFW_DONT_CARE -1
     * }
     */
    public static int GLFW_DONT_CARE() {
        return (int)-1L;
    }
}


