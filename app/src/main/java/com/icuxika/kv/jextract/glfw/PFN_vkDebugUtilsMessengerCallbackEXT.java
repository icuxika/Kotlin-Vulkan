// Generated by jextract

package com.icuxika.kv.jextract.glfw;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * unsigned int (*PFN_vkDebugUtilsMessengerCallbackEXT)(enum VkDebugUtilsMessageSeverityFlagBitsEXT messageSeverity,unsigned int messageTypes,struct VkDebugUtilsMessengerCallbackDataEXT* pCallbackData,void* pUserData);
 * }
 */
public interface PFN_vkDebugUtilsMessengerCallbackEXT {

    int apply(int messageSeverity, int messageTypes, java.lang.foreign.MemorySegment pCallbackData, java.lang.foreign.MemorySegment pUserData);
    static MemorySegment allocate(PFN_vkDebugUtilsMessengerCallbackEXT fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$681.const$1, fi, constants$681.const$0, scope);
    }
    static PFN_vkDebugUtilsMessengerCallbackEXT ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (int _messageSeverity, int _messageTypes, java.lang.foreign.MemorySegment _pCallbackData, java.lang.foreign.MemorySegment _pUserData) -> {
            try {
                return (int)constants$681.const$2.invokeExact(symbol, _messageSeverity, _messageTypes, _pCallbackData, _pUserData);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


