// Generated by jextract

package com.icuxika.kv.jextract.glfw;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct VkDebugUtilsMessengerCallbackDataEXT {
 *     VkStructureType sType;
 *     void* pNext;
 *     VkDebugUtilsMessengerCallbackDataFlagsEXT flags;
 *     char* pMessageIdName;
 *     int32_t messageIdNumber;
 *     char* pMessage;
 *     uint32_t queueLabelCount;
 *     const VkDebugUtilsLabelEXT* pQueueLabels;
 *     uint32_t cmdBufLabelCount;
 *     const VkDebugUtilsLabelEXT* pCmdBufLabels;
 *     uint32_t objectCount;
 *     const VkDebugUtilsObjectNameInfoEXT* pObjects;
 * };
 * }
 */
public class VkDebugUtilsMessengerCallbackDataEXT {

    public static MemoryLayout $LAYOUT() {
        return constants$678.const$5;
    }
    public static VarHandle sType$VH() {
        return constants$679.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * VkStructureType sType;
     * }
     */
    public static int sType$get(MemorySegment seg) {
        return (int)constants$679.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * VkStructureType sType;
     * }
     */
    public static void sType$set(MemorySegment seg, int x) {
        constants$679.const$0.set(seg, x);
    }
    public static int sType$get(MemorySegment seg, long index) {
        return (int)constants$679.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void sType$set(MemorySegment seg, long index, int x) {
        constants$679.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pNext$VH() {
        return constants$679.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * void* pNext;
     * }
     */
    public static MemorySegment pNext$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$679.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * void* pNext;
     * }
     */
    public static void pNext$set(MemorySegment seg, MemorySegment x) {
        constants$679.const$1.set(seg, x);
    }
    public static MemorySegment pNext$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$679.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void pNext$set(MemorySegment seg, long index, MemorySegment x) {
        constants$679.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle flags$VH() {
        return constants$679.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * VkDebugUtilsMessengerCallbackDataFlagsEXT flags;
     * }
     */
    public static int flags$get(MemorySegment seg) {
        return (int)constants$679.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * VkDebugUtilsMessengerCallbackDataFlagsEXT flags;
     * }
     */
    public static void flags$set(MemorySegment seg, int x) {
        constants$679.const$2.set(seg, x);
    }
    public static int flags$get(MemorySegment seg, long index) {
        return (int)constants$679.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void flags$set(MemorySegment seg, long index, int x) {
        constants$679.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pMessageIdName$VH() {
        return constants$679.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * char* pMessageIdName;
     * }
     */
    public static MemorySegment pMessageIdName$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$679.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * char* pMessageIdName;
     * }
     */
    public static void pMessageIdName$set(MemorySegment seg, MemorySegment x) {
        constants$679.const$3.set(seg, x);
    }
    public static MemorySegment pMessageIdName$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$679.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void pMessageIdName$set(MemorySegment seg, long index, MemorySegment x) {
        constants$679.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle messageIdNumber$VH() {
        return constants$679.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int32_t messageIdNumber;
     * }
     */
    public static int messageIdNumber$get(MemorySegment seg) {
        return (int)constants$679.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int32_t messageIdNumber;
     * }
     */
    public static void messageIdNumber$set(MemorySegment seg, int x) {
        constants$679.const$4.set(seg, x);
    }
    public static int messageIdNumber$get(MemorySegment seg, long index) {
        return (int)constants$679.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void messageIdNumber$set(MemorySegment seg, long index, int x) {
        constants$679.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pMessage$VH() {
        return constants$679.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * char* pMessage;
     * }
     */
    public static MemorySegment pMessage$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$679.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * char* pMessage;
     * }
     */
    public static void pMessage$set(MemorySegment seg, MemorySegment x) {
        constants$679.const$5.set(seg, x);
    }
    public static MemorySegment pMessage$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$679.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void pMessage$set(MemorySegment seg, long index, MemorySegment x) {
        constants$679.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle queueLabelCount$VH() {
        return constants$680.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint32_t queueLabelCount;
     * }
     */
    public static int queueLabelCount$get(MemorySegment seg) {
        return (int)constants$680.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint32_t queueLabelCount;
     * }
     */
    public static void queueLabelCount$set(MemorySegment seg, int x) {
        constants$680.const$0.set(seg, x);
    }
    public static int queueLabelCount$get(MemorySegment seg, long index) {
        return (int)constants$680.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void queueLabelCount$set(MemorySegment seg, long index, int x) {
        constants$680.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pQueueLabels$VH() {
        return constants$680.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * const VkDebugUtilsLabelEXT* pQueueLabels;
     * }
     */
    public static MemorySegment pQueueLabels$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$680.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * const VkDebugUtilsLabelEXT* pQueueLabels;
     * }
     */
    public static void pQueueLabels$set(MemorySegment seg, MemorySegment x) {
        constants$680.const$1.set(seg, x);
    }
    public static MemorySegment pQueueLabels$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$680.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void pQueueLabels$set(MemorySegment seg, long index, MemorySegment x) {
        constants$680.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle cmdBufLabelCount$VH() {
        return constants$680.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint32_t cmdBufLabelCount;
     * }
     */
    public static int cmdBufLabelCount$get(MemorySegment seg) {
        return (int)constants$680.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint32_t cmdBufLabelCount;
     * }
     */
    public static void cmdBufLabelCount$set(MemorySegment seg, int x) {
        constants$680.const$2.set(seg, x);
    }
    public static int cmdBufLabelCount$get(MemorySegment seg, long index) {
        return (int)constants$680.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void cmdBufLabelCount$set(MemorySegment seg, long index, int x) {
        constants$680.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pCmdBufLabels$VH() {
        return constants$680.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * const VkDebugUtilsLabelEXT* pCmdBufLabels;
     * }
     */
    public static MemorySegment pCmdBufLabels$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$680.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * const VkDebugUtilsLabelEXT* pCmdBufLabels;
     * }
     */
    public static void pCmdBufLabels$set(MemorySegment seg, MemorySegment x) {
        constants$680.const$3.set(seg, x);
    }
    public static MemorySegment pCmdBufLabels$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$680.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void pCmdBufLabels$set(MemorySegment seg, long index, MemorySegment x) {
        constants$680.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle objectCount$VH() {
        return constants$680.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint32_t objectCount;
     * }
     */
    public static int objectCount$get(MemorySegment seg) {
        return (int)constants$680.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint32_t objectCount;
     * }
     */
    public static void objectCount$set(MemorySegment seg, int x) {
        constants$680.const$4.set(seg, x);
    }
    public static int objectCount$get(MemorySegment seg, long index) {
        return (int)constants$680.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void objectCount$set(MemorySegment seg, long index, int x) {
        constants$680.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pObjects$VH() {
        return constants$680.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * const VkDebugUtilsObjectNameInfoEXT* pObjects;
     * }
     */
    public static MemorySegment pObjects$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$680.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * const VkDebugUtilsObjectNameInfoEXT* pObjects;
     * }
     */
    public static void pObjects$set(MemorySegment seg, MemorySegment x) {
        constants$680.const$5.set(seg, x);
    }
    public static MemorySegment pObjects$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$680.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void pObjects$set(MemorySegment seg, long index, MemorySegment x) {
        constants$680.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


