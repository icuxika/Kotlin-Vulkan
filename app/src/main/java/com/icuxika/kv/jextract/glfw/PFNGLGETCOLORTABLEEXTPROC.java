// Generated by jextract

package com.icuxika.kv.jextract.glfw;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * void (*PFNGLGETCOLORTABLEEXTPROC)(unsigned int target,unsigned int format,unsigned int type,void* data);
 * }
 */
public interface PFNGLGETCOLORTABLEEXTPROC {

    void apply(int target, int format, int type, java.lang.foreign.MemorySegment data);
    static MemorySegment allocate(PFNGLGETCOLORTABLEEXTPROC fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$1148.const$5, fi, constants$1093.const$2, scope);
    }
    static PFNGLGETCOLORTABLEEXTPROC ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (int _target, int _format, int _type, java.lang.foreign.MemorySegment _data) -> {
            try {
                constants$1146.const$1.invokeExact(symbol, _target, _format, _type, _data);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


