// Generated by jextract

package com.icuxika.kv.jextract.glfw;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * enum VkResult (*PFN_vkGetMemoryFdPropertiesKHR)(struct VkDevice_T* device,enum VkExternalMemoryHandleTypeFlagBits handleType,int fd,struct VkMemoryFdPropertiesKHR* pMemoryFdProperties);
 * }
 */
public interface PFN_vkGetMemoryFdPropertiesKHR {

    int apply(java.lang.foreign.MemorySegment device, int handleType, int fd, java.lang.foreign.MemorySegment pMemoryFdProperties);
    static MemorySegment allocate(PFN_vkGetMemoryFdPropertiesKHR fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$506.const$5, fi, constants$506.const$4, scope);
    }
    static PFN_vkGetMemoryFdPropertiesKHR ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (java.lang.foreign.MemorySegment _device, int _handleType, int _fd, java.lang.foreign.MemorySegment _pMemoryFdProperties) -> {
            try {
                return (int)constants$507.const$0.invokeExact(symbol, _device, _handleType, _fd, _pMemoryFdProperties);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


